[{"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\index.js":"1","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\App.js":"2","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\serviceWorker.js":"3","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\index.js":"4","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\store\\index.js":"5","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\reducers\\index.js":"6","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\sagas\\index.js":"7","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\configs\\AppConfig.js":"8","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\reducers\\Auth.js":"9","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\reducers\\Theme.js":"10","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\sagas\\Auth.js":"11","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\redux\\sagas\\customerSaga.js":"12","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\reducers\\leadListReducer.js":"13","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\reducers\\projectTypeReducer.js":"14","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\reducers\\followUpReducer.js":"15","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\redux\\reducers\\customerReducer.js":"16","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\reducers\\recommendationReducer.js":"17","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\sagas\\followUpSaga.js":"18","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\sagas\\leadListSaga.js":"19","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\sagas\\projectTypeSaga.js":"20","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\sagas\\recommendationSaga.js":"21","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\redux\\sagas\\customerunblockListSaga.js":"22","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\redux\\sagas\\repeaterSaga.js":"23","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\redux\\reducers\\customerunblockListReducer.js":"24","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\redux\\reducers\\repeaterReducer.js":"25","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\reduces\\userRoleListReducer.js":"26","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\reduces\\userPermissionListReducer.js":"27","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\reduces\\userListReducer.js":"28","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\sagas\\userPermissionListSaga.js":"29","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\sagas\\userListSaga.js":"30","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\home\\redux\\sagas\\userPermissionSaga.js":"31","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\home\\redux\\reducers\\userPermissionReducer.js":"32","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\reducers\\quotationListReducer.js":"33","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\sagas\\quotationListSaga.js":"34","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\sagas\\userRoleListSaga.js":"35","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\reducers\\quotationApprovalListReducer.js":"36","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\sagas\\quotationApprovalListSaga.js":"37","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\sagas\\quotationCreateSaga.js":"38","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\lang\\index.js":"39","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\layouts\\app-layout\\index.js":"40","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\layouts\\auth-layout\\index.js":"41","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\configs\\EnvironmentConfig.js":"42","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\constants\\Auth.js":"43","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\constants\\Theme.js":"44","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\reducers\\quotationCreateReducer.js":"45","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\session\\Session.js":"46","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\actions\\Auth.js":"47","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\quotationCreateAPI.js":"48","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\quotationApprovalListApi.js":"49","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\userRoleListApi.js":"50","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\quotationListApi.js":"51","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\userListApi.js":"52","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\userPermissionListApi.js":"53","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\home\\redux\\userPermissionApi.js":"54","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\redux\\repeaterApi.js":"55","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\actions\\quotationCreateAction.js":"56","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\actions\\quotationListAction.js":"57","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\actions\\quotationApprovalListAction.js":"58","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\types\\quotationCreateType.js":"59","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\types\\quotationApprovalListType.js":"60","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\types\\quotationListType.js":"61","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\actions\\userRoleListAction.js":"62","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\actions\\userListAction.js":"63","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\actions\\userPermissionListAction.js":"64","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\types\\userRoleListType.js":"65","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\types\\userListType.js":"66","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\types\\userPermissionListType.js":"67","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\home\\redux\\types\\userPermissionTypes.js":"68","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\redux\\types\\customerunblockListTypes.js":"69","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\home\\redux\\actions\\userPermissionAction.js":"70","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\redux\\types\\repeaterTypes.js":"71","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\redux\\actions\\repeaterAction.js":"72","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\lang\\entries\\si_LK.js":"73","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\lang\\entries\\en_US.js":"74","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\redux\\customerunblockListApi.js":"75","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\recommendationApi.js":"76","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\redux\\actions\\customerunblockListActions.js":"77","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\projectTypeApi.js":"78","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\configs\\NavigationConfig.js":"79","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\actions\\recommendationAction.js":"80","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\actions\\projectTypeAction.js":"81","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\leadApi.js":"82","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\actions\\leadListAction.js":"83","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\followUpApi.js":"84","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\actions\\followUpAction.js":"85","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\redux\\api.js":"86","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\types\\leadListType.js":"87","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\types\\recommendationType.js":"88","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\types\\projectTypeTypes.js":"89","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\types\\followUpTypes.js":"90","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\redux\\actions\\customerAction.js":"91","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\redux\\types\\customerTypes.js":"92","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\constants\\ThemeConstant.js":"93","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\Footer.js":"94","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\PageHeader.js":"95","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\TopNav.js":"96","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\HeaderNav.js":"97","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\SideNav.js":"98","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\MobileNav.js":"99","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\index.js":"100","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\auth-views\\index.js":"101","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\utils\\index.js":"102","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\configs\\NavigationAdminConfig.js":"103","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\http\\axiosHttp.js":"104","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\Logo.js":"105","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\MenuContentAdmin.js":"106","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\MenuContent.js":"107","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\NavLanguage.js":"108","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\NavNotification.js":"109","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\NavProfile.js":"110","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockDetails\\CustomerUnblockDetailsMain.js":"111","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockList\\CustomerUnblockMain.js":"112","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Wired-Panel\\WiredPanelMain.js":"113","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\PowerDB\\PowerDBMain.js":"114","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\CableManagement\\CableManagementMain.js":"115","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Generator\\GeneratorMain.js":"116","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Non-WiredPanel\\NonWiredPanelMain.js":"117","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Customer\\CustomerDetails.js":"118","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\CCTV\\CctvMain.js":"119","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\LightningDetails\\LightningMain.js":"120","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Solar\\SolarMain.js":"121","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\QBUS\\QBusMain.js":"122","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\PRBX\\PrbxMain.js":"123","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\BedheadPanel\\BedheadPanelMain.js":"124","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\UPS\\UpsMain.js":"125","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeaterDetails\\RepeterDetails.js":"126","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeterList\\MenuItem.js":"127","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeterList\\RepeterListMain.js":"128","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationCreate\\QuotationCreate.js":"129","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalDetails\\QuotationApprovalDetails.js":"130","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\actions\\Theme.js":"131","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\shared-components\\AvatarStatus\\index.js":"132","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\auth-views\\authentication\\login\\index.js":"133","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockDetails\\CustomerUnblockDetails.js":"134","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockDetails\\SideCards.js":"135","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockDetails\\Header.js":"136","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockList\\CustomerUnblockList.js":"137","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Solar\\SolarDeatils.js":"138","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\BedheadPanel\\BedheadPanelDetais.js":"139","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeterList\\RepeterList.js":"140","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeaterComponents\\Header.js":"141","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\shared-components\\Flex\\index.js":"142","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationCreate\\ItemTable.js":"143","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeaterDetails\\RepeterDetailsComponents\\SideCards.js":"144","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeaterDetails\\RepeterDetailsComponents\\Table.js":"145","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalDetails\\QRejectModal.js":"146","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalDetails\\QApprovalModal.js":"147","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalDetails\\ApprovalNavBar.js":"148","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalDetails\\ApprovalSideCards.js":"149","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\util-components\\Icon\\index.js":"150","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\shared-components\\Loading\\index.js":"151","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\AppBreadcrumb.js":"152","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockDetails\\CustomerUnBlockCreditPeriodModal.js":"153","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockDetails\\CustomerUnblockCreditLimitModal.js":"154","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeterList\\repeterDummy.js":"155","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeterList\\utilsRepeter.js":"156","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeaterDetails\\RepeterDetailsComponents\\NavBar.js":"157","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\quotationUtil.js":"158","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\auth-views\\authentication\\login-2\\index.js":"159","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\PageHeaderAlt.js":"160","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\shared-components\\EllipsisDropdown\\index.js":"161","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\auth-views\\components\\LoginForm.js":"162","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\util-components\\IntlMessage\\index.js":"163","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\services\\JwtAuthService.js":"164","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\assets\\svg\\icon.js":"165","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\util-components\\CustomIcon\\index.js":"166","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\auth\\FetchInterceptor.js":"167","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\history.js":"168","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\utill.js":"169","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\PRBX\\PrbxDetails.js":"170","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\QBUS\\QBusDetails.js":"171","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Non-WiredPanel\\NonWiredPanelDetails.js":"172","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\LightningDetails\\LightningDetails.js":"173","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Generator\\GeneratorDetails.js":"174","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\CCTV\\CctvDetails.js":"175","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\PowerDB\\PowerDBDetails.js":"176","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\CableManagement\\CableManagementDetails.js":"177","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\UPS\\UpsDetails.js":"178","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Wired-Panel\\WiredPanelDetails.js":"179","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\POUpload\\POUploadMain.js":"180","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalList\\QuotationApprovalListMain.js":"181","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationDetails\\QuotationDetailsMain.js":"182","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationList\\QuotationListMain.js":"183","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\EditLead.js":"184","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\AddLead.js":"185","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadList.js":"186","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadDetails.js":"187","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\LeadDashboard.js":"188","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-list\\EditCustomer.js":"189","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-list\\AddCustomer.js":"190","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\CustomerMain.js":"191","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\NavPanel.js":"192","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\UserManagement\\UserListMain.js":"193","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-details\\CustomerDetails.js":"194","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\RoleManagement\\RoleListMain.js":"195","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\PermissionManagement\\PermissionListMain.js":"196","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\home\\index.js":"197","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\admin-panel\\index.js":"198","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\NavSearch\\index.js":"199","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationList\\QuotationList.js":"200","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListItemMain.js":"201","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadRecommendation.js":"202","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadFollowUp.js":"203","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadDetailsTimeline.js":"204","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadAttachment.js":"205","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-list\\CustomerList.js":"206","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\map\\LocationPicker.js":"207","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\PermissionManagement\\AddPermission.js":"208","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\PermissionManagement\\PermissionList.js":"209","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\RoleManagement\\RoleList.js":"210","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\RoleManagement\\AddRole.js":"211","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\CustomerKanban.js":"212","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\utils.js":"213","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\UserManagement\\UserList.js":"214","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-details\\customer-details-components\\SideCards.js":"215","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-details\\customer-details-components\\NavBar.js":"216","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\ModalForm.js":"217","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\reoreder.js":"218","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\Board.js":"219","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\ScrumboardContext.js":"220","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadComponents\\SideCards.js":"221","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadComponents\\NavBar.js":"222","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\NavSearch\\SearchInput.js":"223","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\admin-panel\\admin-panel.js":"224","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\admin-panel\\areachart.js":"225","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListItem.js":"226","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\map\\map.js":"227","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\utils.js":"228","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\RoleManagement\\EditRole.js":"229","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\ScrumboardData.js":"230","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\ModalForm.js":"231","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\reoreder.js":"232","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\ScrumboardContext.js":"233","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\Board.js":"234","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-details\\customer-details-components\\CRejectModal.js":"235","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-details\\customer-details-components\\CApprovalModal.js":"236","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\BoardCard.js":"237","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\ScrumboardData.js":"238","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\shared-components\\StatisticWidget\\index.js":"239","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\BoardCard.js":"240","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\constants\\DateConstant.js":"241","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadTranferModal.js":"242","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListInfo.js":"243","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadUpdateModal.js":"244","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadComponents\\utils.js":"245","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\constants\\ChartConstant.js":"246","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\utils.js":"247","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\map\\LocationPicker.js":"248","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationDetails\\NavBar.js":"249","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationDetails\\SideCards.js":"250","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\POUpload\\SideCards.js":"251","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalList\\QuotaionApprovalList.js":"252","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\POUpload\\Header.js":"253","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\POUpload\\POUploadForm.js":"254","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\map\\map.js":"255","E:\\NSBM\\PLDC\\project\\my-todo\\src\\index.js":"256","E:\\NSBM\\PLDC\\project\\my-todo\\src\\serviceWorker.js":"257","E:\\NSBM\\PLDC\\project\\my-todo\\src\\App.js":"258","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\index.js":"259","E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\store\\index.js":"260","E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\reducers\\index.js":"261","E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\sagas\\index.js":"262","E:\\NSBM\\PLDC\\project\\my-todo\\src\\configs\\AppConfig.js":"263","E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\reducers\\Auth.js":"264","E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\reducers\\Theme.js":"265","E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\sagas\\Auth.js":"266","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\home\\redux\\reducers\\userPermissionReducer.js":"267","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\home\\redux\\sagas\\userPermissionSaga.js":"268","E:\\NSBM\\PLDC\\project\\my-todo\\src\\lang\\index.js":"269","E:\\NSBM\\PLDC\\project\\my-todo\\src\\layouts\\app-layout\\index.js":"270","E:\\NSBM\\PLDC\\project\\my-todo\\src\\layouts\\auth-layout\\index.js":"271","E:\\NSBM\\PLDC\\project\\my-todo\\src\\configs\\EnvironmentConfig.js":"272","E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\constants\\Auth.js":"273","E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\constants\\Theme.js":"274","E:\\NSBM\\PLDC\\project\\my-todo\\src\\session\\Session.js":"275","E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\actions\\Auth.js":"276","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\home\\redux\\userPermissionApi.js":"277","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\home\\redux\\actions\\userPermissionAction.js":"278","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\home\\redux\\types\\userPermissionTypes.js":"279","E:\\NSBM\\PLDC\\project\\my-todo\\src\\lang\\entries\\si_LK.js":"280","E:\\NSBM\\PLDC\\project\\my-todo\\src\\constants\\ThemeConstant.js":"281","E:\\NSBM\\PLDC\\project\\my-todo\\src\\lang\\entries\\en_US.js":"282","E:\\NSBM\\PLDC\\project\\my-todo\\src\\configs\\NavigationConfig.js":"283","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\HeaderNav.js":"284","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\PageHeader.js":"285","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\Footer.js":"286","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\MobileNav.js":"287","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\TopNav.js":"288","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\SideNav.js":"289","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\index.js":"290","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\auth-views\\index.js":"291","E:\\NSBM\\PLDC\\project\\my-todo\\src\\utils\\index.js":"292","E:\\NSBM\\PLDC\\project\\my-todo\\src\\configs\\NavigationAdminConfig.js":"293","E:\\NSBM\\PLDC\\project\\my-todo\\src\\http\\axiosHttp.js":"294","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\Logo.js":"295","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\MenuContent.js":"296","E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\actions\\Theme.js":"297","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\auth-views\\authentication\\login\\index.js":"298","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\shared-components\\Flex\\index.js":"299","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\util-components\\Icon\\index.js":"300","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\AppBreadcrumb.js":"301","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\shared-components\\Loading\\index.js":"302","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\PageHeaderAlt.js":"303","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\auth-views\\authentication\\login-2\\index.js":"304","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\shared-components\\EllipsisDropdown\\index.js":"305","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\auth-views\\components\\LoginForm.js":"306","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\util-components\\IntlMessage\\index.js":"307","E:\\NSBM\\PLDC\\project\\my-todo\\src\\services\\JwtAuthService.js":"308","E:\\NSBM\\PLDC\\project\\my-todo\\src\\assets\\svg\\icon.js":"309","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\util-components\\CustomIcon\\index.js":"310","E:\\NSBM\\PLDC\\project\\my-todo\\src\\auth\\FetchInterceptor.js":"311","E:\\NSBM\\PLDC\\project\\my-todo\\src\\history.js":"312","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\MenuContentAdmin.js":"313","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\home\\index.js":"314","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\shared-components\\AvatarStatus\\index.js":"315","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\shared-components\\StatisticWidget\\index.js":"316","E:\\NSBM\\PLDC\\project\\my-todo\\src\\constants\\ChartConstant.js":"317","E:\\NSBM\\PLDC\\project\\my-todo\\src\\constants\\DateConstant.js":"318","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\NavLanguage.js":"319","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\NavNotification.js":"320","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\NavProfile.js":"321","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\NavPanel.js":"322","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\NavSearch\\index.js":"323","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\NavSearch\\SearchInput.js":"324","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\redux\\sagas\\todoSagas.js":"325","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\redux\\reducers\\todoReducer.js":"326","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todoMain.js":"327","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-listTable\\todoList.js":"328","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\redux\\action\\todoAction.js":"329","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\redux\\types\\todoTypes.js":"330","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\redux\\api.js":"331","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-listTable\\addTodo.js":"332","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-listTable\\editTodo.js":"333","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\todoKanban.js":"334","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\Board.js":"335","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\ScrumboardContext.js":"336","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\reoreder.js":"337","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\utils.js":"338","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\BoardCard.js":"339","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\ScrumboardData.js":"340","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\index.js":"341","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\App.js":"342","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\serviceWorker.js":"343","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\index.js":"344","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\store\\index.js":"345","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\sagas\\index.js":"346","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\reducers\\index.js":"347","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\configs\\AppConfig.js":"348","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\sagas\\Auth.js":"349","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\redux\\sagas\\todoSagas.js":"350","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\lang\\index.js":"351","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\layouts\\auth-layout\\index.js":"352","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\layouts\\app-layout\\index.js":"353","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\reducers\\Theme.js":"354","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\reducers\\Auth.js":"355","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\configs\\EnvironmentConfig.js":"356","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\redux\\reducers\\todoReducer.js":"357","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\lang\\entries\\en_US.js":"358","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\lang\\entries\\si_LK.js":"359","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\redux\\api.js":"360","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\constants\\ThemeConstant.js":"361","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\redux\\types\\todoTypes.js":"362","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\redux\\action\\todoAction.js":"363","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\actions\\Auth.js":"364","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\session\\Session.js":"365","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\constants\\Auth.js":"366","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\constants\\Theme.js":"367","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\http\\axiosHttp.js":"368","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\auth-views\\index.js":"369","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\utils\\index.js":"370","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\auth-views\\authentication\\login\\index.js":"371","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\shared-components\\Loading\\index.js":"372","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\auth-views\\authentication\\login-2\\index.js":"373","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\auth-views\\components\\LoginForm.js":"374","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\services\\JwtAuthService.js":"375","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\util-components\\CustomIcon\\index.js":"376","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\auth\\FetchInterceptor.js":"377","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\history.js":"378","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\assets\\svg\\icon.js":"379","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\configs\\NavigationConfig.js":"380","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\PageHeader.js":"381","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\Footer.js":"382","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\TopNav.js":"383","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\SideNav.js":"384","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\HeaderNav.js":"385","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\MobileNav.js":"386","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\index.js":"387","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\configs\\NavigationAdminConfig.js":"388","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\MenuContentAdmin.js":"389","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\MenuContent.js":"390","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\Logo.js":"391","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\NavProfile.js":"392","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\NavNotification.js":"393","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\NavLanguage.js":"394","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\NavPanel.js":"395","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\util-components\\IntlMessage\\index.js":"396","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\AppBreadcrumb.js":"397","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\shared-components\\AvatarStatus\\index.js":"398","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\NavSearch\\index.js":"399","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-listTable\\editTodo.js":"400","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todoMain.js":"401","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-listTable\\addTodo.js":"402","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\actions\\Theme.js":"403","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\shared-components\\Flex\\index.js":"404","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\util-components\\Icon\\index.js":"405","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\NavSearch\\SearchInput.js":"406","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-listTable\\todoList.js":"407","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\todoKanban.js":"408","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\utils.js":"409","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\ScrumboardContext.js":"410","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\Board.js":"411","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\reoreder.js":"412","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\ScrumboardData.js":"413","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\BoardCard.js":"414","E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\shared-components\\EllipsisDropdown\\index.js":"415"},{"size":465,"mtime":1614016378000,"results":"416","hashOfConfig":"417"},{"size":529,"mtime":1614016378000,"results":"418","hashOfConfig":"417"},{"size":5086,"mtime":1614016378000,"results":"419","hashOfConfig":"417"},{"size":1462,"mtime":1614016378000,"results":"420","hashOfConfig":"417"},{"size":844,"mtime":1614016378000,"results":"421","hashOfConfig":"417"},{"size":2539,"mtime":1614016378000,"results":"422","hashOfConfig":"417"},{"size":2143,"mtime":1614016378000,"results":"423","hashOfConfig":"417"},{"size":533,"mtime":1614016378000,"results":"424","hashOfConfig":"417"},{"size":1514,"mtime":1614016378000,"results":"425","hashOfConfig":"417"},{"size":1238,"mtime":1614016378000,"results":"426","hashOfConfig":"417"},{"size":2025,"mtime":1614016378000,"results":"427","hashOfConfig":"417"},{"size":4531,"mtime":1614016378000,"results":"428","hashOfConfig":"417"},{"size":5338,"mtime":1614016378000,"results":"429","hashOfConfig":"417"},{"size":683,"mtime":1614016378000,"results":"430","hashOfConfig":"417"},{"size":1014,"mtime":1614016378000,"results":"431","hashOfConfig":"417"},{"size":3751,"mtime":1614016378000,"results":"432","hashOfConfig":"417"},{"size":804,"mtime":1614016378000,"results":"433","hashOfConfig":"417"},{"size":1148,"mtime":1614016378000,"results":"434","hashOfConfig":"417"},{"size":7009,"mtime":1614016378000,"results":"435","hashOfConfig":"417"},{"size":625,"mtime":1614016378000,"results":"436","hashOfConfig":"417"},{"size":700,"mtime":1614016378000,"results":"437","hashOfConfig":"417"},{"size":2126,"mtime":1614016378000,"results":"438","hashOfConfig":"417"},{"size":1599,"mtime":1614016378000,"results":"439","hashOfConfig":"417"},{"size":1612,"mtime":1614016378000,"results":"440","hashOfConfig":"417"},{"size":1860,"mtime":1614016378000,"results":"441","hashOfConfig":"417"},{"size":1374,"mtime":1614016378000,"results":"442","hashOfConfig":"417"},{"size":1512,"mtime":1614016378000,"results":"443","hashOfConfig":"417"},{"size":780,"mtime":1614016378000,"results":"444","hashOfConfig":"417"},{"size":1747,"mtime":1614016378000,"results":"445","hashOfConfig":"417"},{"size":668,"mtime":1614016378000,"results":"446","hashOfConfig":"417"},{"size":797,"mtime":1614016378000,"results":"447","hashOfConfig":"417"},{"size":924,"mtime":1614016378000,"results":"448","hashOfConfig":"417"},{"size":1951,"mtime":1614016378000,"results":"449","hashOfConfig":"417"},{"size":2419,"mtime":1614016378000,"results":"450","hashOfConfig":"417"},{"size":1528,"mtime":1614016378000,"results":"451","hashOfConfig":"417"},{"size":1753,"mtime":1614016378000,"results":"452","hashOfConfig":"417"},{"size":2854,"mtime":1614016378000,"results":"453","hashOfConfig":"417"},{"size":1223,"mtime":1614016378000,"results":"454","hashOfConfig":"417"},{"size":166,"mtime":1614016378000,"results":"455","hashOfConfig":"417"},{"size":2401,"mtime":1614016378000,"results":"456","hashOfConfig":"417"},{"size":325,"mtime":1614016378000,"results":"457","hashOfConfig":"417"},{"size":538,"mtime":1614016378000,"results":"458","hashOfConfig":"417"},{"size":725,"mtime":1614016378000,"results":"459","hashOfConfig":"417"},{"size":402,"mtime":1614016378000,"results":"460","hashOfConfig":"417"},{"size":1048,"mtime":1614016378000,"results":"461","hashOfConfig":"417"},{"size":992,"mtime":1614016378000,"results":"462","hashOfConfig":"417"},{"size":1649,"mtime":1614016378000,"results":"463","hashOfConfig":"417"},{"size":734,"mtime":1614016378000,"results":"464","hashOfConfig":"417"},{"size":836,"mtime":1614016378000,"results":"465","hashOfConfig":"417"},{"size":988,"mtime":1614016378000,"results":"466","hashOfConfig":"417"},{"size":1409,"mtime":1614016378000,"results":"467","hashOfConfig":"417"},{"size":304,"mtime":1614016378000,"results":"468","hashOfConfig":"417"},{"size":1023,"mtime":1614016378000,"results":"469","hashOfConfig":"417"},{"size":294,"mtime":1614016378000,"results":"470","hashOfConfig":"417"},{"size":812,"mtime":1614016378000,"results":"471","hashOfConfig":"417"},{"size":784,"mtime":1614016378000,"results":"472","hashOfConfig":"417"},{"size":1374,"mtime":1614016378000,"results":"473","hashOfConfig":"417"},{"size":1361,"mtime":1614016378000,"results":"474","hashOfConfig":"417"},{"size":346,"mtime":1614016378000,"results":"475","hashOfConfig":"417"},{"size":643,"mtime":1614016378000,"results":"476","hashOfConfig":"417"},{"size":600,"mtime":1614016378000,"results":"477","hashOfConfig":"417"},{"size":861,"mtime":1614016378000,"results":"478","hashOfConfig":"417"},{"size":428,"mtime":1614016378000,"results":"479","hashOfConfig":"417"},{"size":993,"mtime":1614016378000,"results":"480","hashOfConfig":"417"},{"size":379,"mtime":1614016378000,"results":"481","hashOfConfig":"417"},{"size":159,"mtime":1614016378000,"results":"482","hashOfConfig":"417"},{"size":465,"mtime":1614016378000,"results":"483","hashOfConfig":"417"},{"size":258,"mtime":1614016378000,"results":"484","hashOfConfig":"417"},{"size":557,"mtime":1614016378000,"results":"485","hashOfConfig":"417"},{"size":563,"mtime":1614016378000,"results":"486","hashOfConfig":"417"},{"size":577,"mtime":1614016378000,"results":"487","hashOfConfig":"417"},{"size":1274,"mtime":1614016378000,"results":"488","hashOfConfig":"417"},{"size":212,"mtime":1614016378000,"results":"489","hashOfConfig":"417"},{"size":212,"mtime":1614016378000,"results":"490","hashOfConfig":"417"},{"size":927,"mtime":1614016378000,"results":"491","hashOfConfig":"417"},{"size":388,"mtime":1614016378000,"results":"492","hashOfConfig":"417"},{"size":1191,"mtime":1614016378000,"results":"493","hashOfConfig":"417"},{"size":240,"mtime":1614016378000,"results":"494","hashOfConfig":"417"},{"size":4309,"mtime":1614016378000,"results":"495","hashOfConfig":"417"},{"size":451,"mtime":1614016378000,"results":"496","hashOfConfig":"417"},{"size":412,"mtime":1614016378000,"results":"497","hashOfConfig":"417"},{"size":3637,"mtime":1632151644576,"results":"498","hashOfConfig":"417"},{"size":4192,"mtime":1614016378000,"results":"499","hashOfConfig":"417"},{"size":628,"mtime":1614016378000,"results":"500","hashOfConfig":"417"},{"size":669,"mtime":1614016378000,"results":"501","hashOfConfig":"417"},{"size":2449,"mtime":1632151615102,"results":"502","hashOfConfig":"417"},{"size":2005,"mtime":1614016378000,"results":"503","hashOfConfig":"417"},{"size":199,"mtime":1614016378000,"results":"504","hashOfConfig":"417"},{"size":179,"mtime":1614016378000,"results":"505","hashOfConfig":"417"},{"size":290,"mtime":1614016378000,"results":"506","hashOfConfig":"417"},{"size":3087,"mtime":1614016378000,"results":"507","hashOfConfig":"417"},{"size":1711,"mtime":1614016378000,"results":"508","hashOfConfig":"417"},{"size":280,"mtime":1614016378000,"results":"509","hashOfConfig":"417"},{"size":589,"mtime":1614016378000,"results":"510","hashOfConfig":"417"},{"size":473,"mtime":1614016378000,"results":"511","hashOfConfig":"417"},{"size":722,"mtime":1614016378000,"results":"512","hashOfConfig":"417"},{"size":3047,"mtime":1614016378000,"results":"513","hashOfConfig":"417"},{"size":2946,"mtime":1614016378000,"results":"514","hashOfConfig":"417"},{"size":2724,"mtime":1614016378000,"results":"515","hashOfConfig":"417"},{"size":10331,"mtime":1614016378000,"results":"516","hashOfConfig":"417"},{"size":605,"mtime":1614016378000,"results":"517","hashOfConfig":"417"},{"size":5483,"mtime":1614016378000,"results":"518","hashOfConfig":"417"},{"size":641,"mtime":1614016378000,"results":"519","hashOfConfig":"417"},{"size":867,"mtime":1614016378000,"results":"520","hashOfConfig":"417"},{"size":1649,"mtime":1614016378000,"results":"521","hashOfConfig":"417"},{"size":5086,"mtime":1614016378000,"results":"522","hashOfConfig":"417"},{"size":9639,"mtime":1614016378000,"results":"523","hashOfConfig":"417"},{"size":2256,"mtime":1614016378000,"results":"524","hashOfConfig":"417"},{"size":2860,"mtime":1614016378000,"results":"525","hashOfConfig":"417"},{"size":2484,"mtime":1614016378000,"results":"526","hashOfConfig":"417"},{"size":1922,"mtime":1614016378000,"results":"527","hashOfConfig":"417"},{"size":3566,"mtime":1614016378000,"results":"528","hashOfConfig":"417"},{"size":3730,"mtime":1614016378000,"results":"529","hashOfConfig":"417"},{"size":3889,"mtime":1614016378000,"results":"530","hashOfConfig":"417"},{"size":3348,"mtime":1614016378000,"results":"531","hashOfConfig":"417"},{"size":3048,"mtime":1614016378000,"results":"532","hashOfConfig":"417"},{"size":3458,"mtime":1614016378000,"results":"533","hashOfConfig":"417"},{"size":7517,"mtime":1614016378000,"results":"534","hashOfConfig":"417"},{"size":3383,"mtime":1614016378000,"results":"535","hashOfConfig":"417"},{"size":3494,"mtime":1614016378000,"results":"536","hashOfConfig":"417"},{"size":3678,"mtime":1614016378000,"results":"537","hashOfConfig":"417"},{"size":3075,"mtime":1614016378000,"results":"538","hashOfConfig":"417"},{"size":2909,"mtime":1614016378000,"results":"539","hashOfConfig":"417"},{"size":4404,"mtime":1614016378000,"results":"540","hashOfConfig":"417"},{"size":3168,"mtime":1614016378000,"results":"541","hashOfConfig":"417"},{"size":2670,"mtime":1614016378000,"results":"542","hashOfConfig":"417"},{"size":4523,"mtime":1614016378000,"results":"543","hashOfConfig":"417"},{"size":4309,"mtime":1614016378000,"results":"544","hashOfConfig":"417"},{"size":13189,"mtime":1614016378000,"results":"545","hashOfConfig":"417"},{"size":10979,"mtime":1614016378000,"results":"546","hashOfConfig":"417"},{"size":1043,"mtime":1614016378000,"results":"547","hashOfConfig":"417"},{"size":1317,"mtime":1614016378000,"results":"548","hashOfConfig":"417"},{"size":167,"mtime":1614016378000,"results":"549","hashOfConfig":"417"},{"size":8860,"mtime":1614016378000,"results":"550","hashOfConfig":"417"},{"size":2766,"mtime":1614016378000,"results":"551","hashOfConfig":"417"},{"size":4536,"mtime":1614016378000,"results":"552","hashOfConfig":"417"},{"size":5526,"mtime":1614016378000,"results":"553","hashOfConfig":"417"},{"size":5685,"mtime":1614016378000,"results":"554","hashOfConfig":"417"},{"size":8684,"mtime":1614016378000,"results":"555","hashOfConfig":"417"},{"size":4979,"mtime":1614016378000,"results":"556","hashOfConfig":"417"},{"size":1507,"mtime":1614016378000,"results":"557","hashOfConfig":"417"},{"size":813,"mtime":1614016378000,"results":"558","hashOfConfig":"417"},{"size":8447,"mtime":1614016378000,"results":"559","hashOfConfig":"417"},{"size":2122,"mtime":1614016378000,"results":"560","hashOfConfig":"417"},{"size":1489,"mtime":1614016378000,"results":"561","hashOfConfig":"417"},{"size":1440,"mtime":1614016378000,"results":"562","hashOfConfig":"417"},{"size":1458,"mtime":1614016378000,"results":"563","hashOfConfig":"417"},{"size":4349,"mtime":1614016378000,"results":"564","hashOfConfig":"417"},{"size":2440,"mtime":1614016378000,"results":"565","hashOfConfig":"417"},{"size":250,"mtime":1614016378000,"results":"566","hashOfConfig":"417"},{"size":570,"mtime":1614016378000,"results":"567","hashOfConfig":"417"},{"size":1375,"mtime":1614016378000,"results":"568","hashOfConfig":"417"},{"size":2746,"mtime":1614016378000,"results":"569","hashOfConfig":"417"},{"size":2755,"mtime":1614016378000,"results":"570","hashOfConfig":"417"},{"size":1511,"mtime":1614016378000,"results":"571","hashOfConfig":"417"},{"size":1273,"mtime":1614016378000,"results":"572","hashOfConfig":"417"},{"size":2934,"mtime":1614016378000,"results":"573","hashOfConfig":"417"},{"size":693,"mtime":1614016378000,"results":"574","hashOfConfig":"417"},{"size":1983,"mtime":1614016378000,"results":"575","hashOfConfig":"417"},{"size":1468,"mtime":1614016378000,"results":"576","hashOfConfig":"417"},{"size":626,"mtime":1614016378000,"results":"577","hashOfConfig":"417"},{"size":4442,"mtime":1614016378000,"results":"578","hashOfConfig":"417"},{"size":216,"mtime":1614016378000,"results":"579","hashOfConfig":"417"},{"size":452,"mtime":1614016378000,"results":"580","hashOfConfig":"417"},{"size":8795,"mtime":1614016378000,"results":"581","hashOfConfig":"417"},{"size":207,"mtime":1614016378000,"results":"582","hashOfConfig":"417"},{"size":1769,"mtime":1614016378000,"results":"583","hashOfConfig":"417"},{"size":85,"mtime":1614016378000,"results":"584","hashOfConfig":"417"},{"size":694,"mtime":1614016378000,"results":"585","hashOfConfig":"417"},{"size":3527,"mtime":1614016378000,"results":"586","hashOfConfig":"417"},{"size":3459,"mtime":1614016378000,"results":"587","hashOfConfig":"417"},{"size":5675,"mtime":1614016378000,"results":"588","hashOfConfig":"417"},{"size":6289,"mtime":1614016378000,"results":"589","hashOfConfig":"417"},{"size":2851,"mtime":1614016378000,"results":"590","hashOfConfig":"417"},{"size":5284,"mtime":1614016378000,"results":"591","hashOfConfig":"417"},{"size":9557,"mtime":1614016378000,"results":"592","hashOfConfig":"417"},{"size":4897,"mtime":1614016378000,"results":"593","hashOfConfig":"417"},{"size":3894,"mtime":1614016378000,"results":"594","hashOfConfig":"417"},{"size":7589,"mtime":1614016378000,"results":"595","hashOfConfig":"417"},{"size":1959,"mtime":1614016378000,"results":"596","hashOfConfig":"417"},{"size":3386,"mtime":1614016378000,"results":"597","hashOfConfig":"417"},{"size":5799,"mtime":1614016378000,"results":"598","hashOfConfig":"417"},{"size":4239,"mtime":1614016378000,"results":"599","hashOfConfig":"417"},{"size":11276,"mtime":1614016378000,"results":"600","hashOfConfig":"417"},{"size":11803,"mtime":1614016378000,"results":"601","hashOfConfig":"417"},{"size":7797,"mtime":1614016378000,"results":"602","hashOfConfig":"417"},{"size":4035,"mtime":1614016378000,"results":"603","hashOfConfig":"417"},{"size":9556,"mtime":1614016378000,"results":"604","hashOfConfig":"417"},{"size":7648,"mtime":1614016378000,"results":"605","hashOfConfig":"417"},{"size":15928,"mtime":1614016378000,"results":"606","hashOfConfig":"417"},{"size":5285,"mtime":1614016378000,"results":"607","hashOfConfig":"417"},{"size":1053,"mtime":1614016378000,"results":"608","hashOfConfig":"417"},{"size":663,"mtime":1614016378000,"results":"609","hashOfConfig":"417"},{"size":3861,"mtime":1614016378000,"results":"610","hashOfConfig":"417"},{"size":971,"mtime":1614016378000,"results":"611","hashOfConfig":"417"},{"size":1059,"mtime":1614016378000,"results":"612","hashOfConfig":"417"},{"size":871,"mtime":1614016378000,"results":"613","hashOfConfig":"417"},{"size":1981,"mtime":1614016378000,"results":"614","hashOfConfig":"417"},{"size":857,"mtime":1614016378000,"results":"615","hashOfConfig":"417"},{"size":4872,"mtime":1614016378000,"results":"616","hashOfConfig":"417"},{"size":1161,"mtime":1614016378000,"results":"617","hashOfConfig":"417"},{"size":3207,"mtime":1614016378000,"results":"618","hashOfConfig":"417"},{"size":6161,"mtime":1614016378000,"results":"619","hashOfConfig":"417"},{"size":5260,"mtime":1614016378000,"results":"620","hashOfConfig":"417"},{"size":1633,"mtime":1614016378000,"results":"621","hashOfConfig":"417"},{"size":5806,"mtime":1614016378000,"results":"622","hashOfConfig":"417"},{"size":413,"mtime":1614016378000,"results":"623","hashOfConfig":"417"},{"size":1799,"mtime":1614016378000,"results":"624","hashOfConfig":"417"},{"size":3687,"mtime":1614016378000,"results":"625","hashOfConfig":"417"},{"size":3843,"mtime":1614016378000,"results":"626","hashOfConfig":"417"},{"size":3596,"mtime":1614016378000,"results":"627","hashOfConfig":"417"},{"size":5039,"mtime":1614016378000,"results":"628","hashOfConfig":"417"},{"size":2527,"mtime":1614016378000,"results":"629","hashOfConfig":"417"},{"size":3557,"mtime":1614016378000,"results":"630","hashOfConfig":"417"},{"size":1420,"mtime":1614016378000,"results":"631","hashOfConfig":"417"},{"size":6094,"mtime":1614016378000,"results":"632","hashOfConfig":"417"},{"size":7623,"mtime":1614016378000,"results":"633","hashOfConfig":"417"},{"size":1400,"mtime":1614016378000,"results":"634","hashOfConfig":"417"},{"size":2366,"mtime":1614016378000,"results":"635","hashOfConfig":"417"},{"size":3151,"mtime":1614016378000,"results":"636","hashOfConfig":"417"},{"size":2614,"mtime":1614016378000,"results":"637","hashOfConfig":"417"},{"size":5834,"mtime":1614016378000,"results":"638","hashOfConfig":"417"},{"size":2774,"mtime":1614016378000,"results":"639","hashOfConfig":"417"},{"size":596,"mtime":1614016378000,"results":"640","hashOfConfig":"417"},{"size":2502,"mtime":1614016378000,"results":"641","hashOfConfig":"417"},{"size":4722,"mtime":1614016378000,"results":"642","hashOfConfig":"417"},{"size":4067,"mtime":1614016378000,"results":"643","hashOfConfig":"417"},{"size":2340,"mtime":1614016378000,"results":"644","hashOfConfig":"417"},{"size":2173,"mtime":1614016378000,"results":"645","hashOfConfig":"417"},{"size":10629,"mtime":1614016378000,"results":"646","hashOfConfig":"417"},{"size":11058,"mtime":1614016378000,"results":"647","hashOfConfig":"417"},{"size":1243,"mtime":1614016378000,"results":"648","hashOfConfig":"417"},{"size":2371,"mtime":1614016378000,"results":"649","hashOfConfig":"417"},{"size":4485,"mtime":1614016378000,"results":"650","hashOfConfig":"417"},{"size":1961,"mtime":1614016378000,"results":"651","hashOfConfig":"417"},{"size":1990,"mtime":1614016378000,"results":"652","hashOfConfig":"417"},{"size":6750,"mtime":1614016378000,"results":"653","hashOfConfig":"417"},{"size":4288,"mtime":1614016378000,"results":"654","hashOfConfig":"417"},{"size":1261,"mtime":1614016378000,"results":"655","hashOfConfig":"417"},{"size":3901,"mtime":1614016378000,"results":"656","hashOfConfig":"417"},{"size":1073,"mtime":1614016378000,"results":"657","hashOfConfig":"417"},{"size":2810,"mtime":1614016378000,"results":"658","hashOfConfig":"417"},{"size":3449,"mtime":1614016378000,"results":"659","hashOfConfig":"417"},{"size":4741,"mtime":1614016378000,"results":"660","hashOfConfig":"417"},{"size":449,"mtime":1614016378000,"results":"661","hashOfConfig":"417"},{"size":3685,"mtime":1614016378000,"results":"662","hashOfConfig":"417"},{"size":260,"mtime":1614016378000,"results":"663","hashOfConfig":"417"},{"size":413,"mtime":1614016378000,"results":"664","hashOfConfig":"417"},{"size":4026,"mtime":1614016378000,"results":"665","hashOfConfig":"417"},{"size":1696,"mtime":1614016378000,"results":"666","hashOfConfig":"417"},{"size":3123,"mtime":1614016378000,"results":"667","hashOfConfig":"417"},{"size":4918,"mtime":1614016378000,"results":"668","hashOfConfig":"417"},{"size":2878,"mtime":1614016378000,"results":"669","hashOfConfig":"417"},{"size":10119,"mtime":1614016378000,"results":"670","hashOfConfig":"417"},{"size":4067,"mtime":1614016378000,"results":"671","hashOfConfig":"417"},{"size":465,"mtime":1614016378000,"results":"672","hashOfConfig":"673"},{"size":5086,"mtime":1614016378000,"results":"674","hashOfConfig":"673"},{"size":529,"mtime":1614016378000,"results":"675","hashOfConfig":"673"},{"size":1462,"mtime":1614016378000,"results":"676","hashOfConfig":"673"},{"size":844,"mtime":1614016378000,"results":"677","hashOfConfig":"673"},{"size":318,"mtime":1636894749223,"results":"678","hashOfConfig":"673"},{"size":268,"mtime":1636894799848,"results":"679","hashOfConfig":"673"},{"size":533,"mtime":1637137612756,"results":"680","hashOfConfig":"673"},{"size":1514,"mtime":1614016378000,"results":"681","hashOfConfig":"673"},{"size":1238,"mtime":1614016378000,"results":"682","hashOfConfig":"673"},{"size":2025,"mtime":1614016378000,"results":"683","hashOfConfig":"673"},{"size":924,"mtime":1614016378000,"results":"684","hashOfConfig":"673"},{"size":797,"mtime":1614016378000,"results":"685","hashOfConfig":"673"},{"size":166,"mtime":1614016378000,"results":"686","hashOfConfig":"673"},{"size":2401,"mtime":1614016378000,"results":"687","hashOfConfig":"673"},{"size":325,"mtime":1614016378000,"results":"688","hashOfConfig":"673"},{"size":582,"mtime":1637227628994,"results":"689","hashOfConfig":"673"},{"size":725,"mtime":1614016378000,"results":"690","hashOfConfig":"673"},{"size":402,"mtime":1614016378000,"results":"691","hashOfConfig":"673"},{"size":992,"mtime":1614016378000,"results":"692","hashOfConfig":"673"},{"size":1649,"mtime":1614016378000,"results":"693","hashOfConfig":"673"},{"size":294,"mtime":1614016378000,"results":"694","hashOfConfig":"673"},{"size":563,"mtime":1614016378000,"results":"695","hashOfConfig":"673"},{"size":258,"mtime":1614016378000,"results":"696","hashOfConfig":"673"},{"size":212,"mtime":1614016378000,"results":"697","hashOfConfig":"673"},{"size":280,"mtime":1614016378000,"results":"698","hashOfConfig":"673"},{"size":212,"mtime":1614016378000,"results":"699","hashOfConfig":"673"},{"size":1307,"mtime":1637134684510,"results":"700","hashOfConfig":"673"},{"size":3047,"mtime":1614016378000,"results":"701","hashOfConfig":"673"},{"size":473,"mtime":1614016378000,"results":"702","hashOfConfig":"673"},{"size":589,"mtime":1614016378000,"results":"703","hashOfConfig":"673"},{"size":2416,"mtime":1637135077191,"results":"704","hashOfConfig":"673"},{"size":722,"mtime":1614016378000,"results":"705","hashOfConfig":"673"},{"size":1644,"mtime":1636972656298,"results":"706","hashOfConfig":"673"},{"size":1347,"mtime":1636898125223,"results":"707","hashOfConfig":"673"},{"size":605,"mtime":1614016378000,"results":"708","hashOfConfig":"673"},{"size":5483,"mtime":1637137050767,"results":"709","hashOfConfig":"673"},{"size":641,"mtime":1614016378000,"results":"710","hashOfConfig":"673"},{"size":867,"mtime":1614016378000,"results":"711","hashOfConfig":"673"},{"size":1647,"mtime":1636899705321,"results":"712","hashOfConfig":"673"},{"size":7847,"mtime":1637135307593,"results":"713","hashOfConfig":"673"},{"size":1043,"mtime":1614016378000,"results":"714","hashOfConfig":"673"},{"size":167,"mtime":1614016378000,"results":"715","hashOfConfig":"673"},{"size":813,"mtime":1614016378000,"results":"716","hashOfConfig":"673"},{"size":250,"mtime":1614016378000,"results":"717","hashOfConfig":"673"},{"size":1375,"mtime":1614016378000,"results":"718","hashOfConfig":"673"},{"size":570,"mtime":1614016378000,"results":"719","hashOfConfig":"673"},{"size":1468,"mtime":1614016378000,"results":"720","hashOfConfig":"673"},{"size":1982,"mtime":1636899713039,"results":"721","hashOfConfig":"673"},{"size":626,"mtime":1614016378000,"results":"722","hashOfConfig":"673"},{"size":4442,"mtime":1614016378000,"results":"723","hashOfConfig":"673"},{"size":216,"mtime":1614016378000,"results":"724","hashOfConfig":"673"},{"size":452,"mtime":1614016378000,"results":"725","hashOfConfig":"673"},{"size":8795,"mtime":1614016378000,"results":"726","hashOfConfig":"673"},{"size":207,"mtime":1614016378000,"results":"727","hashOfConfig":"673"},{"size":1769,"mtime":1614016378000,"results":"728","hashOfConfig":"673"},{"size":85,"mtime":1614016378000,"results":"729","hashOfConfig":"673"},{"size":4257,"mtime":1636830007528,"results":"730","hashOfConfig":"673"},{"size":861,"mtime":1636869834597,"results":"731","hashOfConfig":"673"},{"size":1317,"mtime":1614016378000,"results":"732","hashOfConfig":"673"},{"size":1261,"mtime":1614016378000,"results":"733","hashOfConfig":"673"},{"size":3685,"mtime":1614016378000,"results":"734","hashOfConfig":"673"},{"size":1073,"mtime":1614016378000,"results":"735","hashOfConfig":"673"},{"size":2256,"mtime":1614016378000,"results":"736","hashOfConfig":"673"},{"size":2860,"mtime":1614016378000,"results":"737","hashOfConfig":"673"},{"size":2469,"mtime":1636972650990,"results":"738","hashOfConfig":"673"},{"size":1053,"mtime":1614016378000,"results":"739","hashOfConfig":"673"},{"size":857,"mtime":1614016378000,"results":"740","hashOfConfig":"673"},{"size":2774,"mtime":1614016378000,"results":"741","hashOfConfig":"673"},{"size":4641,"mtime":1637063360176,"results":"742","hashOfConfig":"673"},{"size":3295,"mtime":1637058847976,"results":"743","hashOfConfig":"673"},{"size":5732,"mtime":1636902472661,"results":"744","hashOfConfig":"673"},{"size":4854,"mtime":1637057783603,"results":"745","hashOfConfig":"673"},{"size":2657,"mtime":1637056550179,"results":"746","hashOfConfig":"673"},{"size":1483,"mtime":1636896011976,"results":"747","hashOfConfig":"673"},{"size":4961,"mtime":1637062493847,"results":"748","hashOfConfig":"673"},{"size":5484,"mtime":1637063838355,"results":"749","hashOfConfig":"673"},{"size":5570,"mtime":1637063854033,"results":"750","hashOfConfig":"673"},{"size":7449,"mtime":1636902164827,"results":"751","hashOfConfig":"673"},{"size":2362,"mtime":1614016378000,"results":"752","hashOfConfig":"673"},{"size":3128,"mtime":1614016378000,"results":"753","hashOfConfig":"673"},{"size":1359,"mtime":1614016378000,"results":"754","hashOfConfig":"673"},{"size":2699,"mtime":1636972661333,"results":"755","hashOfConfig":"673"},{"size":4884,"mtime":1636888483219,"results":"756","hashOfConfig":"673"},{"size":10604,"mtime":1636902031513,"results":"757","hashOfConfig":"673"},{"size":465,"mtime":1614016378000,"results":"758","hashOfConfig":"759"},{"size":529,"mtime":1614016378000,"results":"760","hashOfConfig":"759"},{"size":5086,"mtime":1614016378000,"results":"761","hashOfConfig":"759"},{"size":1462,"mtime":1614016378000,"results":"762","hashOfConfig":"759"},{"size":844,"mtime":1614016378000,"results":"763","hashOfConfig":"759"},{"size":268,"mtime":1636894799848,"results":"764","hashOfConfig":"759"},{"size":318,"mtime":1636894749223,"results":"765","hashOfConfig":"759"},{"size":533,"mtime":1637137612756,"results":"766","hashOfConfig":"759"},{"size":2025,"mtime":1614016378000,"results":"767","hashOfConfig":"759"},{"size":4641,"mtime":1637063360176,"results":"768","hashOfConfig":"759"},{"size":166,"mtime":1614016378000,"results":"769","hashOfConfig":"759"},{"size":325,"mtime":1614016378000,"results":"770","hashOfConfig":"759"},{"size":2401,"mtime":1614016378000,"results":"771","hashOfConfig":"759"},{"size":1238,"mtime":1614016378000,"results":"772","hashOfConfig":"759"},{"size":1514,"mtime":1614016378000,"results":"773","hashOfConfig":"759"},{"size":582,"mtime":1637227628994,"results":"774","hashOfConfig":"759"},{"size":3295,"mtime":1637058847976,"results":"775","hashOfConfig":"759"},{"size":212,"mtime":1614016378000,"results":"776","hashOfConfig":"759"},{"size":212,"mtime":1614016378000,"results":"777","hashOfConfig":"759"},{"size":4961,"mtime":1637062493847,"results":"778","hashOfConfig":"759"},{"size":280,"mtime":1614016378000,"results":"779","hashOfConfig":"759"},{"size":1483,"mtime":1636896011976,"results":"780","hashOfConfig":"759"},{"size":2657,"mtime":1637056550179,"results":"781","hashOfConfig":"759"},{"size":1649,"mtime":1614016378000,"results":"782","hashOfConfig":"759"},{"size":992,"mtime":1614016378000,"results":"783","hashOfConfig":"759"},{"size":725,"mtime":1614016378000,"results":"784","hashOfConfig":"759"},{"size":402,"mtime":1614016378000,"results":"785","hashOfConfig":"759"},{"size":867,"mtime":1614016378000,"results":"786","hashOfConfig":"759"},{"size":605,"mtime":1614016378000,"results":"787","hashOfConfig":"759"},{"size":5483,"mtime":1637137050767,"results":"788","hashOfConfig":"759"},{"size":167,"mtime":1614016378000,"results":"789","hashOfConfig":"759"},{"size":570,"mtime":1614016378000,"results":"790","hashOfConfig":"759"},{"size":1982,"mtime":1636899713039,"results":"791","hashOfConfig":"759"},{"size":4442,"mtime":1614016378000,"results":"792","hashOfConfig":"759"},{"size":452,"mtime":1614016378000,"results":"793","hashOfConfig":"759"},{"size":207,"mtime":1614016378000,"results":"794","hashOfConfig":"759"},{"size":1769,"mtime":1614016378000,"results":"795","hashOfConfig":"759"},{"size":85,"mtime":1614016378000,"results":"796","hashOfConfig":"759"},{"size":8795,"mtime":1614016378000,"results":"797","hashOfConfig":"759"},{"size":1307,"mtime":1637134684510,"results":"798","hashOfConfig":"759"},{"size":473,"mtime":1614016378000,"results":"799","hashOfConfig":"759"},{"size":589,"mtime":1614016378000,"results":"800","hashOfConfig":"759"},{"size":722,"mtime":1614016378000,"results":"801","hashOfConfig":"759"},{"size":1644,"mtime":1636972656298,"results":"802","hashOfConfig":"759"},{"size":3047,"mtime":1614016378000,"results":"803","hashOfConfig":"759"},{"size":2416,"mtime":1637135077191,"results":"804","hashOfConfig":"759"},{"size":1347,"mtime":1636898125223,"results":"805","hashOfConfig":"759"},{"size":641,"mtime":1614016378000,"results":"806","hashOfConfig":"759"},{"size":4257,"mtime":1636830007528,"results":"807","hashOfConfig":"759"},{"size":7847,"mtime":1637135307593,"results":"808","hashOfConfig":"759"},{"size":1647,"mtime":1636899705321,"results":"809","hashOfConfig":"759"},{"size":2469,"mtime":1636972650990,"results":"810","hashOfConfig":"759"},{"size":2860,"mtime":1614016378000,"results":"811","hashOfConfig":"759"},{"size":2256,"mtime":1614016378000,"results":"812","hashOfConfig":"759"},{"size":1053,"mtime":1614016378000,"results":"813","hashOfConfig":"759"},{"size":216,"mtime":1614016378000,"results":"814","hashOfConfig":"759"},{"size":1375,"mtime":1614016378000,"results":"815","hashOfConfig":"759"},{"size":1317,"mtime":1614016378000,"results":"816","hashOfConfig":"759"},{"size":857,"mtime":1614016378000,"results":"817","hashOfConfig":"759"},{"size":5570,"mtime":1637063854033,"results":"818","hashOfConfig":"759"},{"size":5732,"mtime":1636902472661,"results":"819","hashOfConfig":"759"},{"size":5484,"mtime":1637063838355,"results":"820","hashOfConfig":"759"},{"size":1043,"mtime":1614016378000,"results":"821","hashOfConfig":"759"},{"size":813,"mtime":1614016378000,"results":"822","hashOfConfig":"759"},{"size":250,"mtime":1614016378000,"results":"823","hashOfConfig":"759"},{"size":2774,"mtime":1614016378000,"results":"824","hashOfConfig":"759"},{"size":4854,"mtime":1637057783603,"results":"825","hashOfConfig":"759"},{"size":7449,"mtime":1636902164827,"results":"826","hashOfConfig":"759"},{"size":2699,"mtime":1636972661333,"results":"827","hashOfConfig":"759"},{"size":3128,"mtime":1614016378000,"results":"828","hashOfConfig":"759"},{"size":2362,"mtime":1614016378000,"results":"829","hashOfConfig":"759"},{"size":1359,"mtime":1614016378000,"results":"830","hashOfConfig":"759"},{"size":10604,"mtime":1636902031513,"results":"831","hashOfConfig":"759"},{"size":4884,"mtime":1636888483219,"results":"832","hashOfConfig":"759"},{"size":626,"mtime":1614016378000,"results":"833","hashOfConfig":"759"},{"filePath":"834","messages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b6floc",{"filePath":"836","messages":"837","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"838","messages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"842","messages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"844","messages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"846","messages":"847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"848","messages":"849","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"850","messages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852"},{"filePath":"853","messages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"857"},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"860"},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863"},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866"},{"filePath":"867","messages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869"},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872"},{"filePath":"873","messages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875"},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878"},{"filePath":"879","messages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"881","messages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"883","messages":"884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"885","messages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"887","messages":"888","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"889","messages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891"},{"filePath":"892","messages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894"},{"filePath":"895","messages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897"},{"filePath":"898","messages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900"},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903"},{"filePath":"904","messages":"905","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"906","messages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"908","messages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"910","messages":"911","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912"},{"filePath":"913","messages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915"},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"918","messages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"922"},{"filePath":"923","messages":"924","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"925"},{"filePath":"926","messages":"927","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"928","messages":"929","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"930","messages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"932"},{"filePath":"933","messages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"935","messages":"936","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"939","messages":"940","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"941","messages":"942","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"943"},{"filePath":"944","messages":"945","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"946","messages":"947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"948","messages":"949","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"950","messages":"951","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"952","messages":"953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"954","messages":"955","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"956","messages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"958","messages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"960","messages":"961","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"962","messages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"964","messages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"966","messages":"967","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"968","messages":"969","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"970","messages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"972","messages":"973","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"974","messages":"975","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"976","messages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"978","messages":"979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"980","messages":"981","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"982","messages":"983","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"984","messages":"985","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"986","messages":"987","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"988","messages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"990","messages":"991","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"992","messages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"994","messages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"996","messages":"997","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"998","messages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1000","messages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1002","messages":"1003","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1004","messages":"1005","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1006","messages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1008","messages":"1009","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1010","messages":"1011","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1012"},{"filePath":"1013","messages":"1014","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1017","messages":"1018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1019","messages":"1020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1021","messages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1023","messages":"1024","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1025","messages":"1026","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1027","messages":"1028","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1029","messages":"1030","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1031","messages":"1032","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1033","messages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1035","messages":"1036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1037","messages":"1038","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1039","messages":"1040","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1041","messages":"1042","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1043","messages":"1044","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1045","messages":"1046","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1047","messages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1049"},{"filePath":"1050","messages":"1051","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1052"},{"filePath":"1053","messages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055"},{"filePath":"1056","messages":"1057","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1058","messages":"1059","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1060","messages":"1061","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1062","messages":"1063","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1064"},{"filePath":"1065","messages":"1066","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1067","messages":"1068","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1069","messages":"1070","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1071"},{"filePath":"1072","messages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1074"},{"filePath":"1075","messages":"1076","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1077","messages":"1078","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1079","messages":"1080","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1081"},{"filePath":"1082","messages":"1083","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1084"},{"filePath":"1085","messages":"1086","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1087"},{"filePath":"1088","messages":"1089","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1090"},{"filePath":"1091","messages":"1092","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1093"},{"filePath":"1094","messages":"1095","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1096"},{"filePath":"1097","messages":"1098","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1099"},{"filePath":"1100","messages":"1101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1102"},{"filePath":"1103","messages":"1104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1105"},{"filePath":"1106","messages":"1107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1108"},{"filePath":"1109","messages":"1110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1111"},{"filePath":"1112","messages":"1113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1114"},{"filePath":"1115","messages":"1116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1117"},{"filePath":"1118","messages":"1119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1120"},{"filePath":"1121","messages":"1122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1123"},{"filePath":"1124","messages":"1125","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1126"},{"filePath":"1127","messages":"1128","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1129"},{"filePath":"1130","messages":"1131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1132"},{"filePath":"1133","messages":"1134","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1135"},{"filePath":"1136","messages":"1137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1138"},{"filePath":"1139","messages":"1140","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1141"},{"filePath":"1142","messages":"1143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1144","messages":"1145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1146","messages":"1147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1148","messages":"1149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1150"},{"filePath":"1151","messages":"1152","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1153"},{"filePath":"1154","messages":"1155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1156"},{"filePath":"1157","messages":"1158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1159"},{"filePath":"1160","messages":"1161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1162"},{"filePath":"1163","messages":"1164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1165"},{"filePath":"1166","messages":"1167","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1168"},{"filePath":"1169","messages":"1170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1171"},{"filePath":"1172","messages":"1173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1174","messages":"1175","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1176"},{"filePath":"1177","messages":"1178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1179"},{"filePath":"1180","messages":"1181","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1182"},{"filePath":"1183","messages":"1184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1185"},{"filePath":"1186","messages":"1187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1188"},{"filePath":"1189","messages":"1190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1191"},{"filePath":"1192","messages":"1193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1194"},{"filePath":"1195","messages":"1196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1197","messages":"1198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1199","messages":"1200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1201","messages":"1202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1203","messages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1205","messages":"1206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1207","messages":"1208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1209"},{"filePath":"1210","messages":"1211","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1212"},{"filePath":"1213","messages":"1214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1215","messages":"1216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1217","messages":"1218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1219","messages":"1220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1221","messages":"1222","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1223"},{"filePath":"1224","messages":"1225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1226","messages":"1227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1228","messages":"1229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1230","messages":"1231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1232","messages":"1233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1234","messages":"1235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1236","messages":"1237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1238","messages":"1239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1240"},{"filePath":"1241","messages":"1242","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1243"},{"filePath":"1244","messages":"1245","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1246"},{"filePath":"1247","messages":"1248","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1249"},{"filePath":"1250","messages":"1251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1252"},{"filePath":"1253","messages":"1254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1255"},{"filePath":"1256","messages":"1257","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1258"},{"filePath":"1259","messages":"1260","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1261"},{"filePath":"1262","messages":"1263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1264"},{"filePath":"1265","messages":"1266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1267"},{"filePath":"1268","messages":"1269","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1270"},{"filePath":"1271","messages":"1272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1273"},{"filePath":"1274","messages":"1275","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1276"},{"filePath":"1277","messages":"1278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1279"},{"filePath":"1280","messages":"1281","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1282"},{"filePath":"1283","messages":"1284","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1285"},{"filePath":"1286","messages":"1287","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1288"},{"filePath":"1289","messages":"1290","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1291"},{"filePath":"1292","messages":"1293","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1294"},{"filePath":"1295","messages":"1296","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1297"},{"filePath":"1298","messages":"1299","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1300"},{"filePath":"1301","messages":"1302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1303"},{"filePath":"1304","messages":"1305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1306","messages":"1307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1308","messages":"1309","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1310"},{"filePath":"1311","messages":"1312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1313","messages":"1314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1315","messages":"1316","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1317"},{"filePath":"1318","messages":"1319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1320","messages":"1321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1322","messages":"1323","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1324"},{"filePath":"1325","messages":"1326","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1327"},{"filePath":"1328","messages":"1329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1330","messages":"1331","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1332"},{"filePath":"1333","messages":"1334","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1335"},{"filePath":"1336","messages":"1337","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1338"},{"filePath":"1339","messages":"1340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1341","messages":"1342","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1343"},{"filePath":"1344","messages":"1345","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1346"},{"filePath":"1347","messages":"1348","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1349"},{"filePath":"1350","messages":"1351","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1352"},{"filePath":"1353","messages":"1354","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1355"},{"filePath":"1356","messages":"1357","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1358"},{"filePath":"1359","messages":"1360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1361","messages":"1362","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1363"},{"filePath":"1364","messages":"1365","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1366"},{"filePath":"1367","messages":"1368","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1369"},{"filePath":"1370","messages":"1371","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1372"},{"filePath":"1373","messages":"1374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1375","messages":"1376","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377"},{"filePath":"1378","messages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380"},{"filePath":"1381","messages":"1382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1383","messages":"1384","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1385"},{"filePath":"1386","messages":"1387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1388","messages":"1389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1390","messages":"1391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1392","messages":"1393","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1394"},{"filePath":"1395","messages":"1396","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1397"},{"filePath":"1398","messages":"1399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1400","messages":"1401","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1402"},{"filePath":"1403","messages":"1404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1405","messages":"1406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1407","messages":"1408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1409","messages":"1410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1411","messages":"1412","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1413"},{"filePath":"1414","messages":"1415","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1416"},{"filePath":"1417","messages":"1418","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1419"},{"filePath":"1420","messages":"1421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1422","messages":"1423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1424","messages":"1425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1426","messages":"1427","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1428"},{"filePath":"1429","messages":"1430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1431","messages":"1432","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1433"},{"filePath":"1434","messages":"1435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1436"},{"filePath":"1437","messages":"1438","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1439"},{"filePath":"1440","messages":"1441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1442","messages":"1443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1444","messages":"1445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1446","messages":"1447","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1343"},{"filePath":"1448","messages":"1449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1450","messages":"1451","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1452"},{"filePath":"1453","messages":"1454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1455","messages":"1456","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1457"},{"filePath":"1458","messages":"1459","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1460"},{"filePath":"1461","messages":"1462","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1463"},{"filePath":"1464","messages":"1465","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1397"},{"filePath":"1466","messages":"1467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},"151b8nx",{"filePath":"1469","messages":"1470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1471","messages":"1472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1473","messages":"1474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1475","messages":"1476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1477","messages":"1478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1479","messages":"1480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1481","messages":"1482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1483","messages":"1484","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"1468"},{"filePath":"1485","messages":"1486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1487","messages":"1488","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"857","usedDeprecatedRules":"1468"},{"filePath":"1489","messages":"1490","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1491","messages":"1492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1493","messages":"1494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1495","messages":"1496","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"932","usedDeprecatedRules":"1468"},{"filePath":"1497","messages":"1498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1499","messages":"1500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1501","messages":"1502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1503","messages":"1504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1505","messages":"1506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1507","messages":"1508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1509","messages":"1510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1511","messages":"1512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1513"},{"filePath":"1514","messages":"1515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1513"},{"filePath":"1516","messages":"1517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1518","messages":"1519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1520","messages":"1521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1522","messages":"1523","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1524","usedDeprecatedRules":"1468"},{"filePath":"1525","messages":"1526","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1049","usedDeprecatedRules":"1468"},{"filePath":"1527","messages":"1528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1529","messages":"1530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1531","messages":"1532","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1533","usedDeprecatedRules":"1468"},{"filePath":"1534","messages":"1535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1536","messages":"1537","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1538","usedDeprecatedRules":"1468"},{"filePath":"1539","messages":"1540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1541","messages":"1542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1543","messages":"1544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1545","messages":"1546","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1064","usedDeprecatedRules":"1468"},{"filePath":"1547","messages":"1548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1549","messages":"1550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1551","messages":"1552","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1553","usedDeprecatedRules":"1468"},{"filePath":"1554","messages":"1555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1556","messages":"1557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1558","messages":"1559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1560","messages":"1561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1562","messages":"1563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1564","messages":"1565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1566","messages":"1567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1568","messages":"1569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1570","messages":"1571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1572","messages":"1573","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1223","usedDeprecatedRules":"1468"},{"filePath":"1574","messages":"1575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1576","messages":"1577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1578","messages":"1579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1580","messages":"1581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1582","messages":"1583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1584","messages":"1585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1586","messages":"1587","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1588","usedDeprecatedRules":"1468"},{"filePath":"1589","messages":"1590","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1591","usedDeprecatedRules":"1592"},{"filePath":"1593","messages":"1594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1595","messages":"1596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1597","messages":"1598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1513"},{"filePath":"1599","messages":"1600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1601","messages":"1602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1603","messages":"1604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1605","messages":"1606","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1607","usedDeprecatedRules":"1468"},{"filePath":"1608","messages":"1609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1610","messages":"1611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1612","messages":"1613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1614","messages":"1615","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1616","usedDeprecatedRules":"1468"},{"filePath":"1617","messages":"1618","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1619","usedDeprecatedRules":"1468"},{"filePath":"1620","messages":"1621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1622","messages":"1623","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1624","usedDeprecatedRules":"1468"},{"filePath":"1625","messages":"1626","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1627","usedDeprecatedRules":"1468"},{"filePath":"1628","messages":"1629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1630","messages":"1631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1632","messages":"1633","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1634","usedDeprecatedRules":"1468"},{"filePath":"1635","messages":"1636","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1637","usedDeprecatedRules":"1468"},{"filePath":"1638","messages":"1639","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1640","usedDeprecatedRules":"1468"},{"filePath":"1641","messages":"1642","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1643","usedDeprecatedRules":"1468"},{"filePath":"1644","messages":"1645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1646","messages":"1647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1648","messages":"1649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1650","messages":"1651","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1652","usedDeprecatedRules":"1468"},{"filePath":"1653","messages":"1654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1468"},{"filePath":"1655","messages":"1656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10qcbh8",{"filePath":"1657","messages":"1658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1659","messages":"1660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1661","messages":"1662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1663","messages":"1664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1665","messages":"1666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1667","messages":"1668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1669","messages":"1670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1671","messages":"1672","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1673","messages":"1674","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1675","messages":"1676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1677","messages":"1678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1679","messages":"1680","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1681","messages":"1682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1683","messages":"1684","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1685","messages":"1686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1687","messages":"1688","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1689","messages":"1690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1691","messages":"1692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1693","messages":"1694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1695","messages":"1696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1697","messages":"1698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1699","messages":"1700","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1701","messages":"1702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1703","messages":"1704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1705","messages":"1706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1707","messages":"1708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1709","messages":"1710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1711","messages":"1712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1713","messages":"1714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1715","messages":"1716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1717","messages":"1718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1719","messages":"1720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1721","messages":"1722","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1723","messages":"1724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1725","messages":"1726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1727","messages":"1728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1729","messages":"1730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1731","messages":"1732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1733","messages":"1734","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1735","messages":"1736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1737","messages":"1738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1739","messages":"1740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1741","messages":"1742","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1743","messages":"1744","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1745","messages":"1746","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1747","messages":"1748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1749","messages":"1750","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1751","messages":"1752","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1753","messages":"1754","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1755","messages":"1756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1757","messages":"1758","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1759","messages":"1760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1761","messages":"1762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1763","messages":"1764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1765","messages":"1766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1767","messages":"1768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1769","messages":"1770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1771","messages":"1772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1773","messages":"1774","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1775","messages":"1776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1777","messages":"1778","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1779","messages":"1780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1781","messages":"1782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1783","messages":"1784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1785","messages":"1786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1787","messages":"1788","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1789","messages":"1790","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1791","messages":"1792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1793","messages":"1794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1795","messages":"1796","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1797","messages":"1798","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1799","messages":"1800","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1801","messages":"1802","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1803","messages":"1804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\App.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\serviceWorker.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\store\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\reducers\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\sagas\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\configs\\AppConfig.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\reducers\\Auth.js",["1805"],"import {\r\n    AUTH_TOKEN,\r\n    AUTHENTICATED,\r\n    SHOW_AUTH_MESSAGE,\r\n    HIDE_AUTH_MESSAGE,\r\n    SIGNOUT_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SHOW_LOADING,\r\n    SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    SIGNIN_WITH_FACEBOOK_AUTHENTICATED, SIGNIN\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n                redirect: '/app/home',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\reducers\\Theme.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\sagas\\Auth.js",["1806","1807","1808","1809"],"import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n} from \"../actions/Auth\";\r\n\r\n\r\nimport Amplify, { Auth } from 'aws-amplify';\r\nimport {setSession, setUserSession} from \"../../session/Session\";\r\n\r\nAmplify.configure({\r\n    Auth: {\r\n        region: 'us-east-2',\r\n        userPoolId: 'us-east-2_FMJpUHgXq',\r\n        userPoolWebClientId: '1ama9illjf6h5tsd4b4ahl4snc',\r\n        mandatorySignIn: true,\r\n        authenticationFlowType: 'USER_PASSWORD_AUTH',\r\n        clientMetadata: { myCustomKey: 'myCustomValue' },\r\n        oauth: {\r\n            domain: 'your_cognito_domain',\r\n            scope: ['phone', 'email', 'profile', 'openid', 'aws.cognito.signin.user.admin'],\r\n            redirectSignIn: 'http://localhost:3000/',\r\n            redirectSignOut: 'http://localhost:3000/',\r\n            responseType: 'code'\r\n        },\r\n    }\r\n});\r\n\r\n// You can get the current config object\r\nconst currentConfig = Auth.configure();\r\n\r\n\r\nexport function* login() {\r\n    yield takeEvery(SIGNIN, function* ({payload}) {\r\n        const {username, password} = payload;\r\n        try {\r\n            const res = yield call([Auth,Auth.signIn],username, password);\r\n            setSession(res.signInUserSession.accessToken.jwtToken);\r\n            setUserSession(res.signInUserSession);\r\n            yield put(authenticated(res.signInUserSession.accessToken.jwtToken));\r\n        } catch (err) {\r\n            console.log('->>>>>>>>>>');\r\n            console.log(err);\r\n            yield put(showAuthMessage(err.message));\r\n        }\r\n    });\r\n}\r\n\r\nexport function* logout() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n      console.log('->>>>>>>>>>');\r\n\t\t// try {\r\n        //     yield put(signOutSuccess());\r\n\t\t// } catch (err) {\r\n\t\t// \tyield put(showAuthMessage(err));\r\n\t\t// }\r\n\t});\r\n}\r\n\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(login),\r\n\t\tfork(logout)\r\n  ]);\r\n}\r\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\redux\\sagas\\customerSaga.js",["1810"],"import { put, all, fork, call, takeEvery } from 'redux-saga/effects';\nimport {\n  CUSTOMER_LIST_LOADDATA,\n  ADD_CUSTOMER,\n  DELETE_CUSTOMER,\n  SET_CURRENT,\n  UPDATE_CUSTOMER,\n  CUSTOMER_LIST_LOADDATA_ALL,\n  LOAD_ONE_CUSTOMER_SUCCESS,\n  CUSTOMER_APPROVE,\n  CUSTOMER_REJECT,\n  CUSTOMER_FILTER_LIST_SUCCESS\n} from '../types/customerTypes';\nimport {\n  getCustomer,\n  setLoading,\n  customerError,\n  addCustomerSuccess,\n  deleteCustomerSuccess,\n  setCurrentSuccess,\n  updateCustomerSuccess,\n  getCustomerDataAll,\n  loaddata,\n  getCustomerByOne,\n  showCustomerMessage,\n  customerApproveSuccess,\n  customerRejectSuccess,\n  customerLoadDataByOne,\n  getFilteredData\n} from '../actions/customerAction';\n\nimport {\n  fetchData,\n  addData,\n  deleteData,\n  updateData,\n  fetchDataAll,\n  fetchDataByOne,\n  fetchCustomerApprove,\n  fetchCustomerReject,\n  fetchFilteredCustomerData\n} from '../api';\n\nexport function* getCustomerList() {\n  yield takeEvery(CUSTOMER_LIST_LOADDATA, function* (payload) {\n    try {\n      setLoading();\n      const data = yield call(fetchData, payload.page);\n      yield put(getCustomer(data.data.data, data.data.total));\n    } catch (err) {\n      yield put(customerError(err));\n    }\n  });\n}\nexport function* getCustomerListDataAll() {\n  yield takeEvery(CUSTOMER_LIST_LOADDATA_ALL, function* () {\n    try {\n      const data = yield call(fetchDataAll);\n      yield put(getCustomer(data));\n    } catch (err) {\n      yield put(customerError(err));\n    }\n  });\n}\nexport function* getCustomerDataByOne() {\n  yield takeEvery(LOAD_ONE_CUSTOMER_SUCCESS, function* (payload) {\n    try {\n      const data = yield call(fetchDataByOne, payload.id);\n      yield put(getCustomerByOne(data.data.data));\n    } catch (error) {\n      yield put(showCustomerMessage(error.toString()));\n    }\n  });\n}\nexport function* createCustomer() {\n  yield takeEvery(ADD_CUSTOMER, function* (payload) {\n    try {\n      const data = payload.data;\n      yield call(addData, data);\n      yield put(addCustomerSuccess());\n      yield put(loaddata(1));\n    } catch (err) {\n      console.log(err.message);\n      yield put(showCustomerMessage(err.message));\n    }\n  });\n}\n\nexport function* removeCustomer() {\n  yield takeEvery(DELETE_CUSTOMER, function* (payload) {\n    try {\n      const id = payload.id;\n      yield call(deleteData, id);\n      yield put(deleteCustomerSuccess());\n      yield put(loaddata(1));\n    } catch (err) {\n      console.log(err, 'Error in Cus remove');\n      yield put(customerError(err));\n    }\n  });\n}\n\nexport function* getFilteredCustomerList() {\n  yield takeEvery(CUSTOMER_FILTER_LIST_SUCCESS, function* (payload) {\n    try {\n      setLoading();\n      const data = yield call(fetchFilteredCustomerData, payload.page, payload.category, payload.customerType, payload.customerName);\n      yield put(getFilteredData(data.data));\n      console.log(data.data)\n    } catch (err) {\n      yield put(customerError(err));\n    }\n  });\n}\n\nexport function* setCurrentCustomerList() {\n  yield takeEvery(SET_CURRENT, function* (payload) {\n    try {\n      yield put(setCurrentSuccess(payload.data));\n    } catch (err) {\n      yield put(customerError(err));\n    }\n  });\n}\n\nexport function* updateCustomerData() {\n  yield takeEvery(UPDATE_CUSTOMER, function* (payload) {\n    try {\n      const data = payload.data;\n      data.type = 'new';\n      data.status = 'active';\n      yield call(updateData, data);\n      yield put(updateCustomerSuccess());\n      yield put(loaddata(1));\n    } catch (err) {\n      yield put(customerError(err));\n    }\n  });\n}\n\nexport function* updateCustomerApprove() {\n  yield takeEvery(CUSTOMER_APPROVE, function* (payload) {\n    try {\n      yield call(fetchCustomerApprove, payload.id);\n      yield put(customerApproveSuccess());\n      yield put(loaddata(1));\n      yield put(customerLoadDataByOne(payload.id));\n    } catch (error) {}\n  });\n}\nexport function* updateCustomerReject() {\n  yield takeEvery(CUSTOMER_REJECT, function* (payload) {\n    try {\n      yield call(fetchCustomerReject, payload.id);\n      yield put(customerRejectSuccess());\n      yield put(loaddata(1));\n      yield put(customerLoadDataByOne(payload.id));\n    } catch (error) {}\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(getCustomerList),\n    fork(createCustomer),\n    fork(removeCustomer),\n    fork(setCurrentCustomerList),\n    fork(updateCustomerData),\n    fork(getCustomerListDataAll),\n    fork(getCustomerDataByOne),\n    fork(updateCustomerApprove),\n    fork(updateCustomerReject),\n    fork(getFilteredCustomerList)\n  ]);\n}\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\reducers\\leadListReducer.js",["1811"],"import {\n  LEAD_LIST_LOAD_SUCCESS,\n  GET_LEAD_LIST_DATA,\n  GET_KANBAN_LEAD_LIST_DATA,\n  LEAD_LIST_ERROR,\n  ADD_LEAD,\n  ADD_LEAD_SUCCESS,\n  DELETE_LEAD,\n  DELETE_LEAD_SUCCESS,\n  SET_CURRENT,\n  SET_CURRENT_SUCCESS,\n  UPDATE_LEAD,\n  UPDATE_LEAD_SUCCESS,\n  UPDATE_LEAD_ASSIGN,\n  UPDATE_LEAD_ASSIGN_SUCCESS,\n  UPDATE_BUTTON_STATUS_CHANGE,\n  UPDATE_BUTTON_STATUS_CHANGE_SUCCESS,\n  GET_LEAD_LIST_BY_ONE_DATA,\n  LEAD_LOAD_BY_ONE_SUCCESS,\n  GET_KANBAN_LEAD_SUCCESS,\n  GET_KANBAN_LEAD_ERROR,\n  UPDATE_LEAD_STAGE,\n  UPDATE_LEAD_STAGE_SUCCESS,\n  UPDATE_LEAD_COLUMNS,\n  UPDATE_LEAD_COLUMNS_SUCCESS,\n  LEAD_FILTER_LIST,\n  LEAD_FILTER_LIST_SUCCESS, GET_LEAD_TIMELINE_DATA, GET_LEAD_TIMELINE_SUCCESS,\n  GET_MEGABIT_LIST,\n  GET_MEGABIT_LIST_SUCCESS,\n  TRANSFER_LEAD,\n  TRANSFER_LEAD_SUCCESS,\n} from \"../types/leadListType\";\n\nconst initialState = {\n  leadData: [],\n  columns: {},\n  megabitData: [],\n  megabit: null,\n  kanbanLoading: false,\n  message: \"\",\n  showMessage: false,\n  page: 1,\n  total: 0,\n  loading: false,\n  megabitLoading: false,\n  transferLoading: false,\n  current: [],\n  error: null,\n  id: 0,\n  timeLine:[]\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LEAD_LIST_DATA:\n      return {\n        ...state,\n        leadData: action.data,\n        total: action.total,\n        loading: false,\n      };\n    case LEAD_LIST_LOAD_SUCCESS:\n      return {\n        ...state,\n        page: action.page,\n        loading: true,\n      };\n    case GET_LEAD_LIST_BY_ONE_DATA:\n      return {\n        ...state,\n        current: action.data,\n        loading: false,\n      };\n    case LEAD_LOAD_BY_ONE_SUCCESS:\n      return {\n        ...state,\n        id: action.id,\n        loading: true,\n      };\n    case GET_LEAD_TIMELINE_DATA:\n      return {\n        ...state,\n        timeLine: action.data,\n        loading: false\n      };\n    case GET_LEAD_TIMELINE_SUCCESS:\n      return {\n        ...state,\n        loading: true\n      }\n    case GET_KANBAN_LEAD_SUCCESS:\n      return {\n        ...state,\n        kanbanLoading: true,\n      };\n    case GET_KANBAN_LEAD_LIST_DATA:\n      return {\n        ...state,\n        columns: action.data,\n        kanbanLoading: false,\n      };\n    case GET_KANBAN_LEAD_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case ADD_LEAD_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case ADD_LEAD:\n      return {\n        ...state,\n        leadData: [action.data, ...state.leadData],\n        loading: true,\n      };\n    case DELETE_LEAD:\n      return {\n        ...state,\n        leadData: state.leadData.filter((lead) => lead.id !== action.id),\n        loading: true,\n      };\n    case DELETE_LEAD_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case UPDATE_LEAD:\n      return {\n        ...state,\n        leadData: state.leadData.map((lead) =>\n          lead.id === action.data.id ? action.data : lead\n        ),\n        loading: true,\n      };\n    case UPDATE_LEAD_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case UPDATE_LEAD_COLUMNS:\n      return {\n        ...state,\n        columns: action.data,\n        loading: true,\n      };\n    case UPDATE_LEAD_COLUMNS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case UPDATE_LEAD_STAGE:\n      return {\n        ...state,\n        leadData: state.leadData.map((lead) =>\n          lead.id === action.data.id ? action.data : lead\n        ),\n        loading: true,\n      };\n    case UPDATE_LEAD_STAGE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case UPDATE_LEAD_ASSIGN:\n      return {\n        ...state,\n        leadData: state.leadData.map((lead) =>\n          lead.id === action.data.id ? action.data : lead\n        ),\n        loading: true,\n      };\n    case UPDATE_LEAD_ASSIGN_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case UPDATE_BUTTON_STATUS_CHANGE:\n      return {\n        ...state,\n        leadData: state.leadData.map((lead) =>\n          lead.id === action.data.id ? action.data : lead\n        ),\n        loading: true,\n      };\n    case UPDATE_BUTTON_STATUS_CHANGE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.data,\n        loading: true,\n      };\n    case SET_CURRENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case LEAD_LIST_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case LEAD_FILTER_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LEAD_FILTER_LIST:\n      return {\n        ...state,\n        leadData: action.data,\n        loading: false,\n      };\n    case GET_MEGABIT_LIST:\n      return {\n        ...state,\n        megabitData: action.data,\n        megabitLoading: false,\n      };\n    case GET_MEGABIT_LIST_SUCCESS:\n      return {\n        ...state,\n        megabitLoading: true,\n      };\n    case TRANSFER_LEAD:\n      return {\n        ...state,\n        transferLoading: true,\n      };\n    case TRANSFER_LEAD_SUCCESS:\n      return {\n        ...state,\n        id: action.id,\n        megabit: action.megabit,\n        transferLoading: false,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\reducers\\projectTypeReducer.js",["1812"],"import {\n  GET_PROJECT_TYPE,\n  PROJECT_TYPE_ERROR,\n  PROJECT_TYPE_LOAD_SUCCESS,\n} from '../types/projectTypeTypes';\n\nconst initialState = {\n  projectTypeData: [],\n  projectTypeLoading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case PROJECT_TYPE_LOAD_SUCCESS:\n      return {\n        ...state,\n        projectTypeLoading: true,\n      };\n    case GET_PROJECT_TYPE:\n      return {\n        ...state,\n        projectTypeData: action.data,\n        projectTypeLoading: false,\n      };\n    case PROJECT_TYPE_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\reducers\\followUpReducer.js",["1813"],"import {\n  ADD_FOLLOWUP,\n  ADD_FOLLOWUP_SUCCESS,\n  FOLLOWUP_LIST_ERROR,\n  GET_FOLLOWUP_TYPE_ALL,\n  LOAD_FOLLOWUP_TYPE_ALL,\n} from '../types/followUpTypes';\n\nconst initialState = {\n  followUpData: [],\n  message: '',\n  showMessage: false,\n  page: 1,\n  total: 0,\n  loading: false,\n  error: null,\n  followupTypes: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FOLLOWUP:\n      return {\n        ...state,\n        followUpData: [action.data, ...state.followUpData],\n        loading: true,\n      };\n    case ADD_FOLLOWUP_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case GET_FOLLOWUP_TYPE_ALL:\n      return {\n        ...state,\n        followupTypes: action.data,\n        loading: false,\n      };\n    case LOAD_FOLLOWUP_TYPE_ALL:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FOLLOWUP_LIST_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\redux\\reducers\\customerReducer.js",["1814"],"import {\n  CUSTOMER_LIST_LOADDATA,\n  CUSTOMER_ERROR,\n  GET_CUSTOMER,\n  CUSTOMER_SET_LOADING,\n  ADD_CUSTOMER,\n  ADD_CUSTOMER_SUCCESS,\n  DELETE_CUSTOMER,\n  DELETE_CUSTOMER_SUCCESS,\n  SET_CURRENT,\n  SET_CURRENT_SUCCESS,\n  UPDATE_CUSTOMER,\n  UPDATE_CUSTOMER_SUCCESS,\n  CUSTOMER_LIST_LOADDATA_ALL,\n  GET_CUSTOMER_LIST_ALL,\n  GET_ONE_CUSTOMER,\n  LOAD_ONE_CUSTOMER_SUCCESS,\n  SHOW_CUSTOMER_MESSAGE,\n  HIDE_CUSTOMER_MESSAGE,\n  CUSTOMER_APPROVE,\n  CUSTOMER_APPROVE_SUCCESS,\n  CUSTOMER_REJECT,\n  CUSTOMER_REJECT_SUCCESS,\n  CUSTOMER_FILTER_LIST,\n  CUSTOMER_FILTER_LIST_SUCCESS,\n} from \"../types/customerTypes\";\n\nconst initialState = {\n  data: [],\n  message: \"\",\n  showMessage: false,\n  page: 1,\n  total: 0,\n  loading: false,\n  error: null,\n  current: null,\n  id: 0,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CUSTOMER_LIST_LOADDATA:\n      return {\n        ...state,\n        page: action.page,\n        loading: true,\n      };\n    case GET_CUSTOMER:\n      return {\n        ...state,\n        data: action.data,\n        total: action.total,\n        loading: false,\n      };\n    case CUSTOMER_LIST_LOADDATA_ALL:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_CUSTOMER_LIST_ALL:\n      return {\n        ...state,\n        data: action.data,\n        loading: false,\n      };\n    case GET_ONE_CUSTOMER:\n      return {\n        ...state,\n        current: action.data,\n        loading: false,\n      };\n    case LOAD_ONE_CUSTOMER_SUCCESS:\n      return {\n        ...state,\n        id: action.id,\n        loading: false,\n      };\n    case ADD_CUSTOMER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case ADD_CUSTOMER:\n      return {\n        ...state,\n        data: [action.data, ...state.data],\n        loading: true,\n      };\n    case DELETE_CUSTOMER:\n      return {\n        ...state,\n        data: state.data.filter((customer) => customer.id !== action.id),\n        loading: true,\n      };\n    case DELETE_CUSTOMER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case UPDATE_CUSTOMER:\n      return {\n        ...state,\n        data: state.data.map((d) =>\n          d.id === action.data.id ? action.data : d\n        ),\n        loading: true,\n      };\n    case UPDATE_CUSTOMER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case CUSTOMER_APPROVE:\n      return {\n        ...state,\n        id: action.id,\n        loading: true,\n      };\n    case CUSTOMER_APPROVE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case CUSTOMER_REJECT:\n      return {\n        ...state,\n        id: action.id,\n        loading: true,\n      };\n    case CUSTOMER_REJECT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case SHOW_CUSTOMER_MESSAGE:\n      return {\n        ...state,\n        message: action.message,\n        showMessage: true,\n        loading: false,\n      };\n    case HIDE_CUSTOMER_MESSAGE:\n      return {\n        ...state,\n        message: \"\",\n        showMessage: false,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.data,\n        loading: true,\n      };\n    case SET_CURRENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case CUSTOMER_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case CUSTOMER_SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case CUSTOMER_FILTER_LIST:\n      return {\n        ...state,\n        data: action.data,\n        loading: false,\n      };\n    case CUSTOMER_FILTER_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\reducers\\recommendationReducer.js",["1815"],"import {\n  ADD_RECOMMENDATION,\n  ADD_RECOMMENDATION_SUCCESS,\n  RECOMMENDATION_LIST_ERROR,\n} from '../types/recommendationType';\n\nconst initialState = {\n  recommendationData: [],\n  message: '',\n  showMessage: false,\n  page: 1,\n  total: 0,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_RECOMMENDATION:\n      return {\n        ...state,\n        recommendationData: [action.data, ...state.recommendationData],\n        loading: true,\n      };\n    case ADD_RECOMMENDATION_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case RECOMMENDATION_LIST_ERROR:\n      console.log(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\sagas\\followUpSaga.js",["1816"],"import { put, all, fork, call, takeEvery } from \"redux-saga/effects\";\n\nimport { ADD_FOLLOWUP, LOAD_FOLLOWUP_TYPE_ALL } from \"../types/followUpTypes\";\nimport {\n  addFollowUpSuccess,\n  followUpError,\n  getFollowupTypeAll,\n} from \"../actions/followUpAction\";\n\nimport { transferLeadSuccess } from \"../actions/leadListAction\";\n\nimport { addData, fetchFollowupTypeAll } from \"../followUpApi\";\n\nexport function* createFollowUp() {\n  yield takeEvery(ADD_FOLLOWUP, function* (payload) {\n    try {\n      const data = payload.data;\n      yield call(addData, data);\n      yield put(addFollowUpSuccess());\n      // yield put(transferLeadSuccess(parseInt(payload.data.leadId)));\n    } catch (err) {\n      console.log(err);\n      yield put(followUpError(err));\n    }\n  });\n}\n\nexport function* getFollowUpTypesList() {\n  yield takeEvery(LOAD_FOLLOWUP_TYPE_ALL, function* () {\n    try {\n      const data = yield call(fetchFollowupTypeAll);\n      yield put(getFollowupTypeAll(data.data));\n    } catch (err) {\n      yield put(followUpError(err));\n    }\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([fork(createFollowUp), fork(getFollowUpTypesList)]);\n}\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\sagas\\leadListSaga.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\sagas\\projectTypeSaga.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\sagas\\recommendationSaga.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\redux\\sagas\\customerunblockListSaga.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\redux\\sagas\\repeaterSaga.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\redux\\reducers\\customerunblockListReducer.js",["1817"],"import {\n  CUSMOTERUNBLOCK_LIST_LOADDATA,\n  GET_CUSMOTERUNBLOCK_LIST,\n  CUSMOTERUNBLOCK_LIST_LOAD_BY_ONE_SUCCESS,\n  GET_CUSMOTERUNBLOCK_LIST_BY_ONE_DATA,\n  CUSMOTERUNBLOCK_LIST_ERROR,\n  UPDATE_UNBLOCK_STATUS,\n  UPDATE_UNBLOCK_STATUS_SUCCESS,\n} from '../types/customerunblockListTypes';\n\nconst initialState = {\n  customerunblockListData: [],\n  loading: false,\n  page: 1,\n  total: 0,\n  error: null,\n  current: [],\n  id: 0,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CUSMOTERUNBLOCK_LIST:\n      return {\n        ...state,\n        customerunblockListData: action.data,\n        total: action.total,\n        loading: false,\n      };\n    case CUSMOTERUNBLOCK_LIST_LOADDATA:\n      return {\n        ...state,\n        page: action.page,\n        loading: true,\n      };\n    case GET_CUSMOTERUNBLOCK_LIST_BY_ONE_DATA:\n      return {\n        ...state,\n        current: action.data,\n        loading: false,\n      };\n    case CUSMOTERUNBLOCK_LIST_LOAD_BY_ONE_SUCCESS:\n      return {\n        ...state,\n        id: action.id,\n        loading: true,\n      };\n    case UPDATE_UNBLOCK_STATUS:\n      return {\n        ...state,\n        customerunblockListData: state.customerunblockListData.map((data) =>\n          data.id === action.id ? action.data : data\n        ),\n        loading: true,\n      };\n    case UPDATE_UNBLOCK_STATUS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case CUSMOTERUNBLOCK_LIST_ERROR:\n      console.log(action.err);\n      return {\n        ...state,\n        error: action.err,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\redux\\reducers\\repeaterReducer.js",["1818"],"import {\n  GET_REPEATER_LIST,\n  GET_REPEATER_LIST_SUCCESS,\n  REPEATER_LIST_ERROR,\n  ADD_REPEATER,\n  ADD_REPEATER_SUCCESS,\n  HIDE_MESSAGE,\n  SHOW_MESSAGE,\n  SHOW_LOADING,\n  REPEATER_LOAD_BY_ONE_SUCCESS,\n  GET_REPEATER_LIST_BY_ONE_DATA,\n} from \"../types/repeaterTypes\";\n\nconst initialState = {\n  repeaterData: [],\n  page: 1,\n  total: 0,\n  loading: false,\n  error: null,\n  showMessage: false,\n  message: \"\",\n  current: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_REPEATER_LIST_SUCCESS:\n      return {\n        ...state,\n        page: action.page,\n        loading: true,\n      };\n    case GET_REPEATER_LIST:\n      return {\n        ...state,\n        repeaterData: action.data,\n        total: action.total,\n        loading: false,\n      };\n    case ADD_REPEATER:\n      return {\n        ...state,\n        repeaterData: [action.data, ...state.repeaterData],\n        loading: true,\n      };\n    case GET_REPEATER_LIST_BY_ONE_DATA:\n      return {\n        ...state,\n        current: action.data,\n        loading: false,\n      };\n    case REPEATER_LOAD_BY_ONE_SUCCESS:\n      return {\n        ...state,\n        id: action.id,\n        loading: true,\n      };\n    case ADD_REPEATER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case SHOW_MESSAGE:\n      console.log(action.message);\n      return {\n        ...state,\n        message: action.message,\n        showMessage: true,\n        loading: false,\n      };\n    case HIDE_MESSAGE:\n      return {\n        ...state,\n        message: \"\",\n        showMessage: false,\n      };\n    case SHOW_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case REPEATER_LIST_ERROR:\n      console.log(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\reduces\\userRoleListReducer.js",["1819"],"import {\n  GET_USER_ROLE_LIST,\n  GET_USER_ROLE_LIST_SUCCESS,\n  USER_ROLE_LIST_ERROR,\n  ADD_ROLE,\n  ADD_ROLE_SUCCESS,\n  DELETE_ROLE,\n  DELETE_ROLE_SUCCESS,\n} from \"../types/userRoleListType\";\n\nconst initialState = {\n  userRoleListData: [],\n  page: 1,\n  total: 0,\n  loading: false,\n  error: null,\n  showMessage: false,\n  message: \"\",\n  current: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER_ROLE_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_USER_ROLE_LIST:\n      return {\n        ...state,\n        userRoleListData: action.data,\n        loading: false,\n      };\n    case ADD_ROLE:\n      return {\n        ...state,\n        userRoleListData: [action.data, ...state.userRoleListData],\n        loading: true,\n      };\n    case ADD_ROLE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case DELETE_ROLE:\n      return {\n        ...state,\n        userRoleListData: state.userRoleListData.filter(\n          (role) => role.id !== action.id\n        ),\n        loading: true,\n      };\n    case DELETE_ROLE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case USER_ROLE_LIST_ERROR:\n      console.log(action.err);\n      return {\n        ...state,\n        error: action.err,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\reduces\\userPermissionListReducer.js",["1820"],"import {\n  GET_USER_PERMISSION_LIST,\n  GET_USER_PERMISSION_LIST_SUCCESS,\n  USER_PERMISSION_LIST_ERROR,\n  ADD_PERMISSION,\n  ADD_PERMISSION_SUCCESS,\n  DELETE_PERMISSION,\n  DELETE_PERMISSION_SUCCESS,\n} from \"../types/userPermissionListType\";\n\nconst initialState = {\n  userPermissionListData: [],\n  page: 1,\n  total: 0,\n  loading: false,\n  error: null,\n  showMessage: false,\n  message: \"\",\n  current: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER_PERMISSION_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_USER_PERMISSION_LIST:\n      return {\n        ...state,\n        userPermissionListData: action.data,\n        loading: false,\n      };\n    case ADD_PERMISSION:\n      return {\n        ...state,\n        userPermissionListData: [action.data, ...state.userPermissionListData],\n        loading: true,\n      };\n    case ADD_PERMISSION_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case DELETE_PERMISSION:\n      return {\n        ...state,\n        userPermissionListData: state.userPermissionListData.filter(\n          (permission) => permission.id !== action.id\n        ),\n        loading: true,\n      };\n    case DELETE_PERMISSION_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case USER_PERMISSION_LIST_ERROR:\n      console.log(action.err);\n      return {\n        ...state,\n        error: action.err,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\reduces\\userListReducer.js",["1821"],"import {\n  GET_USER_LIST,\n  GET_USER_LIST_SUCCESS,\n  USER_LIST_ERROR,\n} from \"../types/userListType\";\n\nconst initialState = {\n  userListData: [],\n  page: 1,\n  total: 0,\n  loading: false,\n  error: null,\n  showMessage: false,\n  message: \"\",\n  current: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER_LIST_SUCCESS:\n      return {\n        ...state,\n        page: action.page,\n        loading: true,\n      };\n    case GET_USER_LIST:\n      return {\n        ...state,\n        userListData: action.data,\n        total: action.total,\n        loading: false,\n      };\n    case USER_LIST_ERROR:\n      console.log(action.err);\n      return {\n        ...state,\n        error: action.err,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\sagas\\userPermissionListSaga.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\sagas\\userListSaga.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\home\\redux\\sagas\\userPermissionSaga.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\home\\redux\\reducers\\userPermissionReducer.js",["1822"],"import {\n    GET_USER_PERMISSION_BY_ONE_DATA,\n    USER_PERMISSION_LOAD_BY_ONE_ERROR,\n    USER_PERMISSION_LOAD_BY_ONE_SUCCESS\n} from \"../types/userPermissionTypes\";\n\nconst initialState = {\n    userPermission: null,\n    id:\"\",\n    loading:false,\n    error:\"\"\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_USER_PERMISSION_BY_ONE_DATA:\n            return {\n                ...state,\n                userPermission: action.data,\n                loading: false\n            };\n        case USER_PERMISSION_LOAD_BY_ONE_SUCCESS:\n            return {\n                ...state,\n                id:action.data,\n                loading: true\n            }\n        case USER_PERMISSION_LOAD_BY_ONE_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.data\n            }\n        default:\n            return state;\n    }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\reducers\\quotationListReducer.js",["1823"],"import {\n  GET_QUOTATION,\n  QUOTATION_LIST_LOADDATA,\n  QUOTATION_LIST_ERROR,\n  GET_QUOTATION_LIST_BY_ONE_DATA,\n  QUOTATION_LOAD_BY_ONE_SUCCESS,\n  CUSTOMER_VALIDATION_LOAD,\n  GET_CUSTOMER_VALIDATION,\n  ADD_UNBLOCK_REQUEST,\n  ADD_UNBLOCK_REQUEST_SUCCESS,\n} from '../types/quotationListType';\n\nconst initialState = {\n  quotationListData: [],\n  loading: false,\n  page: 1,\n  total: 0,\n  error: null,\n  current: [],\n  id: 0,\n  customerValidationData: [],\n  code: '',\n  amount: null,\n  loadingCVData: false,\n  customerUnblockData: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_QUOTATION:\n      return {\n        ...state,\n        quotationListData: action.data,\n        total: action.total,\n        loading: false,\n      };\n    case QUOTATION_LIST_LOADDATA:\n      return {\n        ...state,\n        page: action.page,\n        loading: true,\n      };\n    case GET_QUOTATION_LIST_BY_ONE_DATA:\n      return {\n        ...state,\n        current: action.data,\n        loading: false,\n      };\n    case QUOTATION_LOAD_BY_ONE_SUCCESS:\n      return {\n        ...state,\n        id: action.id,\n        loading: true,\n      };\n    case CUSTOMER_VALIDATION_LOAD:\n      return {\n        ...state,\n        code: action.code,\n        amount: action.amount,\n        loadingCVData: true,\n      };\n    case GET_CUSTOMER_VALIDATION:\n      return {\n        ...state,\n        customerValidationData: action.data,\n        loadingCVData: false,\n      };\n    case ADD_UNBLOCK_REQUEST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case ADD_UNBLOCK_REQUEST:\n      console.log(action.data, 'u redu');\n      return {\n        ...state,\n        customerUnblockData: [action.data, ...state.customerUnblockData],\n        id: action.id,\n        loading: true,\n      };\n    case QUOTATION_LIST_ERROR:\n      return {\n        ...state,\n        error: action.err,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\sagas\\quotationListSaga.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\sagas\\userRoleListSaga.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\reducers\\quotationApprovalListReducer.js",["1824"],"import {\n  GET_QUOTATION_APPROVAL,\n  GET_QUOTATION_APPROVAL_LIST_BY_ONE_DATA,\n  QUOTATION_APPROVAL_LIST_ERROR,\n  QUOTATION_APPROVAL_LIST_LOADDATA,\n  QUOTATION_APPROVAL_LOAD_BY_ONE_SUCCESS,\n  CALCULATE_DISCOUNT,\n  UPDATE_QUOTATION_APPROVAL,\n  UPDATE_QUOTATION_APPROVAL_SUCCESS,\n} from '../types/quotationApprovalListType';\n\nconst initialState = {\n  quotationApprovalData: [],\n  loading: false,\n  page: 1,\n  total: 0,\n  error: null,\n  current: [],\n  id: 0,\n  message: '',\n  showMessage: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_QUOTATION_APPROVAL:\n      return {\n        ...state,\n        quotationApprovalData: action.data,\n        total: action.total,\n        loading: false,\n      };\n    case QUOTATION_APPROVAL_LIST_LOADDATA:\n      return {\n        ...state,\n        page: action.page,\n        loading: true,\n      };\n    case GET_QUOTATION_APPROVAL_LIST_BY_ONE_DATA:\n      return {\n        ...state,\n        current: action.data,\n        loading: false,\n      };\n    case QUOTATION_APPROVAL_LOAD_BY_ONE_SUCCESS:\n      return {\n        ...state,\n        id: action.id,\n        loading: true,\n      };\n    case CALCULATE_DISCOUNT:\n      return {\n        ...state,\n        loading: true,\n      };\n    case UPDATE_QUOTATION_APPROVAL:\n      return {\n        ...state,\n        quotationApprovalData: state.quotationApprovalData.map((data) =>\n          data.id === action.id ? action.data : data\n        ),\n        loading: true,\n      };\n    case UPDATE_QUOTATION_APPROVAL_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case QUOTATION_APPROVAL_LIST_ERROR:\n      return {\n        ...state,\n        error: action.err,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\sagas\\quotationApprovalListSaga.js",["1825"],"import { put, all, fork, call, takeEvery } from \"redux-saga/effects\";\nimport {\n  QUOTATION_APPROVAL_LIST_LOADDATA,\n  QUOTATION_APPROVAL_LOAD_BY_ONE_SUCCESS,\n  CALCULATE_DISCOUNT,\n  UPDATE_QUOTATION_APPROVAL,\n} from \"../types/quotationApprovalListType\";\n\nimport {\n  getQuotationApprovalList,\n  getQuotationApprovalListByOne,\n  quotationApprovalListError,\n  calculateDisc,\n  updateQuotationSuccess,\n  quotationApprovalListLoadDataByOne,\n  loadQuotationApprovalListData,\n} from \"../actions/quotationApprovalListAction\";\n\nimport {\n  fetchData,\n  fetchOneQuotationApprovalDataData,\n  updateQuotationApprovalData,\n} from \"../quotationApprovalListApi\";\n\nexport function* getQuotationApprovalListData() {\n  yield takeEvery(QUOTATION_APPROVAL_LIST_LOADDATA, function* (payload) {\n    try {\n      const data = yield call(fetchData, payload.page);\n      yield put(getQuotationApprovalList(data.data.data, data.data.total));\n    } catch (err) {\n      yield put(quotationApprovalListError(err));\n    }\n  });\n}\nexport function* getQuotationApprovalListDataByOne() {\n  yield takeEvery(QUOTATION_APPROVAL_LOAD_BY_ONE_SUCCESS, function* (payload) {\n    try {\n      const data = yield call(fetchOneQuotationApprovalDataData, payload.id);\n      yield put(calculateDisc(data.data.data));\n      yield put(getQuotationApprovalListByOne(data.data.data));\n    } catch (err) {\n      yield put(quotationApprovalListError(err));\n    }\n  });\n}\n\nexport function* caculateDiscountData() {\n  yield takeEvery(CALCULATE_DISCOUNT, function* (payload) {\n    try {\n      const obj = payload.data;\n      obj.qutationDetailList.map((data) => {\n        const unitP = data[\"price\"];\n        const qty = data[\"quantity\"];\n        const udp = data[\"udp\"];\n        const additional = parseFloat(data[\"additional\"]);\n\n        const pAmount = unitP * qty;\n        const num1 = udp + additional;\n        const discountA = (num1 / 100) * pAmount;\n\n        data[\"discount\"] = parseFloat(discountA.toFixed(2));\n        data[\"total\"] = parseFloat(pAmount.toFixed(2));\n      });\n\n      yield put(getQuotationApprovalListByOne(obj));\n    } catch (error) {\n      yield put(quotationApprovalListError(error));\n    }\n  });\n}\n\nexport function* updateQuotationApprovalAdditionalData() {\n  yield takeEvery(UPDATE_QUOTATION_APPROVAL, function* (payload) {\n    try {\n      yield call(updateQuotationApprovalData, payload.data, payload.id);\n      yield put(updateQuotationSuccess());\n      yield put(quotationApprovalListLoadDataByOne(payload.id));\n      yield put(loadQuotationApprovalListData(1));\n    } catch (error) {\n      yield put(quotationApprovalListError(error));\n    }\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(getQuotationApprovalListData),\n    fork(getQuotationApprovalListDataByOne),\n    fork(caculateDiscountData),\n    fork(updateQuotationApprovalAdditionalData),\n  ]);\n}\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\sagas\\quotationCreateSaga.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\lang\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\layouts\\app-layout\\index.js",["1826"],"import React from \"react\";\r\nimport { Layout, Grid } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport SideNav from \"components/layout-components/SideNav\";\r\nimport TopNav from \"components/layout-components/TopNav\";\r\nimport MobileNav from \"components/layout-components/MobileNav\";\r\nimport HeaderNav from \"components/layout-components/HeaderNav\";\r\nimport PageHeader from \"components/layout-components/PageHeader\";\r\nimport Footer from \"components/layout-components/Footer\";\r\nimport AppViews from \"views/app-views\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n} from \"constants/ThemeConstant\";\r\nimport utils from \"utils\";\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(\r\n    navigationConfig,\r\n    location.pathname\r\n  );\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes(\"lg\");\r\n  const isNavSide = navType === NAV_TYPE_SIDE;\r\n  const isNavTop = navType === NAV_TYPE_TOP;\r\n  const getLayoutGutter = () => {\r\n    if (isNavTop || isMobile) {\r\n      return 0;\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH;\r\n  };\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile} />\r\n      {isNavTop && !isMobile ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n      <Layout className=\"app-container\">\r\n        {isNavSide && !isMobile ? (\r\n          <SideNav routeInfo={currentRouteInfo} />\r\n        ) : null}\r\n        <Layout\r\n          className=\"app-layout\"\r\n          style={{ paddingLeft: getLayoutGutter() }}\r\n        >\r\n          <div className={`app-content ${isNavTop ? \"layout-top-nav\" : \"\"}`}>\r\n            <PageHeader\r\n              display={currentRouteInfo?.breadcrumb}\r\n              title={currentRouteInfo?.title}\r\n            />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          {/* <Footer /> */}\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } = theme;\r\n  return { navCollapsed, navType, locale };\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));\r\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\layouts\\auth-layout\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\configs\\EnvironmentConfig.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\constants\\Auth.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\constants\\Theme.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\reducers\\quotationCreateReducer.js",["1827"],"import {\n  CUSTOMER_LIST_LOAD_SUCCESS,\n  GET_CUSTOMER_LIST,\n  CUSTOMER_LIST_ERROR,\n  ADD_QUOTATION,\n  ADD_QUOTATION_SUCCESS,\n} from \"../types/quotationCreateType\";\n\nconst initialState = {\n  customerList: [],\n  quotationData: [],\n  customerListLoading: false,\n  addQuotationLoading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CUSTOMER_LIST_LOAD_SUCCESS:\n      return {\n        ...state,\n        customerListLoading: true,\n      };\n    case GET_CUSTOMER_LIST:\n      return {\n        ...state,\n        customerList: action.data,\n        customerListLoading: false,\n      };\n    case CUSTOMER_LIST_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case ADD_QUOTATION_SUCCESS:\n      return {\n        ...state,\n        addQuotationLoading: false,\n      };\n    case ADD_QUOTATION:\n      return {\n        ...state,\n        leadData: [action.data, ...state.quotationData],\n        addQuotationLoading: true,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\session\\Session.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\actions\\Auth.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\quotationCreateAPI.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\quotationApprovalListApi.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\userRoleListApi.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\quotationListApi.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\userListApi.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\userPermissionListApi.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\home\\redux\\userPermissionApi.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\redux\\repeaterApi.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\actions\\quotationCreateAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\actions\\quotationListAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\actions\\quotationApprovalListAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\types\\quotationCreateType.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\types\\quotationApprovalListType.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\redux\\types\\quotationListType.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\actions\\userRoleListAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\actions\\userListAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\actions\\userPermissionListAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\types\\userRoleListType.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\types\\userListType.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\redux\\types\\userPermissionListType.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\home\\redux\\types\\userPermissionTypes.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\redux\\types\\customerunblockListTypes.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\home\\redux\\actions\\userPermissionAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\redux\\types\\repeaterTypes.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\redux\\actions\\repeaterAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\lang\\entries\\si_LK.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\lang\\entries\\en_US.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\redux\\customerunblockListApi.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\recommendationApi.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\redux\\actions\\customerunblockListActions.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\projectTypeApi.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\configs\\NavigationConfig.js",["1828","1829","1830","1831","1832","1833"],"import {\r\n  DashboardOutlined,\r\n  ShoppingOutlined,\r\n  DropboxOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  UnorderedListOutlined,\r\n  FileOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\nimport navigationAdminConfig from './NavigationAdminConfig';\r\n\r\n// const dashBoardNavTree = [\r\n//   {\r\n//     key: 'home',\r\n//     title: 'main_menu',\r\n//     icon: DashboardOutlined,\r\n//     breadcrumb: false,\r\n//     submenu: [\r\n//       {\r\n//         key: 'home',\r\n//         path: `${APP_PREFIX_PATH}/admin`,\r\n//         title: 'home',\r\n//         icon: DashboardOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\nconst productNavTree = [\r\n  {\r\n    key: 'quadrants',\r\n    title: 'quadrants',\r\n    breadcrumb: true,\r\n    submenu: [\r\n      // {\r\n      //   key: 'lead',\r\n      //   title: 'Lead',\r\n      //   icon: ShoppingOutlined,\r\n      //   breadcrum: true,\r\n      //   submenu: [\r\n      //     // {\r\n      //     //   key: 'lead_dashboard',\r\n      //     //   path: `${APP_PREFIX_PATH}/lead`,\r\n      //     //   title: 'Dashboard',\r\n      //     //   breadcrum: true,\r\n      //     //   submenu: [],\r\n      //     // },\r\n      //     {\r\n      //       key: 'lead_list',\r\n      //       path: `${APP_PREFIX_PATH}/lead/list`,\r\n      //       title: 'List',\r\n      //       breadcrum: true,\r\n      //       submenu: [],\r\n      //     },\r\n      //   ],\r\n      // },\r\n\r\n      {\r\n        key: 'todos',\r\n        title: 'Todos',\r\n        icon: UserOutlined,\r\n        breadcrum: true,\r\n        submenu: [\r\n          // {\r\n          //   key: 'todos_dashboard',\r\n          //   path: `${APP_PREFIX_PATH}/todos`,\r\n          //   title: 'Dashboard',\r\n          //   breadcrum: true,\r\n          //   submenu: [],\r\n          // },\r\n          {\r\n            key: 'todos_list',\r\n            path: `${APP_PREFIX_PATH}/todos/list`,\r\n            title: 'List',\r\n            breadcrum: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'customer',\r\n        title: 'Customer',\r\n        icon: TeamOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          // {\r\n          //   key: 'customer_dashboard',\r\n          //   path: `${APP_PREFIX_PATH}/customer`,\r\n          //   title: 'Dashboard',\r\n          //   breadcrumb: false,\r\n          //   submenu: [],\r\n          // },\r\n          {\r\n            key: 'customer_list',\r\n            path: `${APP_PREFIX_PATH}/customer/list`,\r\n            title: 'List',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n\r\n      // {\r\n      //   key: 'quotation',\r\n      //   title: 'Quotation',\r\n      //   icon: FileOutlined,\r\n      //   breadcrumb: true,\r\n      //   submenu: [\r\n      //     {\r\n      //       key: 'quotation_list',\r\n      //       path: `${APP_PREFIX_PATH}/quotation/list`,\r\n      //       title: 'List',\r\n      //       breadcrumb: false,\r\n      //       submenu: [],\r\n      //     },\r\n      //     {\r\n      //       key: 'quotation_apporval_list',\r\n      //       path: `${APP_PREFIX_PATH}/quotation/approvallist`,\r\n      //       title: 'Approval List',\r\n      //       breadcrumb: false,\r\n      //       submenu: [],\r\n      //     },\r\n      //   ],\r\n      // },\r\n      // {\r\n      //   key: 'customerUnblock',\r\n      //   title: 'Customer Unblock',\r\n      //   icon: FileOutlined,\r\n      //   breadcrumb: true,\r\n      //   submenu: [\r\n      //     {\r\n      //       key: 'customerUnblock_list',\r\n      //       path: `${APP_PREFIX_PATH}/customerUnblock/list`,\r\n      //       title: 'Unblock List',\r\n      //       breadcrumb: false,\r\n      //       submenu: [],\r\n      //     },\r\n      //   ],\r\n      // },\r\n      // {\r\n      //   key: 'repeter',\r\n      //   title: 'Repeter',\r\n      //   icon: FileOutlined,\r\n      //   breadcrumb: true,\r\n      //   submenu: [\r\n      //     {\r\n      //       key: 'repeter_list',\r\n      //       path: `${APP_PREFIX_PATH}/repeater/list`,\r\n      //       title: 'List',\r\n      //       breadcrumb: false,\r\n      //       submenu: [],\r\n      //     },\r\n      //   ],\r\n      // },\r\n    ],\r\n  },\r\n];\r\n\r\nconst navigationConfig = [...productNavTree];\r\n// ..dashBoardNavTree\r\n\r\nexport default navigationConfig;\r\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\actions\\recommendationAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\actions\\projectTypeAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\leadApi.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\actions\\leadListAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\followUpApi.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\actions\\followUpAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\redux\\api.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\types\\leadListType.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\types\\recommendationType.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\types\\projectTypeTypes.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\redux\\types\\followUpTypes.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\redux\\actions\\customerAction.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\redux\\types\\customerTypes.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\constants\\ThemeConstant.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\Footer.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\PageHeader.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\TopNav.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\HeaderNav.js",["1834","1835","1836"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Menu, Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\r\nimport Logo from \"./Logo\";\r\nimport NavPanel from \"./NavPanel\";\r\nimport NavSearch from \"./NavSearch\";\r\nimport { toggleCollapsedNav, onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport {\r\n  NAV_TYPE_TOP,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  SIDE_NAV_WIDTH,\r\n} from \"constants/ThemeConstant\";\r\nimport utils from \"utils\";\r\nimport { NavProfile } from \"./NavProfile\";\r\nimport NavNotification from \"./NavNotification\";\r\nimport NavLanguage from \"./NavLanguage\";\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = (props) => {\r\n  const {\r\n    navCollapsed,\r\n    mobileNav,\r\n    navType,\r\n    headerNavColor,\r\n    toggleCollapsedNav,\r\n    onMobileNavToggle,\r\n    isMobile,\r\n  } = props;\r\n  const [searchActive, setSearchActive] = useState(false);\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false);\r\n  };\r\n\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed);\r\n    } else {\r\n      onMobileNavToggle(!mobileNav);\r\n    }\r\n  };\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n  const mode = utils.getColorContrast(headerNavColor);\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return \"0px\";\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`;\r\n    }\r\n  };\r\n  return (\r\n    <Header\r\n      className={`app-header ${mode}`}\r\n      style={{ backgroundColor: headerNavColor }}\r\n    >\r\n      <div className={`app-header-wrapper ${isNavTop ? \"layout-top-nav\" : \"\"}`}>\r\n        <Logo logoType={mode} />\r\n        <div className=\"nav\" style={{ width: `calc(100% - ${getNavWidth()})` }}>\r\n          <div className=\"nav-left\">\r\n            <Menu mode=\"horizontal\">\r\n              {isNavTop && !isMobile ? null : (\r\n                <Menu.Item\r\n                  key=\"0\"\r\n                  onClick={() => {\r\n                    onToggle();\r\n                  }}\r\n                >\r\n                  {navCollapsed || isMobile ? (\r\n                    <MenuUnfoldOutlined className=\"nav-icon\" />\r\n                  ) : (\r\n                    <MenuFoldOutlined className=\"nav-icon\" />\r\n                  )}\r\n                </Menu.Item>\r\n              )}\r\n            </Menu>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            {/* <NavLanguage /> */}\r\n            {/* <NavNotification /> */}\r\n            <NavProfile />\r\n            {/* <NavPanel /> */}\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose} />\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav } = theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  toggleCollapsedNav,\r\n  onMobileNavToggle,\r\n})(HeaderNav);\r\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\SideNav.js",["1837","1838","1839","1840","1841","1842"],"import React from \"react\";\r\nimport { Avatar, Button, Col, Layout, Space, Tabs } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_DARK,\r\n  NAV_TYPE_SIDE,\r\n} from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport MenuContentAdmin from \"./MenuContentAdmin\";\r\nimport {\r\n  HomeOutlined,\r\n  PieChartOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport AvatarStatus from \"../shared-components/AvatarStatus\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport navigationAdminConfig from \"configs/NavigationAdminConfig\";\r\n\r\nconst { Sider } = Layout;\r\nconst profileImg = \"/img/avatars/thumb-1.jpg\";\r\n\r\nexport const SideNav = ({\r\n  navCollapsed,\r\n  sideNavTheme,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n  return (\r\n    <Sider\r\n      className={`side-nav ${\r\n        sideNavTheme === SIDE_NAV_DARK ? \"side-nav-dark\" : \"\"\r\n      }`}\r\n      width={SIDE_NAV_WIDTH}\r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <div\r\n          key=\"prof\"\r\n          className={`d-flex align-items-center justify-content-between m-4`}\r\n        >\r\n          {!navCollapsed && (\r\n            <AvatarStatus\r\n              id=\"profile\"\r\n              src={profileImg}\r\n              name=\"Tharindu Lakshan\"\r\n              subTitle=\"Member\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className={\"ml-2\"}>\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <Tabs.TabPane\r\n              tab={\r\n                <span>\r\n                  <HomeOutlined />\r\n                </span>\r\n              }\r\n              key=\"1\"\r\n            >\r\n              <MenuContent\r\n                type={NAV_TYPE_SIDE}\r\n                data={navigationConfig}\r\n                {...props}\r\n              />\r\n            </Tabs.TabPane>\r\n            {/* \r\n            <Tabs.TabPane\r\n              tab={\r\n                <span>\r\n                  <PieChartOutlined />{\" \"}\r\n                </span>\r\n              }\r\n              key=\"2\"\r\n            >\r\n              <MenuContent\r\n                type={NAV_TYPE_SIDE}\r\n                data={navigationConfig}\r\n                {...props}\r\n              />\r\n            </Tabs.TabPane> */}\r\n\r\n            <Tabs.TabPane\r\n              tab={\r\n                <span>\r\n                  <SettingOutlined />\r\n                </span>\r\n              }\r\n              key=\"3\"\r\n            >\r\n              <MenuContentAdmin type={NAV_TYPE_SIDE} {...props} />\r\n            </Tabs.TabPane>\r\n          </Tabs>\r\n        </div>\r\n      </Scrollbars>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } = theme;\r\n  return { navCollapsed, sideNavTheme };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\MobileNav.js",["1843","1844","1845"],"import React from 'react';\r\nimport { Drawer, Tabs } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent';\r\nimport MenuContentAdmin from './MenuContentAdmin';\r\nimport { onMobileNavToggle } from 'redux/actions/Theme';\r\nimport Logo from './Logo';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport navigationAdminConfig from 'configs/NavigationAdminConfig';\r\nimport {\r\n  UserOutlined,\r\n  UserAddOutlined,\r\n  AppleOutlined,\r\n  AndroidOutlined,\r\n} from '@ant-design/icons';\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement='left'\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection='column' className='h-100'>\r\n        <Flex justifyContent='between' alignItems='center'>\r\n          <Logo mobileLogo={true} />\r\n          <div className='nav-close' onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className='mobile-nav-menu'>\r\n          <Scrollbars autoHide>\r\n            <Tabs defaultActiveKey='2'>\r\n              <Tabs.TabPane\r\n                tab={\r\n                  <span>\r\n                    <AppleOutlined />\r\n                    Main{' '}\r\n                  </span>\r\n                }\r\n                key='1'\r\n              >\r\n                <MenuContent\r\n                  type={NAV_TYPE_SIDE}\r\n                  data={navigationConfig}\r\n                  {...props}\r\n                />\r\n              </Tabs.TabPane>\r\n\r\n              <Tabs.TabPane\r\n                tab={\r\n                  <span>\r\n                    <AndroidOutlined />\r\n                    Admin\r\n                  </span>\r\n                }\r\n                key='2'\r\n              >\r\n                <MenuContentAdmin type={NAV_TYPE_SIDE} {...props} />\r\n              </Tabs.TabPane>\r\n            </Tabs>\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\auth-views\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\utils\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\configs\\NavigationAdminConfig.js",["1846"],"import { \r\n  DashboardOutlined,ShoppingOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst adminNavTree = [\r\n    {\r\n      key: 'admin',\r\n      title: 'Admin',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: [\r\n          {\r\n              key: 'admin',\r\n              path: `${APP_PREFIX_PATH}/home`,\r\n              title: 'Settings',\r\n              icon: DashboardOutlined,\r\n              breadcrumb: false,\r\n              submenu: []\r\n          }\r\n      ]\r\n    }\r\n]\r\n\r\n\r\nconst navigationAdminConfig = [\r\n  ...adminNavTree\r\n]\r\n\r\nexport default navigationAdminConfig;\r\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\http\\axiosHttp.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\Logo.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\MenuContentAdmin.js",["1847","1848","1849","1850","1851","1852","1853"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu, Grid } from 'antd';\nimport IntlMessage from '../util-components/IntlMessage';\nimport Icon from '../util-components/Icon';\nimport { connect } from 'react-redux';\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\nimport utils from 'utils';\nimport { onMobileNavToggle } from 'redux/actions/Theme';\nimport {\n  DashboardOutlined,\n  ShoppingOutlined,\n  DropboxOutlined,\n  TeamOutlined,\n  UserOutlined,\n  UnorderedListOutlined,\n  FileOutlined,\n} from '@ant-design/icons';\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\n\nconst { SubMenu } = Menu;\nconst { useBreakpoint } = Grid;\n\nconst setLocale = (isLocaleOn, localeKey) =>\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\n\nconst setDefaultOpen = (key) => {\n  let keyList = [];\n  let keyString = '';\n  if (key) {\n    const arr = key.split('-');\n    for (let index = 0; index < arr.length; index++) {\n      const elm = arr[index];\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\n      keyList.push(keyString);\n    }\n  }\n  return keyList;\n};\n\nconst SideNavContentAdmin = (props) => {\n  const {\n    sideNavTheme,\n    routeInfo,\n    hideGroupTitle,\n    localization,\n    onMobileNavToggle,\n  } = props;\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\n  const closeMobileNav = () => {\n    if (isMobile) {\n      onMobileNavToggle(false);\n    }\n  };\n  return (\n    <Menu\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? 'light' : 'dark'}\n      mode='inline'\n      style={{ height: '100%', borderRight: 0 }}\n      defaultSelectedKeys={[routeInfo?.key]}\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\n      className={hideGroupTitle ? 'hide-group-title' : ''}\n    >\n      <Menu.ItemGroup key='user management' title='User Management'>\n        <Menu.Item key='user list' icon={<UserOutlined />}>\n          <span>User List</span>\n          <Link\n            onClick={() => closeMobileNav()}\n            to={`${APP_PREFIX_PATH}/user/userlist`}\n          />\n        </Menu.Item>\n        <Menu.Item key='role list' icon={<UserOutlined />}>\n          <span>User Role List</span>\n          <Link\n            onClick={() => closeMobileNav()}\n            to={`${APP_PREFIX_PATH}/user/rolelist`}\n          />\n        </Menu.Item>\n        <Menu.Item key='permission list' icon={<UserOutlined />}>\n          <span>Permission List</span>\n          <Link\n            onClick={() => closeMobileNav()}\n            to={`${APP_PREFIX_PATH}/user/prmissionlist`}\n          />\n        </Menu.Item>\n      </Menu.ItemGroup>\n    </Menu>\n  );\n};\n\nconst TopNavContent = (props) => {\n  const { topNavColor, localization } = props;\n  return (\n    <Menu mode='horizontal' style={{ backgroundColor: topNavColor }}>\n      {props.data.map((menu) =>\n        menu.submenu.length > 0 ? (\n          <SubMenu\n            key={menu.key}\n            popupClassName='top-nav-menu'\n            title={\n              <span>\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\n                <span>{setLocale(localization, menu.title)}</span>\n              </span>\n            }\n          >\n            {menu.submenu.map((subMenuFirst) =>\n              subMenuFirst.submenu.length > 0 ? (\n                <SubMenu\n                  key={subMenuFirst.key}\n                  icon={\n                    subMenuFirst.icon ? (\n                      <Icon type={subMenuFirst?.icon} />\n                    ) : null\n                  }\n                  title={setLocale(localization, subMenuFirst.title)}\n                >\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\n                    <Menu.Item key={subMenuSecond.key}>\n                      <span>\n                        {setLocale(localization, subMenuSecond.title)}\n                      </span>\n                      <Link to={subMenuSecond.path} />\n                    </Menu.Item>\n                  ))}\n                </SubMenu>\n              ) : (\n                <Menu.Item key={subMenuFirst.key}>\n                  {subMenuFirst.icon ? (\n                    <Icon type={subMenuFirst?.icon} />\n                  ) : null}\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\n                  <Link to={subMenuFirst.path} />\n                </Menu.Item>\n              )\n            )}\n          </SubMenu>\n        ) : (\n          <Menu.Item key={menu.key}>\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\n            <span>{setLocale(localization, menu?.title)}</span>\n            {menu.path ? <Link to={menu.path} /> : null}\n          </Menu.Item>\n        )\n      )}\n    </Menu>\n  );\n};\n\nconst MenuContentAdmin = (props) => {\n  return props.type === NAV_TYPE_SIDE ? (\n    <SideNavContentAdmin {...props} />\n  ) : (\n    <TopNavContent {...props} />\n  );\n};\n\nconst mapStateToProps = ({ theme }) => {\n  const { sideNavTheme, topNavColor } = theme;\n  return { sideNavTheme, topNavColor };\n};\n\nexport default connect(mapStateToProps, { onMobileNavToggle })(\n  MenuContentAdmin\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\MenuContent.js",["1854","1855","1856","1857"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from \"utils\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport {\r\n  DashboardOutlined,\r\n  ShoppingOutlined,\r\n  DropboxOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  UnorderedListOutlined,\r\n  FileOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n  const {\r\n    sideNavTheme,\r\n    routeInfo,\r\n    hideGroupTitle,\r\n    localization,\r\n    onMobileNavToggle,\r\n  } = props;\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\r\n  const closeMobileNav = () => {\r\n    if (isMobile) {\r\n      onMobileNavToggle(false);\r\n    }\r\n  };\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      <Menu.ItemGroup key=\"lead_generation\" title=\"Lead Generation\">\r\n        <Menu.Item key=\"todos\" icon={<UserOutlined />}>\r\n          <span>Todo</span>\r\n          <Link\r\n            onClick={() => closeMobileNav()}\r\n            to={`${APP_PREFIX_PATH}/todos/list`}\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item key=\"customer\" icon={<TeamOutlined />}>\r\n          <span>Customer</span>\r\n          <Link\r\n            onClick={() => closeMobileNav()}\r\n            to={`${APP_PREFIX_PATH}/customer/list`}\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item key=\"lead\" icon={<ShoppingOutlined />}>\r\n          <span>Lead</span>\r\n          <Link\r\n            onClick={() => closeMobileNav()}\r\n            to={`${APP_PREFIX_PATH}/lead/list`}\r\n          />\r\n        </Menu.Item>\r\n      </Menu.ItemGroup>\r\n\r\n      <Menu.ItemGroup key=\"quote\" title=\"Quote\">\r\n        <Menu.Item key=\"runner quote\" icon={<FileOutlined />}>\r\n          <span>Runner Quote</span>\r\n          <Link\r\n            onClick={() => closeMobileNav()}\r\n            to={`${APP_PREFIX_PATH}/quotation/list`}\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item key=\"quote approval\" icon={<FileOutlined />}>\r\n          <span>Quote Approval</span>\r\n          <Link\r\n            onClick={() => closeMobileNav()}\r\n            to={`${APP_PREFIX_PATH}/quotation/approvallist`}\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item key=\"quote release\" icon={<FileOutlined />}>\r\n          <span>Quote Release</span>\r\n          <Link\r\n            onClick={() => closeMobileNav()}\r\n            to={`${APP_PREFIX_PATH}/customerUnblock/list`}\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item key=\"repeater request\" icon={<FileOutlined />}>\r\n          <span>Repeater Request</span>\r\n          <Link\r\n            onClick={() => closeMobileNav()}\r\n            to={`${APP_PREFIX_PATH}/repeater/list`}\r\n          />\r\n        </Menu.Item>\r\n\r\n        {/* <Menu.Item key='repeater quote' icon={<FileOutlined />}>\r\n          <span>Repeater Quote</span>\r\n          <Link onClick={() => closeMobileNav()} to={`${APP_PREFIX_PATH}`} />\r\n        </Menu.Item> */}\r\n      </Menu.ItemGroup>\r\n\r\n      {/* <Menu.ItemGroup key='invoice' title='Invoice'>\r\n        <Menu.Item key='runner invoice' icon={<FileOutlined />}>\r\n          <span>Runner Invoice</span>\r\n          <Link onClick={() => closeMobileNav()} to={`${APP_PREFIX_PATH}`} />\r\n        </Menu.Item>\r\n        <Menu.Item key='repeater invoice' icon={<FileOutlined />}>\r\n          <span>Repeater Invoice</span>\r\n          <Link onClick={() => closeMobileNav()} to={`${APP_PREFIX_PATH}`} />\r\n        </Menu.Item>\r\n      </Menu.ItemGroup>\r\n\r\n      <Menu.ItemGroup key='collection' title='Collection'>\r\n        <Menu.Item key='new collection' icon={<FileOutlined />}>\r\n          <span>New Collection</span>\r\n          <Link onClick={() => closeMobileNav()} to={`${APP_PREFIX_PATH}`} />\r\n        </Menu.Item>\r\n        <Menu.Item key='reconciliation' icon={<FileOutlined />}>\r\n          <span>Reconciliation</span>\r\n          <Link onClick={() => closeMobileNav()} to={`${APP_PREFIX_PATH}`} />\r\n        </Menu.Item>\r\n      </Menu.ItemGroup> */}\r\n\r\n      {/* {props.data.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link\r\n                        onClick={() => closeMobileNav()}\r\n                        to={subMenuSecond.path}\r\n                      />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link\r\n                    onClick={() => closeMobileNav()}\r\n                    to={subMenuFirst.path}\r\n                  />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? (\r\n              <Link onClick={() => closeMobileNav()} to={menu.path} />\r\n            ) : null}\r\n          </Menu.Item>\r\n        )\r\n      )} */}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {props.data.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\NavLanguage.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\NavNotification.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\NavProfile.js",["1858"],"import React from \"react\";\r\nimport { Menu, Dropdown, Avatar } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  EditOutlined,\r\n  SettingOutlined,\r\n  ShopOutlined,\r\n  QuestionCircleOutlined,\r\n  LogoutOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Icon from \"components/util-components/Icon\";\r\nimport { signOut } from \"redux/actions/Auth\";\r\n\r\nconst menuItem = [\r\n  {\r\n    title: \"Edit Profile\",\r\n    icon: EditOutlined,\r\n    path: \"/\",\r\n  },\r\n\r\n  {\r\n    title: \"Account Setting\",\r\n    icon: SettingOutlined,\r\n    path: \"/\",\r\n  },\r\n  {\r\n    title: \"Billing\",\r\n    icon: ShopOutlined,\r\n    path: \"/\",\r\n  },\r\n  {\r\n    title: \"Help Center\",\r\n    icon: QuestionCircleOutlined,\r\n    path: \"/\",\r\n  },\r\n];\r\n\r\nexport const NavProfile = (props) => {\r\n  const { signOut } = props;\r\n\r\n  const logout = () => {\r\n    console.log(\"asd\");\r\n    signOut();\r\n  };\r\n\r\n  const profileImg = \"/img/avatars/thumb-1.jpg\";\r\n\r\n  const profileMenu = (\r\n    <div className=\"nav-profile nav-dropdown\">\r\n      <div className=\"nav-profile-header\">\r\n        <div className=\"d-flex\">\r\n          <Avatar size={45} src={profileImg} />\r\n          <div className=\"pl-3\">\r\n            <h4 className=\"mb-0\">Charlie Howard</h4>\r\n            <span className=\"text-muted\">Frontend Developer</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"nav-profile-body\">\r\n        <Menu>\r\n          {/* {menuItem.map((el, i) => {\r\n            return (\r\n              <Menu.Item key={i}>\r\n                <a href={el.path}>\r\n                  <Icon className=\"mr-3\" type={el.icon} />\r\n                  <span className=\"font-weight-normal\">{el.title}</span>\r\n                </a>\r\n              </Menu.Item>\r\n            );\r\n          })} */}\r\n          <Menu.Item key={menuItem.legth + 1} onClick={logout}>\r\n            <span>\r\n              <LogoutOutlined className=\"mr-3\" />\r\n              <span className=\"font-weight-normal\">Sign Out</span>\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Dropdown placement=\"bottomRight\" overlay={profileMenu} trigger={[\"click\"]}>\r\n      <Menu className=\"d-flex align-item-center\" mode=\"horizontal\">\r\n        <Menu.Item>\r\n          <Avatar src={profileImg} />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => {};\r\n\r\nconst mapDispatchToProps = {\r\n  signOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavProfile);\r\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockDetails\\CustomerUnblockDetailsMain.js",["1859","1860","1861"],"import React, { useEffect } from 'react';\nimport Header from './Header';\nimport { Col, Row } from 'antd';\nimport { useHistory, useParams } from 'react-router-dom';\nimport SideCards from './SideCards';\nimport CustomerUnblockDetails from './CustomerUnblockDetails';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { customerUnblockListLoadDataByOne } from '../redux/actions/customerunblockListActions';\n\nconst CustomerUnblockDetailsMain = (props) => {\n  const {\n    customerUnblockListLoadDataByOne,\n    currentUnblockData,\n    currentUnblockLoading,\n    customerValidData,\n    customerValidLoading,\n  } = props;\n  let { id } = useParams();\n\n  useEffect(() => {\n    customerUnblockListLoadDataByOne(id);\n  }, []);\n  return (\n    <>\n      <Header currentUnblockData={currentUnblockData} />\n      <Row gutter={16} className='mt-3'>\n        <Col xs={24} sm={8} md={8}>\n          <SideCards currentUnblockData={currentUnblockData} />\n        </Col>\n        <Col xs={24} sm={24} md={16}>\n          <CustomerUnblockDetails\n            customerValidLoading={customerValidLoading}\n            customerValidData={customerValidData}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nCustomerUnblockDetailsMain.prototype = {\n  currentUnblockData: PropTypes.object.isRequired,\n  currentUnblockLoading: PropTypes.object.isRequired,\n  customerValidData: PropTypes.object.isRequired,\n  customerValidLoading: PropTypes.object.isRequired,\n  customerUnblockListLoadDataByOne: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  currentUnblockData: state.customerUnblockList.current,\n  currentUnblockLoading: state.customerUnblockList.loading,\n  customerValidData: state.quotationList.customerValidationData,\n  customerValidLoading: state.quotationList.loadingCVData,\n});\nexport default connect(mapStateToProps, { customerUnblockListLoadDataByOne })(\n  CustomerUnblockDetailsMain\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockList\\CustomerUnblockMain.js",["1862","1863"],"import React, { Fragment, useState } from \"react\";\nimport {\n  PageHeader,\n  Button,\n  Form,\n  Row,\n  Col,\n  Input,\n  Select,\n  Drawer,\n  DatePicker,\n} from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nimport AppBreadcrumb from \"components/layout-components/AppBreadcrumb\";\nimport CustomerUnblockList from \"./CustomerUnblockList\";\n\nconst CustomerUnblockListFilter = () => {\n  const [form1] = Form.useForm();\n  const [form2] = Form.useForm();\n\n  const { RangePicker } = DatePicker;\n\n  const [visiable, setVisiable] = useState(false);\n\n  const onChange = (date, dateString) => {\n    console.log(date, dateString);\n  };\n  const onClose = () => {\n    setVisiable(false);\n  };\n\n  return (\n    <Fragment>\n      <Form form={form1}>\n        <Row gutter={8}>\n          <Col xs={24} md={18}>\n            <Row gutter={10}>\n              <Col xs={24} md={8}>\n                <Form.Item>\n                  <Search placeholder=\"Search\" />\n                </Form.Item>\n              </Col>\n              <Col xs={24} md={8}>\n                <Form.Item>\n                  <Search placeholder=\"Search Customer\" />\n                </Form.Item>\n              </Col>\n              <Col xs={24} md={8}>\n                <Form.Item>\n                  <Select placeholder=\"Quotation No\">\n                    <Select.Option value=\"Pubudu\">Pubudu</Select.Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col xs={24} md={6}>\n            <Row gutter={[10, 8]}>\n              <Col xs={24} md={12}>\n                <Button\n                  style={{ width: \"100%\" }}\n                  onClick={() => setVisiable(!visiable)}\n                >\n                  More filter\n                </Button>\n              </Col>\n              <Col xs={24} md={12}>\n                <Button style={{ width: \"100%\" }} icon={<SearchOutlined />}>\n                  Search\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Form>\n\n      <Drawer\n        visible={visiable}\n        onClose={onClose}\n        placement=\"right\"\n        closable={false}\n        title=\"Filter\"\n        drawerStyle={{ backgroundColor: \"#FAFAFB\" }}\n        footer={\n          <Row justify=\"space-between\">\n            <Col lg={12}>\n              <Button onClick={onClose}>Cancle</Button>\n            </Col>\n            <Col lg={12}>\n              <Button type=\"primary\" icon={<SearchOutlined />}>\n                Search\n              </Button>\n            </Col>\n          </Row>\n        }\n      >\n        <Form form={form2} name={\"filter-lead\"}>\n          <Row>\n            <Col xs={24} sm={24} md={24} lg={24}>\n              <Form.Item>\n                <Select placeholder=\"Status\">\n                  <Select.Option value=\"kasun\">--Kasun--</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={24}>\n              <Form.Item>\n                <RangePicker />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Drawer>\n    </Fragment>\n  );\n};\n\nconst CustomerUnblockMain = () => {\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"Customer Unblock Request List\"\n        subTitle={<AppBreadcrumb />}\n      />\n      <div>\n        <CustomerUnblockListFilter />\n      </div>\n      <div className=\"mt-3\">\n        <CustomerUnblockList />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CustomerUnblockMain;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Wired-Panel\\WiredPanelMain.js",["1864"],"import React from 'react';\nimport { Tabs, Form, Alert } from 'antd';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport Header from '../RepeaterComponents/Header';\nimport WiredPanelDetails from '../Wired-Panel/WiredPanelDetails';\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addRepeater } from \"../redux/actions/repeaterAction\";\nimport { motion } from \"framer-motion\";\nconst { TabPane } = Tabs;\n\nconst WiredPanelMain = (props) => {\n  const { addRepeater, addLoading, showMessage, message } = props;\n  let history = useHistory();\n  const [formWP] = Form.useForm();\n\n  const onSubmit = () => {\n    formWP.validateFields().then((values) => {\n      const {\n        asPerTheDrawing,\n        asPerTheSample,\n        environment,\n        coatingType,\n        color,\n        asPerTheBOQ,\n        brackets,\n        coverPlate,\n        mountingMethod,\n        remarkWP,\n        bpr,\n        designation,\n        mobileNumber,\n        uuid,\n        customer,\n        remark,\n        email,\n        contactName,\n        dragger\n      } = values;\n      let colorValue\n      if (color === \"Other\") {\n        const { OtherColor } = values;\n        colorValue = OtherColor\n      } else {\n        colorValue = color;\n      }\n      const requestDetails = {\n        'As Per The Drawing': asPerTheDrawing,\n        'As Per The Sample': asPerTheSample,\n        'Environment': environment,\n        'Coating Type': coatingType,\n        'Colour': colorValue,\n        'As Per The BOQ': asPerTheBOQ,\n        'Brackets': brackets,\n        'Cover Plate': coverPlate,\n        'Mounting Method': mountingMethod,\n        'Remark': remarkWP,\n      };\n      const wpData = {\n        customer_id: uuid,\n        customer_name: customer,\n        customer_bpr: bpr,\n        created_by: '1',\n        created_user_name: 'Admin P',\n        repeater_category_id: '7',\n        request_contact_name: contactName,\n        email: email,\n        designation: designation,\n        mobile_no: mobileNumber,\n        remark: remark,\n        repeater_details: JSON.stringify(requestDetails),\n      };\n      const repeaterNW = new FormData();\n      repeaterNW.append('jsonData', JSON.stringify(wpData));\n      repeaterNW.append('file', dragger[0].originFileObj);\n      addRepeater(repeaterNW);\n      history.push('/app/repeater/list')\n    });\n  }\n\n  return (\n    <>\n      <Form\n        form={formWP}\n        className='justify-space-between'\n        labelAlign='left'\n        name='formWp'\n      >\n        <Header onAdd={onSubmit} />\n        <br></br>\n        <div className='container mt-3'>\n          <Tabs defaultActiveKey='1' style={{ lineHeight: '1' }}>\n            <TabPane size='small' tab='WiredPanel' key='1'>\n              <WiredPanelDetails />\n            </TabPane>\n            <TabPane size='small' tab='Customer' key='2'>\n              <CustomerDetails form={formWP} />\n            </TabPane>\n          </Tabs>\n        </div>\n      </Form>\n      <motion.div\n        initial={{ opacity: 0, marginBottom: 0 }}\n        animate={{\n          opacity: showMessage ? 1 : 0,\n          marginBottom: showMessage ? 20 : 0,\n        }}\n      >\n        <Alert type='error' showIcon message={message}></Alert>\n      </motion.div>\n    </>\n  );\n};\n\nWiredPanelMain.prototype = {\n  addLoading: PropTypes.object.isRequired,\n  showMessage: PropTypes.object.isRequired,\n  message: PropTypes.object.isRequired,\n  addRepeater: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  addLoading: state.repeater.loading,\n  showMessage: state.repeater.showMessage,\n  message: state.repeater.message,\n});\n\nexport default connect(mapStateToProps, { addRepeater })(WiredPanelMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\PowerDB\\PowerDBMain.js",["1865"],"import React from 'react';\nimport { Tabs, Form } from 'antd';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport Header from '../RepeaterComponents/Header';\nimport PowerDBDetails from './PowerDBDetails';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addRepeater } from '../redux/actions/repeaterAction';\nconst { TabPane } = Tabs;\n\nconst PowerDBMain = (props) => {\n  const { addRepeater, addLoading } = props;\n  let history = useHistory();\n  const [formPowerDB] = Form.useForm();\n  const onSubmit = () => {\n    formPowerDB.validateFields().then((values) => {\n      const {\n        projectName,\n        requiredDate,\n        panelType,\n        coverPlate,\n        dimentions,\n        coatingType,\n        colour_FinishType,\n        formType,\n        mountingPlates,\n        lBars,\n        cableAlley,\n        accessories_Other,\n        projectLocation,\n        ipRating,\n        environment,\n        collerType,\n        cableEntry,\n        otherCoatingType,\n        designOutput,\n        other,\n        canopy,\n        coverPlates,\n        busAlley,\n        gpLevelNeedToMatch,\n        remarkPowerDB,\n        uuid,\n        customer,\n        bpr,\n        contactName,\n        email,\n        designation,\n        mobileNumber,\n        remark,\n          dragger\n      } = values;\n      const requestDetails = {\n        \"Project Name\":projectName,\n        \"Required Date\": moment(requiredDate).format('YYYY-MM-DD'),\n        \"Panel Type\":panelType,\n        \"Cover Plate\":coverPlate,\n        \"Dimensions\":dimentions,\n        \"Coating Type\":coatingType,\n        \"Colour Finish Type\":colour_FinishType,\n        \"Form Type\":formType,\n        \"Mounting Plates\":mountingPlates,\n        \"L Bars\":lBars,\n        \"Cable Alley\":cableAlley,\n        \"Other Accessories\":accessories_Other,\n        \"Project Location\":projectLocation,\n        \"IP Rating\":ipRating,\n        \"Environment\":environment,\n        \"Collar Type\":collerType,\n        \"Cable Entry\":cableEntry,\n        \"Other Coating Type\":otherCoatingType,\n        \"Design Output\":designOutput,\n        \"Other\":other,\n        \"Canopy\":canopy,\n        \"No Of Cover Plates\":coverPlates,\n        \"Bus Alley\":busAlley,\n        \"GP Level Need To Match\":gpLevelNeedToMatch,\n        \"Remark\":remarkPowerDB,\n      };\n      const powerDB = {\n        customer_id: uuid,\n        customer_name: customer,\n        customer_bpr: bpr,\n        created_by: '1',\n        repeater_category_id: '5',\n        request_contact_name: contactName,\n        email: email,\n        designation: designation,\n        mobile_no: mobileNumber,\n        remark: remark,\n        repeater_details: JSON.stringify(requestDetails),\n      };\n      const repeaterNW = new FormData();\n      repeaterNW.append('jsonData', JSON.stringify(powerDB));\n      repeaterNW.append('file', dragger[0].originFileObj);\n      addRepeater(repeaterNW);\n      history.push('/app/repeater/list')\n    });\n  };\n  return (\n    <>\n      <Form\n        form={formPowerDB}\n        className='justify-space-between'\n        labelAlign='left'\n      >\n        <Header onAdd={onSubmit} />\n        <br></br>\n        <div className='container mt-3'>\n          <Tabs defaultActiveKey='1' style={{ lineHeight: '1' }}>\n            <TabPane size='small' tab='Power DB' key='1'>\n              <PowerDBDetails />\n            </TabPane>\n            <TabPane size='small' tab='Customer' key='2'>\n              <CustomerDetails form={formPowerDB} />\n            </TabPane>\n          </Tabs>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nPowerDBMain.prototype = {\n  addLoading: PropTypes.object.isRequired,\n  addRepeater: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  addLoading: state.repeater.loading,\n});\n\nexport default connect(mapStateToProps, { addRepeater })(PowerDBMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\CableManagement\\CableManagementMain.js",["1866","1867","1868"],"import React from 'react';\nimport { Tabs, Form } from 'antd';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport Header from '../RepeaterComponents/Header';\nimport CableManagementDetails from './CableManagementDetails';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addRepeater } from \"../redux/actions/repeaterAction\";\nimport { useHistory } from \"react-router-dom\";\n\nconst { TabPane } = Tabs;\n\nconst CableManagementMain = (props) => {\n  const { addRepeater, addLoading, showMessage, message } = props;\n  let history = useHistory();\n  const [formCM] = Form.useForm();\n\n  const onSubmit = () => {\n    formCM.validateFields().then((values) => {\n      const {\n        asPerTheDrawing,\n        asPerTheSample,\n        lid,\n        surfaceFinish,\n        dimensions,\n        color,\n        asPerTheBOQ,\n        brackets,\n        remarkCM,\n        bpr,\n        designation,\n        mobileNumber,\n        uuid,\n        customer,\n        remark,\n        email,\n        contactName,\n        dragger\n      } = values;\n\n      let colorValue\n      if (color === \"Other\") {\n        const { OtherColor } = values;\n        colorValue = OtherColor\n      } else {\n        colorValue = color;\n      }\n\n      const requestDetails = {\n        'As Per The Drawing': asPerTheDrawing,\n        'As Per The Sample': asPerTheSample,\n        'Surface Finish': surfaceFinish,\n        'Dimensions': dimensions,\n        'Lid': lid,\n        'Colour': colorValue,\n        'As Per The BOQ': asPerTheBOQ,\n        'Brackets': brackets,\n        'Remark': remarkCM,\n      };\n      const cmData = {\n        customer_id: uuid,\n        customer_name: customer,\n        customer_bpr: bpr,\n        created_by: '1',\n        created_user_name: 'Admin P',\n        repeater_category_id: '8',\n        request_contact_name: contactName,\n        email: email,\n        designation: designation,\n        mobile_no: mobileNumber,\n        remark: remark,\n        repeater_details: JSON.stringify(requestDetails),\n      };\n      const repeaterNW = new FormData();\n      repeaterNW.append('jsonData', JSON.stringify(cmData));\n      repeaterNW.append('file', dragger[0]?.originFileObj);\n      addRepeater(repeaterNW);\n      history.push('/app/repeater/list')\n    });\n  }\n\n  return (\n    <>\n      <Form\n        className='justify-space-between'\n        labelAlign='left'\n        name='formCM'\n        form={formCM}\n      >\n        <Header onAdd={onSubmit} />\n        <br></br>\n        <div className='container mt-3'>\n          <Tabs defaultActiveKey='1' style={{ lineHeight: '1' }}>\n            <TabPane size='small' tab='Cable Management' key='1'>\n              <CableManagementDetails />\n            </TabPane>\n            <TabPane size='small' tab='Customer' key='2'>\n              <CustomerDetails form={formCM} />\n            </TabPane>\n          </Tabs>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nCableManagementMain.prototype = {\n  addLoading: PropTypes.object.isRequired,\n  showMessage: PropTypes.object.isRequired,\n  message: PropTypes.object.isRequired,\n  addRepeater: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  addLoading: state.repeater.loading,\n  showMessage: state.repeater.showMessage,\n  message: state.repeater.message,\n});\n\nexport default connect(mapStateToProps, { addRepeater })(CableManagementMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Generator\\GeneratorMain.js",["1869","1870","1871"],"import React from 'react';\nimport { Tabs, Form } from 'antd';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport Header from '../RepeaterComponents/Header';\nimport GeneratorDetails from './GeneratorDetails';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addRepeater } from \"../redux/actions/repeaterAction\";\nimport { useHistory } from \"react-router-dom\";\n\nconst { TabPane } = Tabs;\n\nconst GeneratorMain = (props) => {\n  const { addRepeater, addLoading, showMessage, message } = props;\n  let history = useHistory();\n  const [formGen] = Form.useForm();\n\n  const onSubmit = () => {\n    formGen.validateFields().then((values) => {\n      const {\n        capacity,\n        earthingLength,\n        changeOverSwitch,\n        cableDistance,\n        soundProof,\n        fuelTank,\n        remarkGen,\n        bpr,\n        designation,\n        mobileNumber,\n        uuid,\n        customer,\n        remark,\n        email,\n        contactName,\n        dragger\n      } = values;\n      const requestDetails = {\n        'Capacity': capacity,\n        'Earthing Length': earthingLength,\n        'Change Over Switch': changeOverSwitch,\n        'Cable Distance': cableDistance,\n        'Soundproof': soundProof,\n        'Fuel Tank': fuelTank,\n        'Remark': remarkGen,\n      };\n      const genData = {\n        customer_id: uuid,\n        customer_name: customer,\n        customer_bpr: bpr,\n        created_by: '1',\n        created_user_name: 'Admin P',\n        repeater_category_id: '9',\n        request_contact_name: contactName,\n        email: email,\n        designation: designation,\n        mobile_no: mobileNumber,\n        remark: remark,\n        repeater_details: JSON.stringify(requestDetails),\n      };\n      const repeaterNW = new FormData();\n      repeaterNW.append('jsonData', JSON.stringify(genData));\n      repeaterNW.append('file', dragger[0].originFileObj);\n      addRepeater(repeaterNW);\n      history.push('/app/repeater/list')\n    });\n  }\n\n  return (\n    <>\n      <Form\n        className='justify-space-between'\n        labelAlign='left'\n        name='formGen'\n        form={formGen}\n      >\n        <Header onAdd={onSubmit} />\n        <br></br>\n        <div className='container mt-3'>\n          <Tabs defaultActiveKey='1' style={{ lineHeight: '1' }}>\n            <TabPane size='small' tab='Generator' key='1'>\n              <GeneratorDetails />\n            </TabPane>\n            <TabPane size='small' tab='Customer' key='2'>\n              <CustomerDetails form={formGen} />\n            </TabPane>\n          </Tabs>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nGeneratorMain.prototype = {\n  addLoading: PropTypes.object.isRequired,\n  showMessage: PropTypes.object.isRequired,\n  message: PropTypes.object.isRequired,\n  addRepeater: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  addLoading: state.repeater.loading,\n  showMessage: state.repeater.showMessage,\n  message: state.repeater.message,\n});\n\nexport default connect(mapStateToProps, { addRepeater })(GeneratorMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Non-WiredPanel\\NonWiredPanelMain.js",["1872","1873","1874","1875"],"import React, { useState } from 'react';\nimport { Tabs, Form } from 'antd';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport Header from '../RepeaterComponents/Header';\nimport NonWiredPanelDetails from './NonWiredPanelDetails';\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addRepeater } from \"../redux/actions/repeaterAction\";\n\nconst { TabPane } = Tabs;\n\nconst NonWiredPanelMain = (props) => {\n  const { addRepeater, addLoading, showMessage, message } = props;\n  let history = useHistory();\n  const [formNW] = Form.useForm();\n\n  const onSubmit = () => {\n    formNW.validateFields().then((values) => {\n      const {\n        environment,\n        coverPlate,\n        coatingType,\n        mountingMethod,\n        asPerTheDrawing,\n        asPerTheBOQ,\n        mountingPlate,\n        asPerTheSample,\n        color,\n        remarkNW,\n        bpr,\n        designation,\n        mobileNumber,\n        uuid,\n        customer,\n        remark,\n        email,\n        contactName,\n        dragger,\n      } = values;\n      let colorValue\n      if (color === \"Other\") {\n        const { OtherColor } = values;\n        colorValue = OtherColor\n      } else {\n        colorValue = color;\n      }\n      const requestDetails = {\n        'Environment': environment,\n        'Coating Type': coatingType,\n        'Cover Plate': coverPlate,\n        'Mounting Method': mountingMethod,\n        'As Per The Drawing': asPerTheDrawing,\n        'As Per The BOQ': asPerTheBOQ,\n        'Mounting Plate': mountingPlate,\n        'As Per The Sample': asPerTheSample,\n        'Colour': colorValue,\n        'Remark': remarkNW,\n      };\n      const nwData = {\n        customer_id: uuid,\n        customer_name: customer,\n        customer_bpr: bpr,\n        created_by: '1',\n        created_user_name: 'Admin P',\n        repeater_category_id: '13',\n        request_contact_name: contactName,\n        email: email,\n        designation: designation,\n        mobile_no: mobileNumber,\n        remark: remark,\n        repeater_details: JSON.stringify(requestDetails),\n      };\n      const repeaterNW = new FormData();\n      repeaterNW.append('jsonData', JSON.stringify(nwData));\n      repeaterNW.append('file', dragger[0].originFileObj);\n      addRepeater(repeaterNW);\n      history.push('/app/repeater/list')\n    });\n  }\n  return (\n    <>\n      <Form\n        className='justify-space-between'\n        labelAlign='left'\n        name='advanced_search'\n        form={formNW}\n      >\n        <Header onAdd={onSubmit} />\n        <br></br>\n        <div className='container mt-3'>\n          <Tabs defaultActiveKey='1' style={{ lineHeight: '1' }}>\n            <TabPane size='small' tab='Non-Wired Panel' key='1'>\n              <NonWiredPanelDetails />\n            </TabPane>\n            <TabPane size='small' tab='Customer' key='2'>\n              <CustomerDetails form={formNW} />\n            </TabPane>\n          </Tabs>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nNonWiredPanelMain.prototype = {\n  addLoading: PropTypes.object.isRequired,\n  showMessage: PropTypes.object.isRequired,\n  message: PropTypes.object.isRequired,\n  addRepeater: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  addLoading: state.repeater.loading,\n  showMessage: state.repeater.showMessage,\n  message: state.repeater.message,\n});\n\nexport default connect(mapStateToProps, { addRepeater })(NonWiredPanelMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Customer\\CustomerDetails.js",["1876","1877","1878","1879"],"import React, { useEffect, useState } from 'react';\nimport {\n  Form,\n  Select,\n  Row,\n  Col,\n  Input,\n  Card,\n  Button,\n  Popover,\n  Upload,\n  message,\n} from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadCustomerList } from '../../quotation/QuotationList/redux/actions/quotationCreateAction';\nimport { useHistory } from 'react-router-dom';\n\nconst { Dragger } = Upload;\nconst { Option } = Select;\n\nconst normFile = (e) => {\n  console.log('Upload event:', e);\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e && e.fileList;\n};\n\nconst CustomerDetails = (props) => {\n  const [selectedCustomer, setCustomer] = useState(null);\n  const { customerList, customerListLoading, loadCustomerList, form } = props;\n\n  function onChange(value) {\n    setCustomer(JSON.parse(value));\n  }\n\n  useEffect(() => {\n    loadCustomerList();\n  }, []);\n\n  useEffect(() => {\n    form.setFieldsValue({\n      uuid: selectedCustomer?.uuid.toString(),\n      customer: selectedCustomer?.company.name.toString(),\n      bpr: selectedCustomer?.company.code.toString(),\n    });\n  }, [selectedCustomer]);\n\n  const selectCustomer = (\n    <Select\n      optionFilterProp='children'\n      onChange={onChange}\n      placeholder='Select A Customer'\n      showSearch\n      showArrow={false}\n      style={{ width: '200px' }}\n    >\n      {customerList?.map((customer) => {\n        return (\n          <Option value={JSON.stringify(customer)}>\n            {customer?.company.name.toString()}\n          </Option>\n        );\n      })}\n    </Select>\n  );\n\n\n  return (\n    <div>\n      <br></br>\n      <Row>\n        <Col xs={16}>\n          <Card\n            title='Customer Details'\n            extra={[\n              <Popover trigger='click' content={selectCustomer}>\n                <Button\n                  loading={customerListLoading}\n                  className='btn-sm'\n                  type='default'\n                  style={{\n                    width: 200,\n                  }}\n                >\n                  {selectedCustomer === null\n                    ? 'Select A Customer'\n                    :selectedCustomer?.company.name.toString().length>15? selectedCustomer?.company.name.toString().substring(0,15)+\"...\":\n                          selectedCustomer?.company.name.toString()\n                  }\n                </Button>\n              </Popover>,\n            ]}\n          >\n            <Row gutter={16}>\n              <Col xs={24} sm={24} md={12} lg={12}>\n                <Form.Item name='uuid' labelCol={{ xs: 24 }} hidden>\n                  <div>\n                    <Input value={selectedCustomer?.uuid.toString()} />\n                  </div>\n                </Form.Item>\n                <Form.Item\n                  name='customer'\n                  label='Customer'\n                  labelCol={{ xs: 24 }}\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please Enter Customer',\n                    },\n                  ]}\n                >\n                  <div>\n                    <Input value={selectedCustomer?.company.name.toString()} />\n                  </div>\n                </Form.Item>\n                <Form.Item\n                  name='contactName'\n                  label='Contact Name'\n                  labelCol={{ xs: 24 }}\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please Enter Contact Name',\n                    },\n                  ]}\n                >\n                  <div>\n                    <Input placeholder='Enter Contact Name' />\n                  </div>\n                </Form.Item>\n                <Form.Item\n                  name='email'\n                  label='Email'\n                  labelCol={{ xs: 24 }}\n                  hasFeedback\n                  rules={[\n                    {\n                      type: 'email',\n                      message: 'Please Enter Valid Email',\n                      pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    },\n                  ]}\n                >\n                  <Input placeholder='Enter Your Email' />\n                </Form.Item>\n              </Col>\n              <Col xs={24} sm={24} md={12} lg={12}>\n                <Form.Item\n                  name='bpr'\n                  label='BPR'\n                  labelCol={{ xs: 24 }}\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please Enter BRP',\n                    },\n                  ]}\n                >\n                  <div>\n                    <Input value={selectedCustomer?.company.code.toString()} />\n                  </div>\n                </Form.Item>\n                <Form.Item\n                  name='designation'\n                  label='Designation'\n                  labelCol={{ xs: 24 }}\n                  hasFeedback\n                  rules={[{ message: '-Designation-' }]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  name='mobileNumber'\n                  label='Mobile Number'\n                  labelCol={{ xs: 24 }}\n                  hasFeedback\n                  rules={[{ message: 'Mobile Number' }]}\n                >\n                  <Input addonBefore='+94' style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col className='mt-2' xs={24} sm={24} md={24} lg={24}>\n                <Form.Item\n                  name='remark'\n                  label='Remark'\n                  hasFeedback\n                  rules={[{ message: 'Remark' }]}\n                  labelCol={{ xs: 24 }}\n                >\n                  <Input.TextArea\n                    style={{\n                      height: 150,\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col xs={8}>\n          <Card className='ml-3' title='Attachments'>\n            <Form.Item\n              name='dragger'\n              valuePropName='fileList'\n              getValueFromEvent={normFile}\n              noStyle\n            >\n              <Dragger beforeUpload={() => false} multiple={false}\n                       >\n                <p className='ant-upload-drag-icon'>\n                  <InboxOutlined />\n                </p>\n                <p className='ant-upload-text'>\n                  Click or drag file to this area to upload\n                </p>\n                <p className='ant-upload-hint'>\n                  Support for a single or bulk upload. Strictly prohibit from\n                  uploading company data or other band files\n                </p>\n              </Dragger>\n            </Form.Item>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nCustomerDetails.prototype = {\n  customerList: PropTypes.object.isRequired,\n  loadCustomerList: PropTypes.func.isRequired,\n  customerListLoading: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => {\n  return {\n    customerList: state.quotationCreate.customerList,\n    customerListLoading: state.quotationCreate.customerListLoading,\n  };\n};\n\nexport default connect(mapStateToProps, { loadCustomerList })(CustomerDetails);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\CCTV\\CctvMain.js",["1880","1881","1882"],"import React from 'react';\nimport { Tabs, Form } from 'antd';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport Header from '../RepeaterComponents/Header';\nimport CctvDetails from './CctvDetails';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addRepeater } from \"../redux/actions/repeaterAction\";\nimport { useHistory } from \"react-router-dom\";\n\nconst { TabPane } = Tabs;\n\nconst CctvMain = (props) => {\n  const { addRepeater, addLoading, showMessage, message } = props;\n  let history = useHistory();\n  const [formCCTV] = Form.useForm();\n\n  const onSubmit = () => {\n    formCCTV.validateFields().then((values) => {\n      const {\n        noOfCamerasIndoor,\n        noOfCamerasOutdoor,\n        noOfExistingCameras,\n        recordingDuration,\n        monitor,\n        monitorSize,\n        typeOfRequirement,\n        valueAddedServices,\n        cctvCabling,\n        extensionCableType,\n        remarkCCTV,\n        bpr,\n        designation,\n        mobileNumber,\n        uuid,\n        customer,\n        remark,\n        email,\n        contactName,\n        dragger\n      } = values;\n      const requestDetails = {\n        'No Of Cameras Indoor': noOfCamerasIndoor,\n        'No Of Cameras Outdoor': noOfCamerasOutdoor,\n        'No Of Existing Cameras': noOfExistingCameras,\n        'Recording Duration': recordingDuration,\n        'Monitor': monitor,\n        'Monitor Size': monitorSize,\n        'Type Of Requirement': typeOfRequirement,\n        'Value Added Services': valueAddedServices,\n        'CCTV Cabling': cctvCabling,\n        'Extension Cable Type': extensionCableType,\n        'Remark': remarkCCTV,\n      };\n      const cctvData = {\n        customer_id: uuid,\n        customer_name: customer,\n        customer_bpr: bpr,\n        created_by: '1',\n        created_user_name: 'Admin P',\n        repeater_category_id: '10',\n        request_contact_name: contactName,\n        email: email,\n        designation: designation,\n        mobile_no: mobileNumber,\n        remark: remark,\n        repeater_details: JSON.stringify(requestDetails),\n      };\n      const repeaterNW = new FormData();\n      repeaterNW.append('jsonData', JSON.stringify(cctvData));\n      repeaterNW.append('file', dragger[0].originFileObj);\n      addRepeater(repeaterNW);\n      history.push('/app/repeater/list')\n    });\n  }\n  return (\n    <>\n      <Form\n        className='justify-space-between'\n        labelAlign='left'\n        name='formCCTV'\n        form={formCCTV}\n      >\n        <Header onAdd={onSubmit} />\n        <br></br>\n        <div className='container mt-3'>\n          <Tabs defaultActiveKey='1' style={{ lineHeight: '1' }}>\n            <TabPane size='small' tab='CCTV' key='1'>\n              <CctvDetails />\n            </TabPane>\n            <TabPane size='small' tab='Customer' key='2'>\n              <CustomerDetails form={formCCTV} />\n            </TabPane>\n          </Tabs>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nCctvMain.prototype = {\n  addLoading: PropTypes.object.isRequired,\n  showMessage: PropTypes.object.isRequired,\n  message: PropTypes.object.isRequired,\n  addRepeater: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  addLoading: state.repeater.loading,\n  showMessage: state.repeater.showMessage,\n  message: state.repeater.message,\n});\n\nexport default connect(mapStateToProps, { addRepeater })(CctvMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\LightningDetails\\LightningMain.js",["1883"],"import React from 'react';\nimport { Tabs, Form } from 'antd';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport Header from '../RepeaterComponents/Header';\nimport LightningDetails from './LightningDetails';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addRepeater } from '../redux/actions/repeaterAction';\nimport { useHistory } from 'react-router-dom';\nconst { TabPane } = Tabs;\n\nconst LightningMain = (props) => {\n  const { addRepeater, addLoading } = props;\n\n  let history = useHistory();\n\n  const [formLighting] = Form.useForm();\n\n  const onSubmit = () => {\n    formLighting.validateFields().then((values) => {\n      const {\n        requiredLUXLevel,\n        dimmingRequirement,\n        luminousFlux,\n        beamAngle,\n        ipating,\n        warranty,\n        colorTemperature,\n        requiredDimmingMethod,\n        cri,\n        ratedPower,\n        cutOut,\n        ikRating,\n        colorsOfFittings,\n        lampType,\n        cct,\n        mountingMethod,\n        material,\n        lifeSpan,\n        remarkLighting,\n        uuid,\n        customer,\n        bpr,\n        contactName,\n        email,\n        designation,\n        mobileNumber,\n        remark,\n        dragger,\n      } = values;\n      const requestDetails = {\n        \"Required LUX Level\":requiredLUXLevel,\n        \"Dimming Requirement\":dimmingRequirement,\n        \"Luminous Flux\":luminousFlux,\n        \"Beam Angle\":beamAngle,\n        \"IP Rating\":ipating,\n        \"Warranty\":warranty,\n        \"Colour Temperature\":colorTemperature,\n        \"Required Dimming Method\":requiredDimmingMethod,\n        \"CRI\":cri,\n        \"Rated Power\":ratedPower,\n        \"Cutout\":cutOut,\n        \"IK Rating\":ikRating,\n        \"Colour Of Fitting\":colorsOfFittings,\n        \"Lamp Type\":lampType,\n        \"CCT\":cct,\n        \"Mounting Method\":mountingMethod,\n        \"Material\":material,\n        \"Life Span\":lifeSpan,\n        \"Remark\":remarkLighting,\n      };\n      const lightningData = {\n        customer_id: uuid,\n        customer_name: customer,\n        customer_bpr: bpr,\n        created_by: '1',\n        repeater_category_id: '6',\n        request_contact_name: contactName,\n        email: email,\n        designation: designation,\n        mobile_no: mobileNumber,\n        remark: remark,\n        repeater_details: JSON.stringify(requestDetails),\n      };\n\n      const repeaterNW = new FormData();\n      repeaterNW.append('jsonData', JSON.stringify(lightningData));\n      repeaterNW.append('file', dragger[0].originFileObj);\n      addRepeater(repeaterNW);\n      history.push('/app/repeater/list')\n    });\n  };\n  return (\n    <>\n      <Form\n        form={formLighting}\n        className='justify-space-between'\n        labelAlign='left'\n      >\n        <Header onAdd={onSubmit} />\n        <br></br>\n        <div className='container mt-3'>\n          <Tabs defaultActiveKey='1' style={{ lineHeight: '1' }}>\n            <TabPane size='small' tab='Lightning' key='1'>\n              <LightningDetails />\n            </TabPane>\n            <TabPane size='small' tab='Customer' key='2'>\n              <CustomerDetails form={formLighting} />\n            </TabPane>\n          </Tabs>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nLightningMain.prototype = {\n  addLoading: PropTypes.object.isRequired,\n  addRepeater: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  addLoading: state.repeater.loading,\n});\n\nexport default connect(mapStateToProps, { addRepeater })(LightningMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Solar\\SolarMain.js",["1884","1885","1886"],"import React from 'react';\nimport { Tabs, Form } from 'antd';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport Header from '../RepeaterComponents/Header';\nimport SolarDeatils from './SolarDeatils';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addRepeater } from \"../redux/actions/repeaterAction\";\nimport { useHistory } from \"react-router-dom\";\nconst { TabPane } = Tabs;\n\nconst SolarMain = (props) => {\n  const { addRepeater, addLoading, showMessage, message } = props;\n  let history = useHistory();\n  const [formSolar] = Form.useForm();\n\n  const onSubmit = () => {\n    formSolar.validateFields().then((values) => {\n      const {\n        electricityBillNumber,\n        typeOfMeterConnection,\n        typeOfTariff,\n        typeOfRequirement,\n        paymentType,\n        averageMonthlyUnits,\n        roofType,\n        other,\n        electricityBillAmount,\n        extraSlabMountingStructure,\n        roofArea,\n        installationDate,\n        remarkSolar,\n        bpr,\n        designation,\n        mobileNumber,\n        uuid,\n        customer,\n        remark,\n        email,\n        contactName,\n        dragger\n      } = values;\n\n      let roof;\n      if (roofType === \"Other\") {\n        const { OtherRoof } = values;\n        roof = OtherRoof\n      } else {\n        roof = roofType;\n      }\n      const requestDetails = {\n        'Electricity Bill Number': electricityBillNumber,\n        'Type Of Meter Connection': typeOfMeterConnection,\n        'Type Of Tariff': typeOfTariff,\n        'Payment Type': paymentType,\n        'Average Monthly Units': averageMonthlyUnits,\n        'Roof Type': roof,\n        'Other': other,\n        'Type Of Requirement': typeOfRequirement,\n        'Electricity Bill Amount': electricityBillAmount,\n        'Extra Slab Mounting Structure': extraSlabMountingStructure,\n        'Roof Area': roofArea,\n        'Installation Date': installationDate,\n        'Remark': remarkSolar,\n      };\n      const solarData = {\n        customer_id: uuid,\n        customer_name: customer,\n        customer_bpr: bpr,\n        created_by: '1',\n        created_user_name: 'Admin P',\n        repeater_category_id: '11',\n        request_contact_name: contactName,\n        email: email,\n        designation: designation,\n        mobile_no: mobileNumber,\n        remark: remark,\n        repeater_details: JSON.stringify(requestDetails),\n      };\n      const repeaterNW = new FormData();\n      repeaterNW.append('jsonData', JSON.stringify(solarData));\n      repeaterNW.append('file', dragger[0].originFileObj);\n      addRepeater(repeaterNW);\n      history.push('/app/repeater/list')\n    });\n  }\n\n  return (\n    <>\n      <Form\n        className='justify-space-between'\n        labelAlign='left'\n        form={formSolar}\n      >\n        <Header onAdd={onSubmit} />\n        <br></br>\n        <div className='container mt-3'>\n          <Tabs defaultActiveKey='1' style={{ lineHeight: '1' }}>\n            <TabPane size='small' tab='Solar' key='1'>\n              <SolarDeatils />\n            </TabPane>\n            <TabPane size='small' tab='Customer' key='2'>\n              <CustomerDetails form={formSolar} />\n            </TabPane>\n          </Tabs>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nSolarMain.prototype = {\n  addLoading: PropTypes.object.isRequired,\n  showMessage: PropTypes.object.isRequired,\n  message: PropTypes.object.isRequired,\n  addRepeater: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  addLoading: state.repeater.loading,\n  showMessage: state.repeater.showMessage,\n  message: state.repeater.message,\n});\n\nexport default connect(mapStateToProps, { addRepeater })(SolarMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\QBUS\\QBusMain.js",["1887"],"import React from 'react';\nimport { Tabs, Form } from 'antd';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport Header from '../RepeaterComponents/Header';\nimport QBusDetails from './QBusDetails';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addRepeater } from '../redux/actions/repeaterAction';\nimport { useHistory } from 'react-router-dom';\nconst { TabPane } = Tabs;\n\nconst QBusMain = (props) => {\n  const { addRepeater, addLoading } = props;\n  let history = useHistory();\n  const [formQBUS] = Form.useForm();\n  const onSubmit = () => {\n    formQBUS.validateFields().then((values) => {\n      const {\n        softCopiesCADDrawing,\n        standardsFollow,\n        wiringStatus_newExists,\n        singleLineDiagram,\n        detailedSpecificationOfTheProject,\n        loadSpecificationIFSLDNotAvailable,\n        picturesTakenAtTheSite,\n        remarkQBUS,\n        uuid,\n        customer,\n        bpr,\n        contactName,\n        email,\n        designation,\n        mobileNumber,\n        remark,\n          dragger\n      } = values;\n      const requestDetails = {\n        \"Soft Copies CADD Drawing\":softCopiesCADDrawing,\n        \"Standards Follow\":standardsFollow,\n        \"Wiring Status New Exists\":wiringStatus_newExists,\n        \"Single Line Diagram\":singleLineDiagram,\n        \"Detailed Specification Of The Project\":detailedSpecificationOfTheProject,\n        \"Load Specification If SLD Not Available\":loadSpecificationIFSLDNotAvailable,\n        \"Pictures Taken At The Site\":picturesTakenAtTheSite,\n        \"Remark\":remarkQBUS,\n      };\n      const qbus = {\n        customer_id: uuid,\n        customer_name: customer,\n        customer_bpr: bpr,\n        created_by: '1',\n        repeater_category_id: '4',\n        request_contact_name: contactName,\n        email: email,\n        designation: designation,\n        mobile_no: mobileNumber,\n        remark: remark,\n        repeater_details: JSON.stringify(requestDetails),\n      };\n      const repeaterNW = new FormData();\n      repeaterNW.append('jsonData', JSON.stringify(qbus));\n      repeaterNW.append('file', dragger[0].originFileObj);\n      addRepeater(repeaterNW);\n      history.push('/app/repeater/list')\n    });\n  };\n  return (\n    <>\n      <Form form={formQBUS} className='justify-space-between' labelAlign='left'>\n        <Header onAdd={onSubmit} />\n        <br></br>\n        <div className='container mt-3'>\n          <Tabs defaultActiveKey='1' style={{ lineHeight: '1' }}>\n            <TabPane size='small' tab='QBUS Details' key='1'>\n              <QBusDetails key='1' />\n            </TabPane>\n            <TabPane size='small' tab='Customer' key='2'>\n              <CustomerDetails key='2' form={formQBUS} />\n            </TabPane>\n          </Tabs>\n        </div>\n      </Form>\n    </>\n  );\n};\nQBusMain.prototype = {\n  addLoading: PropTypes.object.isRequired,\n  addRepeater: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  addLoading: state.repeater.loading,\n});\n\nexport default connect(mapStateToProps, { addRepeater })(QBusMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\PRBX\\PrbxMain.js",["1888"],"import React from 'react';\nimport { Tabs, Form } from 'antd';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport Header from '../RepeaterComponents/Header';\nimport PrbxDetails from './PrbxDetails';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addRepeater } from '../redux/actions/repeaterAction';\n\nconst { TabPane } = Tabs;\n\nconst PrbxMain = (props) => {\n  const { addRepeater, addLoading } = props;\n\n  let history = useHistory();\n  const [formPRBX] = Form.useForm();\n\n  const onSubmit = () => {\n    formPRBX.validateFields().then((values) => {\n      const {\n        noOfExtensions,\n        brand,\n        typeOfRequirement,\n        quotationRequirement,\n        noOfRecipients_Operators,\n        noOfTrunks_Outline,\n        telephoneCabling,\n        remarkPrbx,\n        uuid,\n        customer,\n        bpr,\n        contactName,\n        email,\n        designation,\n        mobileNumber,\n        remark,\n          dragger\n      } = values;\n      const requestDetails = {\n        \"No Of Extensions\":noOfExtensions,\n        \"Brand\":brand,\n        \"Type Of Requirement\":typeOfRequirement,\n        \"Quotation Requirement\":quotationRequirement,\n        \"No Of Recipients Operators\":noOfRecipients_Operators,\n        \"No Of Trunks Outline\":noOfTrunks_Outline,\n        \"Telephone Cabling\":telephoneCabling,\n        \"Remark\":remarkPrbx,\n      };\n      const prbx = {\n        customer_id: uuid,\n        customer_name: customer,\n        customer_bpr: bpr,\n        created_by: '1',\n        repeater_category_id: '2',\n        request_contact_name: contactName,\n        email: email,\n        designation: designation,\n        mobile_no: mobileNumber,\n        remark: remark,\n        repeater_details: JSON.stringify(requestDetails),\n      };\n      const repeaterNW = new FormData();\n      repeaterNW.append('jsonData', JSON.stringify(prbx));\n      repeaterNW.append('file', dragger[0].originFileObj);\n      addRepeater(repeaterNW);\n      history.push('/app/repeater/list')\n    });\n  };\n  return (\n    <>\n      <Form form={formPRBX} className='justify-space-between' labelAlign='left'>\n        <Header onAdd={onSubmit} />\n        <br></br>\n        <div className='container mt-3'>\n          <Tabs defaultActiveKey='1' style={{ lineHeight: '1' }}>\n            <TabPane size='small' tab='PRBX' key='1'>\n              <PrbxDetails key='1' />\n            </TabPane>\n            <TabPane size='small' tab='Customer' key='2'>\n              <CustomerDetails key='2' form={formPRBX} />\n            </TabPane>\n          </Tabs>\n        </div>\n      </Form>\n    </>\n  );\n};\nPrbxMain.prototype = {\n  addLoading: PropTypes.object.isRequired,\n  addRepeater: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  addLoading: state.repeater.loading,\n});\nexport default connect(mapStateToProps, { addRepeater })(PrbxMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\BedheadPanel\\BedheadPanelMain.js",["1889"],"import React from 'react';\nimport { Tabs, Form } from 'antd';\nimport BedheadPanelDetails from './BedheadPanelDetais';\nimport Header from '../RepeaterComponents/Header';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addRepeater } from '../redux/actions/repeaterAction';\n\nconst { TabPane } = Tabs;\n\nconst Content = ({ children, extra }) => (\n  <div className='content'>\n    <div className='main'>{children}</div>\n    <div className='extra'>{extra}</div>\n  </div>\n);\n\nconst BedheadPanelMain = (props) => {\n  const { addRepeater, addLoading } = props;\n  let history = useHistory();\n  const [formBHP] = Form.useForm();\n\n  const onSubmit = () => {\n    formBHP.validateFields().then((values) => {\n      const {\n        panelColour,\n        panelFrameColour,\n        otherPanelColor,\n        otherPanelFrameColor,\n        frameDimensionInmm,\n        twoWayMiniSwitchQTY,\n        fiveStepFanControllerQTY,\n        oneGangUSBFrontPlateQTY,\n        lightDimmerQTY,\n        usb1ASocketQTY,\n        eightWire8ContactQTY,\n        twentyADoublePoleSwitchQTY,\n        oneWayMiniSwitchQTY,\n        multiSocketQTY,\n        twoGangUSBFrontPlateQTY,\n        bellPressMiniQTY,\n        tvQTY,\n        fourWireQTY,\n        masterSwitchQTY,\n        remarkBHP,\n        uuid,\n        customer,\n        bpr,\n        contactName,\n        email,\n        designation,\n        mobileNumber,\n        remark,\n        dragger\n      } = values;\n\n      let panleColorValue\n      let panleFrameColorValue\n      if (panelColour === \"Other\") {\n        panleColorValue = otherPanelColor\n      } else {\n        panleColorValue = panelColour\n      }\n      if (panelFrameColour === \"Other\") {\n        panleFrameColorValue = otherPanelFrameColor\n      } else {\n        panleFrameColorValue = panelFrameColour\n      }\n      const requestDetails = {\n        \"Panel Colour\": panleColorValue,\n        \"Panel Frame Colour\": panleFrameColorValue,\n        \"Frame Dimension In mm\": frameDimensionInmm,\n        \"Two Way Mini Switch QTY\": twoWayMiniSwitchQTY,\n        \"Five Step Fan Controller QTY\": fiveStepFanControllerQTY,\n        \"One Gang USB Front Plate QTY\": oneGangUSBFrontPlateQTY,\n        \"Light Dimmer QTY\": lightDimmerQTY,\n        \"USB 1A Socket QTY\": usb1ASocketQTY,\n        \"Eight Wire Contact QTY\": eightWire8ContactQTY,\n        \"Twenty Double Pole Switch QTY\": twentyADoublePoleSwitchQTY,\n        \"One Way Mini Switch QTY\": oneWayMiniSwitchQTY,\n        \"Multi Socket QTY\": multiSocketQTY,\n        \"Two Gang USB Front Plate QTY\": twoGangUSBFrontPlateQTY,\n        \"Bell Press Mini QTY\": bellPressMiniQTY,\n        \"TV QTY\": tvQTY,\n        \"Four Wire QTY\": fourWireQTY,\n        \"Master Switch QTY\": masterSwitchQTY,\n        \"Remark\": remarkBHP,\n      };\n      const bhp = {\n        customer_id: uuid,\n        customer_name: customer,\n        customer_bpr: bpr,\n        created_by: '1',\n        repeater_category_id: '3',\n        request_contact_name: contactName,\n        email: email,\n        designation: designation,\n        mobile_no: mobileNumber,\n        remark: remark,\n        repeater_details: JSON.stringify(requestDetails),\n      };\n      const repeaterNW = new FormData();\n      repeaterNW.append('jsonData', JSON.stringify(bhp));\n      repeaterNW.append('file', dragger[0].originFileObj);\n      addRepeater(repeaterNW);\n      console.log(...repeaterNW)\n      history.push('/app/repeater/list')\n    });\n  };\n\n  return (\n    <>\n      <Form form={formBHP} className='justify-space-between' labelAlign='left'>\n        <Header onAdd={onSubmit} />\n        <br></br>\n        <div className='container mt-3'>\n          <Tabs defaultActiveKey='1' style={{ lineHeight: '1' }}>\n            <TabPane size='small' tab=' Bedhead Panel' key='1'>\n              <BedheadPanelDetails />\n            </TabPane>\n            <TabPane size='small' tab='Customer' key='2'>\n              <CustomerDetails form={formBHP} addLoading={addLoading} />\n            </TabPane>\n          </Tabs>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nBedheadPanelMain.prototype = {\n  addLoading: PropTypes.object.isRequired,\n  addRepeater: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  addLoading: state.repeater.loading,\n});\n\nexport default connect(mapStateToProps, { addRepeater })(BedheadPanelMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\UPS\\UpsMain.js",["1890","1891","1892","1893","1894"],"import React from 'react';\nimport { Tabs, Form, Alert } from 'antd';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport Header from '../RepeaterComponents/Header';\nimport UpsDetails from './UpsDetails';\nimport { useHistory } from 'react-router-dom';\nimport { transformInToFormObject } from '../utill';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addRepeater } from '../redux/actions/repeaterAction';\nimport { motion } from 'framer-motion';\n\nconst { TabPane } = Tabs;\n\nconst UpsMain = (props) => {\n  const { addRepeater, addLoading, showMessage, message } = props;\n\n  let history = useHistory();\n  const [formUps] = Form.useForm();\n\n  const onSubmit = () => {\n    formUps.validateFields().then((values) => {\n      const {\n        typeOfUPS,\n        typeOfUse,\n        capacity,\n        inputPower,\n        backupTime,\n        other1,\n        other2,\n        outputPower,\n        customer,\n        contactName,\n        email,\n        bpr,\n        designation,\n        mobileNumber,\n        remark,\n        remarkUps,\n        uuid,\n          dragger\n      } = values;\n      const requestDetails = {\n        \"Type Of UPS\": typeOfUPS,\n        \"Type Of Use\": typeOfUse,\n        \"Capacity\": capacity,\n        \"Input Power\": inputPower,\n        \"Backup Time\": backupTime,\n        \"Other 1\": other1,\n        \"Other 2\": other2,\n        \"Output Power\": outputPower,\n        \"Remark\": remarkUps,\n      };\n      const ups = {\n        customer_id: uuid,\n        customer_name: customer,\n        customer_bpr: bpr,\n        created_by: '1',\n        repeater_category_id: '1',\n        request_contact_name: contactName,\n        email: email,\n        designation: designation,\n        mobile_no: mobileNumber,\n        remark: remark,\n        repeater_details: JSON.stringify(requestDetails),\n      };\n      const repeaterNW = new FormData();\n      repeaterNW.append('jsonData', JSON.stringify(ups));\n      repeaterNW.append('file', dragger[0].originFileObj);\n      addRepeater(repeaterNW);\n      history.push('/app/repeater/list')\n    });\n  };\n  return (\n    <>\n      <Form\n        className='justify-space-between'\n        form={formUps}\n        labelAlign='left'\n        name='ups'\n        id='upsD'\n      >\n        <Header onAdd={onSubmit} addLoading={addLoading} />\n        <br></br>\n        <div className='container mt-3'>\n          <Tabs defaultActiveKey='1' style={{ lineHeight: '1' }}>\n            <TabPane size='small' tab='UPS' key='1'>\n              <UpsDetails key='1' />\n            </TabPane>\n            <TabPane size='small' tab='Customer' key='2'>\n              <CustomerDetails key='2' form={formUps} />\n            </TabPane>\n          </Tabs>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nUpsMain.prototype = {\n  addLoading: PropTypes.object.isRequired,\n  showMessage: PropTypes.object.isRequired,\n  message: PropTypes.object.isRequired,\n  addRepeater: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  addLoading: state.repeater.loading,\n  showMessage: state.repeater.showMessage,\n  message: state.repeater.message,\n});\n\nexport default connect(mapStateToProps, { addRepeater })(UpsMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeaterDetails\\RepeterDetails.js",["1895","1896","1897","1898","1899","1900"],"import { Col, Row, PageHeader, Card, Avatar, Table, Tag, Space } from 'antd';\n\nimport React, {useEffect, useState} from 'react';\nimport NavBar from './RepeterDetailsComponents/NavBar';\nimport SideCards from './RepeterDetailsComponents/SideCards';\nimport { useHistory, useParams } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {repeaterListLoadDataByOne} from \"../redux/actions/repeaterAction\";\nimport DataTable from \"./RepeterDetailsComponents/Table\";\n\nconst RepeaterView = (props) => {\n  const { repeaterCurrentData, repeaterListLoadDataByOne } = props;\n  let history = useHistory();\n  let { id } = useParams();\n  const [title,setTitle] = useState(\"\");\n  useEffect(() => {\n    repeaterListLoadDataByOne(id);\n    switch (repeaterCurrentData?.repeater_category_id) {\n      case \"1\":\n        setTitle(\"UPS\")\n        break;\n      case \"2\":\n        setTitle(\"PABX\")\n        break;\n      case \"3\":\n        setTitle(\"Bedhead Panel\")\n        break;\n      case \"4\":\n        setTitle(\"Q-BUS\")\n        break;\n      case \"5\":\n        setTitle(\"Power DB\")\n        break;\n      case \"6\":\n        setTitle(\"Lighting\")\n        break;\n      case \"7\":\n        setTitle(\"Wired Panel\")\n        break;\n      case \"8\":\n        setTitle(\"Cable Management\")\n        break;\n      case \"9\":\n        setTitle(\"Genarators\")\n        break;\n      case \"10\":\n        setTitle(\"CCTV\")\n        break;\n      case \"11\":\n        setTitle(\"Solar\")\n        break;\n      default:\n        setTitle(\"Non Wired Panel\")\n        break;\n    }\n  }, []);\n\n  // useEffect(()=>{\n  //   if(typeof repeaterCurrentData !== \"undefined\"){\n  //     console.log()\n  //     setObj(JSON.parse(repeaterCurrentData?.repeater_details));\n  //     makeData(jsonObj);\n  //   }\n  // },[repeaterCurrentData])\n  // const makeData=()=>{\n  //\n  // }\n  return (\n    <>\n      <NavBar data={repeaterCurrentData}/>\n      <Row gutter={16} className='mt-3'>\n        <Col xs={24} sm={8} md={8}>\n          <SideCards data={repeaterCurrentData}/>\n        </Col>\n        <Col xs={24} sm={24} md={16}>\n          <div>\n            <PageHeader title={title+' Repeater Request Details'}></PageHeader>\n          </div>\n          <Card>\n            <DataTable data={repeaterCurrentData?.repeater_details}/>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nRepeaterView.prototype = {\n  repeaterCurrentData: PropTypes.object.isRequired,\n  repeaterListLoadDataByOne: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => {\n  return{repeaterCurrentData: state.repeater.current};\n}\n\nexport default connect(mapStateToProps, { repeaterListLoadDataByOne })(\n    RepeaterView\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeterList\\MenuItem.js",["1901","1902","1903"],"import { Card, Col, Row, Image, PageHeader, Tooltip } from \"antd\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport IconUPS from \"../../../../assets/images/repeaterIcons/UPS.png\";\nimport IconPABX from \"../../../../assets/images/repeaterIcons/PABX.png\";\nimport IconBHP from \"../../../../assets/images/repeaterIcons/Bed Head Panel.png\";\nimport IconQBUS from \"../../../../assets/images/repeaterIcons/QBUS.png\";\nimport IconPDB from \"../../../../assets/images/repeaterIcons/Power DB.png\";\nimport IconLighting from \"../../../../assets/images/repeaterIcons/Lighting.png\";\nimport IconWP from \"../../../../assets/images/repeaterIcons/Wired panel.png\";\nimport IconCM from \"../../../../assets/images/repeaterIcons/cable management.png\";\nimport IconGeneratrs from \"../../../../assets/images/repeaterIcons/Generators.png\";\nimport IconCCTV from \"../../../../assets/images/repeaterIcons/CCTV.png\";\nimport IconSolar from \"../../../../assets/images/repeaterIcons/Solar.png\";\nimport IconNWP from \"../../../../assets/images/repeaterIcons/Non-Wired panel.png\";\nimport Flex from \"components/shared-components/Flex\";\n\nconst MenuItemComp = ({ imgUrl, menuName, goto, offset }) => {\n  return (\n    <Col xs={{ offset: 0, span: 8 }} lg={{ offset: offset, span: 4 }}>\n      <Tooltip trigger=\"hover\" title={`Create ${menuName} Repeater Request`}>\n        <img\n          onClick={goto}\n          src={imgUrl}\n          style={{\n            display: \"block\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            width: \"50%\",\n            cursor: \"pointer\",\n          }}\n        />\n        <h5 className=\"mt-2\" style={{ textAlign: \"center\" }}>\n          {menuName}\n        </h5>\n      </Tooltip>\n    </Col>\n  );\n};\n\nconst MenuItem = () => {\n  let history = useHistory();\n  return (\n    <>\n      <PageHeader title=\"Repeater Request\" />\n\n      <div>\n        <Card>\n          <Row align=\"middle\" gutter={[16, 32]}>\n            <MenuItemComp\n              offset={2}\n              imgUrl={IconUPS}\n              menuName={\"UPS\"}\n              goto={() => history.push(`/app/repeater/list/upsmain`)}\n            />\n            <MenuItemComp\n              imgUrl={IconPABX}\n              menuName={\"PABX\"}\n              goto={() => history.push(`/app/repeater/list/prbxmain`)}\n            />\n            <MenuItemComp\n              imgUrl={IconBHP}\n              menuName={\"Bed Head Panel\"}\n              goto={() => history.push(`/app/repeater/list/bedheadpanelmain`)}\n            />\n            <MenuItemComp\n              imgUrl={IconQBUS}\n              menuName={\"Q-BUS\"}\n              goto={() => history.push(`/app/repeater/list/qbusmain`)}\n            />\n            <MenuItemComp\n              imgUrl={IconPDB}\n              menuName={\"Power DB\"}\n              goto={() => history.push(`/app/repeater/list/powerdbmain`)}\n            />\n\n            {/* </Row> */}\n            {/* <Row  align='middle' gutter={[16, 32]}> */}\n            <MenuItemComp\n              offset={2}\n              imgUrl={IconLighting}\n              menuName={\"Lighting\"}\n              goto={() => history.push(`/app/repeater/list/lightningmain`)}\n            />\n            <MenuItemComp\n              imgUrl={IconWP}\n              menuName={\"Wired Panel\"}\n              goto={() => history.push(`/app/repeater/list/wiredpanelmain`)}\n            />\n            <MenuItemComp\n              imgUrl={IconCM}\n              menuName={\"Cable Management\"}\n              goto={() =>\n                history.push(`/app/repeater/list/cablemanagementmain`)\n              }\n            />\n            <MenuItemComp\n              imgUrl={IconGeneratrs}\n              menuName={\"Generators\"}\n              goto={() => history.push(`/app/repeater/list/genaratormain`)}\n            />\n            <MenuItemComp\n              imgUrl={IconCCTV}\n              menuName={\"CCTV\"}\n              goto={() => history.push(`/app/repeater/list/cctvmain`)}\n            />\n\n            {/* </Row> */}\n            {/* <Row  align='middle' gutter={[16, 32]}> */}\n            <MenuItemComp\n              offset={2}\n              imgUrl={IconSolar}\n              menuName={\"Solar\"}\n              goto={() => history.push(`/app/repeater/list/solarmain`)}\n            />\n            <MenuItemComp\n              imgUrl={IconNWP}\n              menuName={\"Non Wired Panel\"}\n              goto={() => history.push(`/app/repeater/list/nonwiredpanelmain`)}\n            />\n          </Row>\n        </Card>\n      </div>\n    </>\n  );\n};\n\nexport default MenuItem;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeterList\\RepeterListMain.js",["1904","1905","1906","1907"],"import {\n  PageHeader,\n  Button,\n  Form,\n  Row,\n  Col,\n  Input,\n  Select,\n  Drawer,\n  Switch,\n  DatePicker,\n  Dropdown,\n  Menu,\n} from 'antd';\nimport React, { Fragment, useState } from 'react';\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\nimport { PlusOutlined, SearchOutlined, UserOutlined } from '@ant-design/icons';\nimport RepeterList from './RepeterList';\nimport { useHistory } from 'react-router-dom';\nimport MenuItem from './MenuItem';\n\nconst RepeterListFilter = () => {\n  const [form1] = Form.useForm();\n  const [form2] = Form.useForm();\n\n  const { RangePicker } = DatePicker;\n\n  const [visiable, setVisiable] = useState(false);\n\n  const onChange = (date, dateString) => {\n    console.log(date, dateString);\n  };\n  const onClose = () => {\n    setVisiable(false);\n  };\n\n  return (\n    <Fragment>\n      <div className='container'>\n        <Form form={form1}>\n          <Row gutter={10}>\n            <Col xs={24} sm={24} md={12} lg={6}>\n              <Form.Item>\n                <Input.Search placeholder='Search' />\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={6}>\n              <Form.Item>\n                <Input.Search placeholder='Search Customer' />\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={6}>\n              <Form.Item>\n                <Select placeholder='Action By'>\n                  <Select.Option value='Pubudu'>Pubudu</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col xs={12} sm={12} lg={{ span: 3 }}>\n              <Button\n                style={{ width: '100%' }}\n                onClick={() => setVisiable(!visiable)}\n              >\n                More filter\n              </Button>\n            </Col>\n            <Col xs={12} sm={12} lg={{ span: 3 }}>\n              <Button style={{ width: '100%' }} icon={<SearchOutlined />}>\n                Search\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n\n      <Drawer\n        visible={visiable}\n        onClose={onClose}\n        placement='right'\n        closable={false}\n        title='Filter'\n        drawerStyle={{ backgroundColor: '#FAFAFB' }}\n        footer={\n          <Row justify='space-between'>\n            <Col lg={12}>\n              <Button onClick={onClose}>Cancle</Button>\n            </Col>\n            <Col lg={12}>\n              <Button type='primary' icon={<SearchOutlined />}>\n                Search\n              </Button>\n            </Col>\n          </Row>\n        }\n      >\n        <Form form={form2} name={'filter-lead'}>\n          <Row>\n            <Col lg={24}>\n              <Form.Item>\n                <Select placeholder='Status'>\n                  <Select.Option value='kasun'>--Kasun--</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={24}>\n              <Form.Item>\n                <RangePicker />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={10} justify='space-between' align='middle'>\n            <Col>\n              <span className='mr-3'>\n                <UserOutlined />\n              </span>\n              <label htmlFor='assignToMe'>Archive</label>\n            </Col>\n            <Col offset={3}>\n              <Form.Item style={{ marginBottom: 0 }}>\n                <Switch size='small' />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Drawer>\n    </Fragment>\n  );\n};\n\nconst RepeterListMain = () => {\n  let history = useHistory();\n  const onToMenu = () => {\n    history.push(`/app/repeater/list/menu`);\n  };\n  return (\n    <Fragment>\n      <PageHeader\n        title='Repeater List'\n        subTitle={<AppBreadcrumb />}\n        extra={[\n          <Button\n            onClick={onToMenu}\n            type='primary'\n            className='ml-2'\n            shape='round'\n            style={{ width: '41px', padding: '0' }}\n          >\n            <PlusOutlined />\n          </Button>,\n        ]}\n      />\n      <div className='container'>\n        <Row className='mb-3'>\n          <RepeterListFilter />\n        </Row>\n\n        <RepeterList />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default RepeterListMain;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationCreate\\QuotationCreate.js",["1908","1909","1910"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  Col,\n  Image,\n  PageHeader,\n  Row,\n  Tabs,\n  Form,\n  DatePicker,\n  Select,\n  Radio,\n  message,\n} from \"antd\";\nimport AppBreadcrumb from \"../../../../../components/layout-components/AppBreadcrumb\";\nimport OrelLogo from \"../../../../../assets/images/Orel Logo.png\";\nimport { MailOutlined, PhoneOutlined } from \"@ant-design/icons\";\nimport ItemTable from \"./ItemTable\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  loadCustomerList,\n  addQuotation,\n} from \"../redux/actions/quotationCreateAction\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\n\nconst QuotationCreate = (props) => {\n  const { TabPane } = Tabs;\n  const {\n    customerList,\n    customerListLoading,\n    loadCustomerList,\n    addQuotation,\n    addQuotationLoading,\n  } = props;\n  const [type, setType] = useState(\"1\");\n  const [data, setData] = useState({});\n  let history = useHistory();\n\n  useEffect(() => {\n    loadCustomerList();\n  }, []);\n\n  const handleCallback = (\n    childData,\n    vatType,\n    selectedCustomer,\n    selectedDate,\n    selectedTerm\n  ) => {\n    let rowData = [];\n    // console.log(childData);\n    for (var i = 0; i < childData?.rows?.length; i++) {\n      let data = {\n        productNo: childData?.rows[i]?.product,\n        price:\n          vatType === \"VAT\" || vatType === \"S-VAT\"\n            ? Number(childData?.rows[i]?.price)\n            : Number(childData?.rows[i]?.noTaxPrice),\n        quantity: Number(childData?.rows[i]?.quantity),\n        udp: Number(childData?.rows[i]?.udp),\n        max: 43,\n        additional: Number(childData?.rows[i]?.additional),\n        total:\n          vatType === \"VAT\" || vatType === \"S-VAT\"\n            ? Number(childData?.rows[i]?.total)\n            : Number(childData?.rows[i]?.noTaxTotal),\n      };\n      rowData.push(data);\n    }\n    let customerDetails = {\n      customerName: selectedCustomer?.company?.name,\n      address: selectedCustomer?.company?.address,\n      contact: selectedCustomer?.company?.contact_no,\n      email: selectedCustomer?.company?.email,\n      code: selectedCustomer?.company?.code,\n    };\n    let finalData = {\n      qutationDetailList: rowData,\n      totalAmount: Number(childData?.subTotal),\n      amount: Number(childData?.subTotal),\n      vat: Number(childData?.vatAmount),\n      discount: Number(childData?.netDiscount),\n      taxType: vatType,\n      customerDetail: customerDetails,\n      invoiceDate: selectedDate,\n      quotationType: type,\n      deliveryTerm: selectedTerm,\n      nbt: 54.0,\n      projectName: \"Anna Constructions\",\n      note: \"Test server\",\n      actionBy: \"000000\",\n      salesOrderNo: \"3241\",\n      salesRepId: 3215,\n    };\n    // console.log(finalData);\n    setData(finalData);\n  };\n\n  const changeTab = (activeKey) => {\n    setType(activeKey);\n  };\n\n  const onSave = () => {\n    // console.log(data);\n    try {\n      addQuotation(data);\n      message.success(\"Data Added\");\n      history.push(\"/app/quotation/list\");\n    } catch (err) {\n      message.error(\"error\");\n    }\n  };\n\n  return (\n    <Fragment>\n      <PageHeader\n        title={\"Create New Quotation\"}\n        subTitle={<AppBreadcrumb />}\n        extra={[\n          <Button>Preview</Button>,\n          <Button onClick={onSave} type=\"primary\" loading={addQuotationLoading}>\n            Save\n          </Button>,\n        ]}\n      />\n      <Tabs defaultActiveKey=\"1\" onChange={changeTab}>\n        <TabPane tab=\"Cash\" key=\"1\">\n          <Cash\n            customerList={customerList}\n            type={type}\n            parentCallback={handleCallback}\n          />\n        </TabPane>\n        <TabPane tab=\"Credit\" key=\"2\">\n          <Cash\n            customerList={customerList}\n            type={type}\n            parentCallback={handleCallback}\n          />\n        </TabPane>\n      </Tabs>\n      {/* <Cash\n        customerList={customerList}\n        type={type}\n        parentCallback={handleCallback}\n      /> */}\n    </Fragment>\n  );\n};\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n    lg: { span: 7 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n    lg: { span: 17 },\n  },\n};\nconst config = {\n  rules: [{ type: \"object\", required: false, message: \"Please select time!\" }],\n};\nconst Cash = (props) => {\n  const { Option } = Select;\n  const [vatType, setVatType] = useState(\"VAT\");\n  const { customerList, type } = props;\n  const [selectedCustomer, setCustomer] = useState({});\n  const [childData, setChildData] = useState();\n  const [selectedTerm, setTerm] = useState(\"7 Days After Confirmation\");\n  const [selectedDate, setDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [columns, setColumns] = useState([\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n    },\n    {\n      title: \"Product\",\n      dataIndex: \"product\",\n      width: \"25%\",\n      editable: true,\n    },\n    {\n      title: \"Quantity\",\n      dataIndex: \"quantity\",\n      editable: true,\n    },\n    {\n      title: \"Additional\",\n      dataIndex: \"additional\",\n      editable: true,\n    },\n    {\n      title: \"Max/UDP\",\n      dataIndex: \"udp\",\n      editable: true,\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\",\n      editable: true,\n    },\n    {\n      title: \"Total\",\n      dataIndex: \"total\",\n      editable: true,\n    },\n  ]);\n\n  function onChange(value) {\n    // console.log(`selected ${value}`);\n    console.log(JSON.parse(value));\n    setCustomer(JSON.parse(value));\n  }\n\n  function onBlur() {\n    console.log(\"blur\");\n  }\n\n  function onFocus() {\n    console.log(\"focus\");\n    console.log(customerList?.length);\n    console.log(type);\n  }\n\n  useEffect(() => {\n    //eslint-disable-next-line\n    props.parentCallback(\n      childData,\n      vatType,\n      selectedCustomer,\n      selectedDate,\n      selectedTerm\n    );\n  }, [childData, selectedCustomer, selectedDate, vatType, selectedTerm]);\n\n  function onSearch(val) {\n    console.log(\"search:\", val);\n  }\n\n  const handleCallback = (childData) => {\n    setChildData(childData);\n  };\n\n  const onTermChange = (value) => {\n    setTerm(value);\n  };\n\n  const onVatChange = (value) => {\n    // console.log(value.target.value)\n    setVatType(value.target.value);\n    if (value.target.value === \"VAT\" || value.target.value === \"S-VAT\") {\n      setColumns([\n        {\n          title: \"No\",\n          dataIndex: \"no\",\n        },\n        {\n          title: \"Product\",\n          dataIndex: \"product\",\n          width: \"25%\",\n          editable: true,\n        },\n        {\n          title: \"Quantity\",\n          dataIndex: \"quantity\",\n          editable: true,\n        },\n        {\n          title: \"Additional\",\n          dataIndex: \"additional\",\n          editable: true,\n        },\n        {\n          title: \"Max/UDP\",\n          dataIndex: \"udp\",\n          editable: true,\n        },\n        {\n          title: \"Price\",\n          dataIndex: \"price\",\n          editable: true,\n        },\n        {\n          title: \"Total\",\n          dataIndex: \"total\",\n          editable: true,\n        },\n      ]);\n    } else if (value.target.value === \"NO-TAX\") {\n      setColumns([\n        {\n          title: \"No\",\n          dataIndex: \"no\",\n        },\n        {\n          title: \"Product\",\n          dataIndex: \"product\",\n          width: \"25%\",\n          editable: true,\n        },\n        {\n          title: \"Quantity\",\n          dataIndex: \"quantity\",\n          editable: true,\n        },\n        {\n          title: \"Additional\",\n          dataIndex: \"additional\",\n          editable: true,\n        },\n        {\n          title: \"Max/UDP\",\n          dataIndex: \"udp\",\n          editable: true,\n        },\n        {\n          title: \"Price\",\n          dataIndex: \"noTaxPrice\",\n          editable: true,\n        },\n        {\n          title: \"Total\",\n          dataIndex: \"noTaxTotal\",\n          editable: true,\n        },\n      ]);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Card>\n        <Row gutter={16}>\n          <Col span={6}>\n            <Row>\n              <Image src={OrelLogo} width=\"40%\" />\n            </Row>\n            <br></br>\n            <div>\n              <Select\n                showSearch\n                style={{ width: 250 }}\n                placeholder=\"\"\n                optionFilterProp=\"children\"\n                onChange={onChange}\n                onFocus={onFocus}\n                onBlur={onBlur}\n                onSearch={onSearch}\n                filterOption={(input, option) =>\n                  option.props.children\n                    .toLowerCase()\n                    .indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {customerList?.map((customer) => {\n                  return (\n                    <Option value={JSON.stringify(customer)}>\n                      {customer?.company.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n              <br />\n              <br />\n              <h5>Project spider man</h5>\n              <h6>\n                <Row>\n                  <Col span={2}>\n                    <MailOutlined style={{ color: \"blue\", fontSize: \"18px\" }} />\n                  </Col>\n                  <Col span={22}>\n                    <p>\n                      {selectedCustomer?.company?.address\n                        ? selectedCustomer?.company?.address\n                        : \"-\"}\n                    </p>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col span={2}>\n                    <PhoneOutlined\n                      style={{ color: \"blue\", fontSize: \"18px\" }}\n                    />\n                  </Col>\n                  <Col span={22}>\n                    <p>\n                      {selectedCustomer?.company?.contact_no\n                        ? selectedCustomer?.company?.contact_no\n                        : \"-\"}\n                    </p>\n                  </Col>\n                </Row>\n              </h6>\n            </div>\n          </Col>\n          <Col span={12} />\n\n          <Col span={6}>\n            <Form name=\"time_related_controls\" {...formItemLayout}>\n              <Form.Item\n                name=\"date-picker\"\n                label=\"Invoice Date\"\n                {...config}\n                labelAlign=\"left\"\n              >\n                <DatePicker\n                  style={{ width: \"100%\" }}\n                  defaultValue={moment()}\n                  value={selectedDate}\n                  format={\"YYYY-MM-DD\"}\n                  onChange={(date, dateString) => {\n                    setDate(dateString);\n                    setDate(dateString);\n                  }}\n                />\n              </Form.Item>\n              <Form.Item label=\"Delivery Term \" labelAlign=\"left\">\n                <Select\n                  onChange={onTermChange}\n                  defaultValue={\"7 Days After Confirmation\"}\n                >\n                  <Option value=\"7 Days After Confirmation\">\n                    7 Days After Confirmation\n                  </Option>\n                  <Option value=\"14 Days After Confirmation\">\n                    14 Days After Confirmation\n                  </Option>\n                  <Option value=\"21 Days After Confirmation\">\n                    21 Days After Confirmation\n                  </Option>\n                  <Option value=\"30 Days After Confirmation\">\n                    30 Days After Confirmation\n                  </Option>\n                  <Option value=\"4-6 Weeks After Confirmation\">\n                    4-6 Weeks After Confirmation\n                  </Option>\n                  <Option value=\"7-8 Weeks After Confirmation\">\n                    7-8 Weeks After Confirmation\n                  </Option>\n                </Select>\n              </Form.Item>\n              <Form.Item label=\"TAX Code\" labelAlign=\"left\">\n                <Radio.Group\n                  style={{ width: \"100%\" }}\n                  onChange={onVatChange}\n                  defaultValue={\"VAT\"}\n                >\n                  <Radio.Button value=\"VAT\">VAT</Radio.Button>\n                  <Radio.Button value=\"S-VAT\">S-VAT</Radio.Button>\n                  <Radio.Button value=\"NO-TAX\">NO-TAX</Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <ItemTable\n              vatType={vatType}\n              columns={columns}\n              parentCallback={handleCallback}\n            />\n          </Col>\n        </Row>\n      </Card>\n    </Fragment>\n  );\n};\n\nQuotationCreate.prototype = {\n  customerList: PropTypes.object.isRequired,\n  loadCustomerList: PropTypes.func.isRequired,\n  customerListLoading: PropTypes.object.isRequired,\n  addQuotation: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => {\n  return {\n    customerList: state.quotationCreate.customerList,\n    customerListLoading: state.quotationCreate.customerListLoading,\n    addQuotationLoading: state.quotationCreate.addQuotationLoading,\n  };\n};\n\nexport default connect(mapStateToProps, { loadCustomerList, addQuotation })(\n  QuotationCreate\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalDetails\\QuotationApprovalDetails.js",["1911","1912","1913","1914","1915","1916","1917"],"import {\n  PageHeader,\n  Col,\n  Card,\n  Row,\n  Form,\n  Table,\n  Button,\n  Input,\n  message,\n} from \"antd\";\nimport React, { useState } from \"react\";\nimport { Fragment } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ApprovalSideCards from \"./ApprovalSideCards\";\nimport ApprovalNavBar from \"./ApprovalNavBar\";\nimport QApprovalModal from \"./QApprovalModal\";\nimport QRejectModal from \"./QRejectModal\";\nimport numeral from \"numeral\";\nimport {\n  quotationApprovalListLoadDataByOne,\n  calculateDisc,\n  updateQuotaionApproval,\n} from \"../../QuotationList/redux/actions/quotationApprovalListAction\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\n\nconst TotalAmountComp = ({ quotationApprovalCurrentData }) => {\n  const arr = [];\n  const dis = [];\n  {\n    quotationApprovalCurrentData.qutationDetailList &&\n      quotationApprovalCurrentData.qutationDetailList.map((amount) => {\n        arr.push(amount.total);\n        dis.push(amount.discount);\n      });\n  }\n  const amount = arr.reduce(function (acc, val) {\n    return acc + val;\n  }, 0);\n  const discount = dis.reduce(function (acc, val) {\n    return acc + val;\n  }, 0);\n  const vat = ((amount - discount) * 8) / 100;\n  const tAmount = amount - discount + vat;\n  quotationApprovalCurrentData.discount = discount;\n  quotationApprovalCurrentData.totalAmount = tAmount;\n  quotationApprovalCurrentData.vat = vat;\n  quotationApprovalCurrentData.amount = amount;\n  return (\n    <Row justify='end'>\n      <Col xs={24}>\n        <p style={{ textAlign: \"right\" }}>\n          Amount : {numeral(amount).format(\"0,00.00\")}\n        </p>\n      </Col>\n      <Col xs={24}>\n        <p style={{ textAlign: \"right\" }}>\n          Discount : {numeral(discount).format(\"0,00.00\")}\n        </p>\n      </Col>\n      <Col xs={24}>\n        <p style={{ textAlign: \"right\" }}>\n          Vat(8%) : {numeral(vat).format(\"0,00.00\")}\n        </p>\n      </Col>\n      <Col xs={24}>\n        <h3 style={{ textAlign: \"right\" }}>\n          Total Amount : {numeral(tAmount).format(\"0,00.00\")}\n        </h3>\n      </Col>\n    </Row>\n  );\n};\n\nconst QuotationApprovalDetails = (props) => {\n  let { id } = useParams();\n\n  const {\n    quotationApprovalListLoadDataByOne,\n    quotationApprovalCurrentData,\n    calculateDisc,\n    quotationApprovalLoading,\n    updateQuotaionApproval,\n  } = props;\n\n  const [form] = Form.useForm();\n  const [qreject, setqreject] = useState(false);\n  const [qapproval, setqapproval] = useState(false);\n\n  const [ifEdit, setIfEdit] = useState(false);\n\n  const getD = async (id) => {\n    await quotationApprovalListLoadDataByOne(id);\n  };\n\n  useEffect(() => {\n    getD(id);\n  }, []);\n\n  const [tabledata, setTableData] = useState([]);\n\n  const onInputChange = (key, index) => (e) => {\n    const newData = quotationApprovalCurrentData;\n    newData.qutationDetailList[index][key] = parseFloat(e.target.value);\n    calculateDisc(quotationApprovalCurrentData);\n    setIfEdit(true);\n    // setTableData(newData);\n  };\n  console.log(quotationApprovalCurrentData);\n\n  const onApproval = () => {\n    form.validateFields().then((values) => {\n      const { note } = values;\n\n      const approved = \"approve\";\n      const updatedAdditional = {\n        amount: quotationApprovalCurrentData.amount,\n        discount: quotationApprovalCurrentData.discount,\n        vat: quotationApprovalCurrentData.vat,\n        totalAmount: quotationApprovalCurrentData.totalAmount,\n        nbt: quotationApprovalCurrentData.nbt,\n        status: approved,\n        approvalDetailNote: note ? note : \"\",\n        qutationDetailList: quotationApprovalCurrentData.qutationDetailList,\n      };\n      try {\n        updateQuotaionApproval(\n          updatedAdditional,\n          quotationApprovalCurrentData.id\n        );\n        console.log(updatedAdditional);\n        message.success(\"Additional Discount Approval Approved\");\n      } catch (err) {}\n    });\n  };\n\n  const onReject = () => {\n    form.validateFields().then((values) => {\n      const { note } = values;\n\n      const rejected = \"reject\";\n      const updatedRejectAdditional = {\n        amount: quotationApprovalCurrentData.amount,\n        discount: quotationApprovalCurrentData.discount,\n        vat: quotationApprovalCurrentData.vat,\n        totalAmount: quotationApprovalCurrentData.totalAmount,\n        nbt: quotationApprovalCurrentData.nbt,\n        status: rejected,\n        approvalDetailNote: note ? note : \"\",\n        qutationDetailList: quotationApprovalCurrentData.qutationDetailList,\n      };\n      try {\n        updateQuotaionApproval(\n          updatedRejectAdditional,\n          quotationApprovalCurrentData.id\n        );\n        console.log(updatedRejectAdditional);\n        message.error(\"Additional Discount Approval Rejected\");\n      } catch (err) {}\n    });\n  };\n\n  const openqapproval = () => {\n    setqapproval(true);\n  };\n  const openqreject = () => {\n    setqreject(true);\n  };\n\n  const columns = [\n    {\n      title: \"#\",\n      dataIndex: \"no\",\n      render: (_, record, index) => <p className='mb-0'>{index + 1}</p>,\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"productNo\",\n      render: (_, record) => <p className='mb-0'>{record.productNo}</p>,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"price\",\n      render: (_, record) => <p className='mb-0'>{record.price}</p>,\n    },\n    {\n      title: \"Qty\",\n      dataIndex: \"quantity\",\n      render: (_, record) => <p className='mb-0'>{record.quantity}</p>,\n    },\n    {\n      title: \"Max\",\n      dataIndex: \"max\",\n      render: (_, record) => <p className='mb-0'>{record.max}</p>,\n    },\n    {\n      title: \"UDP\",\n      dataIndex: \"udp\",\n      render: (_, record) => <p className='mb-0'>{record.udp}</p>,\n    },\n    {\n      title: \"Add\",\n      dataIndex: \"additional\",\n      render: (_, record, index, text) => {\n        return (\n          <div>\n            <Input\n              className='p-2 text-center'\n              style={{ width: 60 }}\n              value={text}\n              defaultValue={record.additional}\n              onChange={onInputChange(\"additional\", index)}\n              type='number'\n              step='0.1'\n              max={100}\n            />\n          </div>\n        );\n      },\n    },\n    {\n      title: \"Discount\",\n      dataIndex: \"discount\",\n      render: (_, record) => (\n        <p className='mb-0'>{numeral(record.discount).format(\"0,00.00\")}</p>\n      ),\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"total\",\n      render: (_, record, index) => (\n        <p className='mb-0'>{numeral(record.total).format(\"0,00.00\")}</p>\n      ),\n    },\n  ];\n  return (\n    <div>\n      <ApprovalNavBar\n        onApproval={onApproval}\n        onReject={onReject}\n        quotationApprovalCurrentData={quotationApprovalCurrentData}\n      />\n      <br></br>\n      <div>\n        <Row gutter={16}>\n          <Col xs={24} sm={8} md={8}>\n            <ApprovalSideCards\n              quotationApprovalCurrentData={quotationApprovalCurrentData}\n            />\n          </Col>\n          <Col xs={24} sm={24} md={16}>\n            <div>\n              <PageHeader\n                className='pt-0'\n                ghost={true}\n                title='Quotation Details'\n              ></PageHeader>\n            </div>\n            <Card>\n              <Fragment>\n                <Card\n                  className='p-0'\n                  bordered={false}\n                  style={{ width: \"100%\" }}\n                  bodyStyle={{ padding: 10 }}\n                >\n                  <Form form={form} labelCol={{ lg: 24 }} labelAlign='left'>\n                    <Row gutter={16} className='p-0'>\n                      <Col xs={24} lg={24}>\n                        <Table\n                          className='p-0 m-0'\n                          loading={quotationApprovalLoading}\n                          columns={columns}\n                          dataSource={\n                            quotationApprovalCurrentData.qutationDetailList\n                          }\n                          pagination={false}\n                          // scroll={{ x: 900, y: 300 }}\n                        />\n                      </Col>\n                    </Row>\n                    <br></br>\n                    <Row justify='space-between'>\n                      <Col xs={24} sm={24} md={12} lg={12}>\n                        <Form.Item label='Note' name='note'>\n                          <Input.TextArea rows={4} size='small' />\n                        </Form.Item>\n                      </Col>\n\n                      <Col className=' pt-3' xs={24} sm={24} md={12} lg={12}>\n                        <TotalAmountComp\n                          quotationApprovalCurrentData={\n                            quotationApprovalCurrentData\n                          }\n                        />\n                      </Col>\n                    </Row>\n                    <Row className='mt-3' justify='end'>\n                      <Col>\n                        <Button\n                          size='small'\n                          onClick={openqapproval}\n                          className={\"approve-btn\"}\n                          style={{\n                            width: 100,\n                          }}\n                        >\n                          Approve\n                        </Button>\n\n                        <span className='mr-3'></span>\n                        <Button\n                          size='small'\n                          onClick={openqreject}\n                          className={\"reject-btn\"}\n                          style={{\n                            width: 100,\n                          }}\n                        >\n                          Reject\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Form>\n                  <QApprovalModal\n                    qapproval={qapproval}\n                    setqapproval={setqapproval}\n                    onApproval={onApproval}\n                  />\n                  <QRejectModal\n                    qreject={qreject}\n                    setqreject={setqreject}\n                    onReject={onReject}\n                  />\n                </Card>\n              </Fragment>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nQuotationApprovalDetails.prototype = {\n  quotationApprovalCurrentData: PropTypes.object.isRequired,\n  quotationApprovalListLoadDataByOne: PropTypes.func.isRequired,\n  calculateDisc: PropTypes.func.isRequired,\n  quotationApprovalLoading: PropTypes.object.isRequired,\n  updateQuotaionApproval: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  quotationApprovalCurrentData: state.quotationApprovalList.current,\n  quotationApprovalLoading: state.quotationApprovalList.loading,\n});\n\nexport default connect(mapStateToProps, {\n  quotationApprovalListLoadDataByOne,\n  calculateDisc,\n  updateQuotaionApproval,\n})(QuotationApprovalDetails);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\redux\\actions\\Theme.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\shared-components\\AvatarStatus\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\auth-views\\authentication\\login\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockDetails\\CustomerUnblockDetails.js",["1918","1919"],"import React, { Fragment } from \"react\";\nimport { Card, PageHeader, Row, Col, Avatar, Badge } from \"antd\";\nimport {\n  UserOutlined,\n  CalendarOutlined,\n  DollarOutlined,\n  StopOutlined,\n  CodeOutlined,\n  LineChartOutlined,\n} from \"@ant-design/icons\";\nimport numeral from \"numeral\";\nimport moment from \"moment\";\nrequire(\"moment-precise-range-plugin\");\n\nconst CustomDetailsComp = ({ lableIcon, lable, response }) => {\n  return (\n    <Col>\n      <span>\n        {lableIcon} {lable} : {response}\n      </span>\n    </Col>\n  );\n};\nconst CustomerAgingComp = ({ color, labelText, agingText }) => {\n  return (\n    <Row justify=\"space-between\" align=\"middle\">\n      <Col>\n        <Badge color={color} />\n        <span className=\"text-gray-light\">{labelText}</span>\n      </Col>\n      <span className=\"font-weight-bold text-dark\">\n        {numeral(agingText).format(\"0,00.00\")}\n      </span>\n    </Row>\n  );\n};\n\nconst CustomerUnblockDetails = ({\n  customerValidData,\n  customerValidLoading,\n}) => {\n  return (\n    <>\n      <PageHeader className=\"pt-0\" title=\"Customer Unblock Request Details\" />\n      <Card>\n        <Row align=\"middle\" gutter={10}>\n          <Col>\n            <Avatar\n              style={{ backgroundColor: \"#1890ff\", color: \"#FFFFFF\" }}\n              icon={<UserOutlined />}\n            />\n          </Col>\n          <Col>\n            <h4 className=\"mb-0\">Customer Details</h4>\n          </Col>\n        </Row>\n        <Row className=\"mt-3 ml-5 mr-3\">\n          <Col xs={24}>\n            <Card className=\"p-1\" loading={customerValidLoading}>\n              {customerValidData.basic &&\n                customerValidData.basic.map((data, index) => {\n                  return (\n                    <Row justify=\"space-between\" gutter={8} key={index}>\n                      <Col xs={12}>\n                        {data.Cus_Creation_Date && (\n                          <CustomDetailsComp\n                            lable=\"Registered Date\"\n                            lableIcon={\n                              <CalendarOutlined style={{ color: \"#4E89FF\" }} />\n                            }\n                            response={moment(data.Cus_Creation_Date).format(\n                              \"YYYY-MM-DD\"\n                            )}\n                          />\n                        )}\n                        {customerValidData.credit_limit && (\n                          <CustomDetailsComp\n                            lable=\"Credit Limit\"\n                            lableIcon={\n                              <DollarOutlined style={{ color: \"#4E89FF\" }} />\n                            }\n                            response={numeral(\n                              customerValidData.credit_limit\n                            ).format(\"0,00.00\")}\n                          />\n                        )}\n                        {data.last_Inv_Date && (\n                          <CustomDetailsComp\n                            lable=\"Last Invoice\"\n                            lableIcon={\n                              <CalendarOutlined style={{ color: \"#4E89FF\" }} />\n                            }\n                            response={moment(data.last_Inv_Date).format(\n                              \"YYYY-MM-DD\"\n                            )}\n                          />\n                        )}\n                        {data.SalesAmt_With_Tax && (\n                          <CustomDetailsComp\n                            lable=\"Sales Amount\"\n                            lableIcon={\n                              <DollarOutlined style={{ color: \"#4E89FF\" }} />\n                            }\n                            response={numeral(data.SalesAmt_With_Tax).format(\n                              \"0,00.00\"\n                            )}\n                          />\n                        )}\n\n                        {/*\n                          <CustomDetailsComp\n                           lable='Average sale'\n                           lableIcon={\n                             <LineChartOutlined style={{ color: '#4E89FF' }} />\n                           }\n                           response='--'\n                         />\n                         */}\n                      </Col>\n                      <Col xs={12}>\n                        <CustomDetailsComp\n                          lable=\"Years in business\"\n                          lableIcon={\n                            <CalendarOutlined style={{ color: \"#4E89FF\" }} />\n                          }\n                          response={moment.preciseDiff(\n                            moment(),\n                            data.Cus_Creation_Date\n                          )}\n                        />\n                        {data.First_Inv_date && (\n                          <CustomDetailsComp\n                            lable=\"First Invoice\"\n                            lableIcon={\n                              <CalendarOutlined style={{ color: \"#4E89FF\" }} />\n                            }\n                            response={moment(data.First_Inv_date).format(\n                              \"YYYY-MM-DD\"\n                            )}\n                          />\n                        )}\n                        {customerValidData.block_term && (\n                          <CustomDetailsComp\n                            lable=\"Block Term\"\n                            lableIcon={\n                              <StopOutlined style={{ color: \"#4E89FF\" }} />\n                            }\n                            response={customerValidData.block_term}\n                          />\n                        )}\n                        {/*\n                          <CustomDetailsComp\n                            lable='Return Cheques '\n                            lableIcon={\n                              <CodeOutlined style={{ color: '#4E89FF' }} />\n                            }\n                            response='no data'\n                          />\n                        */}\n                      </Col>\n                    </Row>\n                  );\n                })}\n            </Card>\n          </Col>\n        </Row>\n        <Row align=\"middle\" gutter={10}>\n          <Col>\n            <Avatar\n              style={{ backgroundColor: \"#fa8c16\", color: \"#FFFFFF\" }}\n              icon={<UserOutlined />}\n            />\n          </Col>\n          <Col>\n            <h4 className=\"mb-0\">Customer Aging</h4>\n          </Col>\n        </Row>\n        <Row className=\"mt-3 ml-5 mr-3\" justify=\"center\">\n          <Col xs={24}>\n            <Card className=\"p-1\" loading={customerValidLoading}>\n              {customerValidData.aging &&\n                customerValidData.aging.map((over, index) => {\n                  return (\n                    <Fragment key={index}>\n                      <CustomerAgingComp\n                        color=\"#FF0000\"\n                        labelText=\"Total Outstanding\"\n                        agingText={\n                          customerValidData\n                            ? customerValidData.total_outstanding\n                            : 0.0\n                        }\n                      />\n                      <CustomerAgingComp\n                        color=\"#00FF00\"\n                        labelText=\"Over 30\"\n                        agingText={over.Over30 ? over.Over30 : 0.0}\n                      />\n                      <CustomerAgingComp\n                        color=\"#55FF00\"\n                        labelText=\"Over 45\"\n                        agingText={over.Over45 ? over.Over45 : 0.0}\n                      />\n                      <CustomerAgingComp\n                        color=\"#AAFF00\"\n                        labelText=\"Over 60\"\n                        agingText={over.Over60 ? over.Over60 : 0.0}\n                      />\n                      <CustomerAgingComp\n                        color=\"#FFFF00 \"\n                        labelText=\"Over 70\"\n                        agingText={over.Over70 ? over.Over70 : 0.0}\n                      />\n                      <CustomerAgingComp\n                        color=\"#FF9900\"\n                        labelText=\"Over 75 \"\n                        agingText={over.Over75 ? over.Over75 : 0.0}\n                      />\n                      <CustomerAgingComp\n                        color=\"#FF4400\"\n                        labelText=\"Over 90\"\n                        agingText={over.Over90 ? over.Over90 : 0.0}\n                      />\n                      <CustomerAgingComp\n                        color=\"#FF4400\"\n                        labelText=\"Over 120\"\n                        agingText={over.Over120 ? over.Over120 : 0.0}\n                      />\n                    </Fragment>\n                  );\n                })}\n            </Card>\n          </Col>\n        </Row>\n      </Card>\n    </>\n  );\n};\n\nexport default CustomerUnblockDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockDetails\\SideCards.js",["1920","1921","1922","1923","1924","1925"],"import React from 'react';\nimport { Avatar, Card, Row, Col } from 'antd';\nimport utils from 'utils';\nimport { CalendarOutlined, FileTextOutlined } from '@ant-design/icons';\nimport numeral from 'numeral';\nimport moment from 'moment';\n\nconst SideCards = ({ currentUnblockData }) => {\n  return (\n    <div>\n      {/* \n    \n      <Card>\n        <Row>\n          <Col>\n            <h4>\n              <strong>Details</strong>\n            </h4>\n          </Col>\n        </Row>\n        <Row className='ml-3 mt-3'>\n          <Col xs={24}>\n            <span>\n              <CalendarOutlined\n                style={{ color: '#4E89FF', fontSize: '18px' }}\n                className='mr-2'\n              />{' '}\n              Registered Date :\n            </span>\n          </Col>\n          <Col xs={24} className='ml-5'>\n            <h5>{moment(currentUnblockData.createdAt).format('YYYY-MM-DD')}</h5>\n          </Col>\n        </Row>\n        <Row className='ml-3 mt-3'>\n          <Col xs={24}>\n            <span>\n              <FileTextOutlined\n                style={{ color: '#4E89FF', fontSize: '18px' }}\n                className='mr-2'\n              />{' '}\n              Quotation :\n            </span>\n          </Col>\n          <Col xs={24} className='ml-5'>\n            <h5>\n              {currentUnblockData.quotationDetails &&\n                currentUnblockData.quotationDetails.quotationNo}\n            </h5>\n          </Col>\n        </Row>\n        <Row className='mt-3 ml-3'>\n          <Col>\n            <Avatar className='ant-avatar-blue'>\n              <span className='font-weight-bold font-size-md'>\n                {utils.getNameInitial(\n                  currentUnblockData.requestedBy\n                    ? currentUnblockData.requestedBy\n                    : 'Dummy Dummy'\n                )}\n              </span>\n            </Avatar>\n          </Col>\n          <Col>\n            <div className='ml-3'>\n              <h5 className='mb-0'>\n                {currentUnblockData.requestedBy &&\n                  currentUnblockData.requestedBy}\n              </h5>\n              <h6>\n                <p className='mb-0'>\n                  LKR.\n                  {numeral(\n                    currentUnblockData.qtAmount && currentUnblockData.qtAmount\n                  ).format('0,00.00')}\n                </p>\n              </h6>\n            </div>\n          </Col>\n        </Row>\n      </Card>\n    */}\n      <Card>\n        <Row>\n          <Col>\n            <h4>\n              <strong>Note :</strong>\n            </h4>\n          </Col>\n        </Row>\n        <Row className='mt-1'>\n          <Col>\n            <p>{currentUnblockData.note && currentUnblockData.note}</p>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default SideCards;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockDetails\\Header.js",["1926"],"import React from \"react\";\nimport { PageHeader, Button, Tag, Row, Avatar, Col } from \"antd\";\nimport AppBreadcrumb from \"components/layout-components/AppBreadcrumb\";\nimport {\n  PhoneOutlined,\n  MoneyCollectOutlined,\n  CalendarOutlined,\n} from \"@ant-design/icons\";\nimport utils from \"utils\";\nimport numeral from \"numeral\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport moment from \"moment\";\nimport CustomerUnblockCreditLimitModal from \"./CustomerUnblockCreditLimitModal\";\nimport CustomerUnBlockCreditPeriodModal from \"./CustomerUnBlockCreditPeriodModal\";\n\nconst Header = (props) => {\n  const [unblockPeriod, setUnblockPeriod] = useState(false);\n  const [unblockLimit, setUnblockLimit] = useState(false);\n\n  const { currentUnblockData } = props;\n\n  const openUnblockLimit = () => {\n    setUnblockLimit(true);\n  };\n  const openUnblockPeriod = () => {\n    setUnblockPeriod(true);\n  };\n\n  const creditPButton = (\n    <Button\n      hidden={\n        currentUnblockData.isCreditPeriod === 0 ||\n        currentUnblockData.status === \"Rejected\"\n      }\n      type=\"primary\"\n      onClick={openUnblockPeriod}\n      disabled={\n        currentUnblockData.rejectedBy && currentUnblockData.rejectedBy === \"1\"\n          ? true\n          : false\n      }\n    >\n      Unblock Credit Period\n    </Button>\n  );\n\n  const creditLButtton = (\n    <Button\n      hidden={\n        currentUnblockData.isCreditLimit === 0 ||\n        currentUnblockData.status === \"Rejected\"\n      }\n      type=\"primary\"\n      onClick={openUnblockLimit}\n      disabled={\n        currentUnblockData.rejectedBy && currentUnblockData.rejectedBy === \"1\"\n          ? true\n          : false\n      }\n    >\n      Unblock Credit Limit\n    </Button>\n  );\n\n  return (\n    <>\n      <PageHeader\n        ghost={false}\n        subTitle={<AppBreadcrumb />}\n        onBack={() => window.history.back()}\n        extra={[creditPButton, creditLButtton]}\n      >\n        <CustomerUnblockCreditLimitModal\n          unblockLimit={unblockLimit}\n          setUnblockLimit={setUnblockLimit}\n          currentUnblockData={currentUnblockData}\n        />\n        <CustomerUnBlockCreditPeriodModal\n          unblockPeriod={unblockPeriod}\n          setUnblockPeriod={setUnblockPeriod}\n          currentUnblockData={currentUnblockData}\n        />\n        <Row>\n          <Col xs={24} sm={24} md={12} lg={12}>\n            <Row>\n              <Avatar shape=\"square\" size={65} className=\"ant-avatar-blue\">\n                <span className=\"font-weight-bold font-size-lg\">\n                  {utils.getNameInitial(\n                    currentUnblockData.companyName\n                      ? currentUnblockData.companyName\n                      : \"Dammy Dammy\"\n                  )}\n                </span>\n              </Avatar>\n\n              <Col>\n                <h4 className=\"ml-3\">\n                  {currentUnblockData && currentUnblockData.companyName}\n                </h4>\n                <p className=\"mb-4 ml-3\">\n                  {currentUnblockData && currentUnblockData.quotationNo}\n                </p>\n              </Col>\n              <Col className=\"ml-2\">\n                {currentUnblockData.isCreditLimit !== 0 && (\n                  <Tag color=\"red\">LIMIT EXCEED</Tag>\n                )}\n                {currentUnblockData.isCreditPeriod !== 0 && (\n                  <Tag color=\"gold\">PERIOD EXCEED</Tag>\n                )}\n              </Col>\n            </Row>\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={12}>\n            <Row>\n              {currentUnblockData.qtAmount && (\n                <Col lg={7}>\n                  <span>\n                    <MoneyCollectOutlined style={{ color: \"#4E89FF\" }} /> Value\n                    : {numeral(currentUnblockData.qtAmount).format(\"0.0 a\")}\n                  </span>\n                </Col>\n              )}\n              <Col lg={8}>\n                <span>\n                  <CalendarOutlined style={{ color: \"#4E89FF\" }} /> Date :{\" \"}\n                  {moment(\n                    currentUnblockData.referenceDetails &&\n                      currentUnblockData.referenceDetails.requestedDate\n                  ).format(\"YYYY-MM-DD\")}\n                </span>\n              </Col>\n              <Col lg={9}>\n                <span>\n                  <PhoneOutlined style={{ color: \"#4E89FF\" }} /> Phone :\n                  +940775123593\n                </span>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </PageHeader>\n    </>\n  );\n};\n\nexport default Header;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockList\\CustomerUnblockList.js",["1927"],"import React from \"react\";\nimport { Menu, Row, Table, Tag, Avatar, Col, Pagination } from \"antd\";\nimport utils from \"utils\";\nimport { EyeOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\nimport numeral from \"numeral\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport moment from \"moment\";\nimport { loadCustomerUnblockListData } from \"../redux/actions/customerunblockListActions\";\n\nconst getRequestTag = (status) => {\n  if (status === 1) {\n    return \"Credit Limit Exceed\";\n  }\n};\n\nconst getRequestTag1 = (status) => {\n  if (status === 1) {\n    return \"Credit Period Exceed\";\n  }\n};\n\nconst CustomerUnblockList = (props) => {\n  const {\n    customerUnblockList: { customerunblockListData, loading, page, total },\n    loadCustomerUnblockListData,\n  } = props;\n\n  let history = useHistory();\n\n  useEffect(() => {\n    loadCustomerUnblockListData(1);\n  }, []);\n\n  console.log(customerunblockListData);\n  const onChangePage = (page) => {\n    loadCustomerUnblockListData(page);\n  };\n\n  const tableDropdownMenu = (row) => {\n    const onView = () => {\n      history.push(`/app/customerUnblock/list/details/${row.id}`);\n    };\n    return (\n      <Menu>\n        <Menu.Item key=\"0\" onClick={onView}>\n          <EyeOutlined />\n          <span>View Details</span>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n  const columns = [\n    {\n      title: \"#\",\n      dataIndex: \"id\",\n      render: (_, record, index) => {\n        return <p className=\"mb-0\"> {index + 1} </p>;\n      },\n    },\n    {\n      title: \"Request By\",\n      dataIndex: \"img\",\n      render: (_, record, i) => (\n        <Avatar\n          size=\"default\"\n          className={`ml-1 cursor-pointer ant-avatar-blue`}\n          // src={record.img}\n        >\n          <span className=\"font-weight-semibold font-size-sm\">\n            {utils.getNameInitial(\n              record.requestedBy ? record.requestedBy : \"Dummy Dummy\"\n            )}\n          </span>\n          {/*\n            {record.img ? (\n              ''\n            ) : (\n              <span className='font-weight-semibold font-size-sm'>\n                {utils.getNameInitial(record.actionBy)}\n              </span>\n            )}\n          </Avatar>\n           */}\n        </Avatar>\n      ),\n    },\n    {\n      title: \"Reference No\",\n      dataIndex: \"referenceNo\",\n      render: (_, record) => {\n        return (\n          <div>\n            <p className=\"mb-0\">{record.requestId}</p>\n            <p className=\"mb-0\">\n              {moment(record.createdAt).format(\"YYYY-MM-DD\")}\n            </p>\n            {/* <p className='mb-0'>{record.requestId}</p>  */}\n          </div>\n        );\n      },\n    },\n\n    {\n      title: \"Credit Limit\",\n      dataIndex: \"request\",\n      render: (_, record) => {\n        return (\n          <Col lg={24}>\n            {record.isCreditLimit !== 0 && (\n              <Tag\n                className=\"mb-0\"\n                color={record.isCreditLimit === 1 ? \"red\" : \"\"}\n              >\n                {getRequestTag(record.isCreditLimit)}\n              </Tag>\n            )}\n          </Col>\n        );\n      },\n    },\n\n    {\n      title: \"Credit Period\",\n      dataIndex: \"request\",\n      render: (_, record) => {\n        return (\n          <Col lg={24}>\n            {record.isCreditPeriod !== 0 && (\n              <Tag\n                className=\"mb-0\"\n                color={record.isCreditPeriod === 1 ? \"gold\" : \"\"}\n              >\n                {getRequestTag1(record.isCreditPeriod)}\n              </Tag>\n            )}\n          </Col>\n        );\n      },\n    },\n\n    {\n      title: \"Customer\",\n      dataIndex: \"customerName\",\n      render: (_, record) => {\n        return (\n          <div>\n            <p className=\"mb-0\">{record.companyName}</p>\n            <p className=\"mb-0\">{record.companyCode}</p>\n          </div>\n        );\n      },\n    },\n    {\n      title: \"Quotation No\",\n      dataIndex: \"quotationNo\",\n      render: (_, record) => {\n        return (\n          <div>\n            <p className=\"mb-0\">{record.quotationNo}</p>\n            <p className=\"mb-0\">{numeral(record.qtAmount).format(\"0,00.00\")}</p>\n          </div>\n        );\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: (_, record) => {\n        return (\n          <div>\n            <p className=\"mb-0\">{record.status}</p>\n          </div>\n        );\n      },\n    },\n    {\n      title: \"\",\n      dataIndex: \"\",\n      render: (_, customerunblockListData) => (\n        <div className=\"text-right\">\n          <EllipsisDropdown menu={tableDropdownMenu(customerunblockListData)} />\n        </div>\n      ),\n    },\n  ];\n  return (\n    <>\n      <Table\n        rowKey=\"id\"\n        columns={columns}\n        dataSource={customerunblockListData && customerunblockListData}\n        pagination={false}\n        loading={loading}\n      />\n      <Row justify=\"end\" className=\"mt-2\">\n        <Pagination\n          pageSize={20}\n          onChange={onChangePage}\n          current={page}\n          total={total && total}\n        />\n      </Row>\n    </>\n  );\n};\n\nCustomerUnblockList.prototype = {\n  customerUnblockList: PropTypes.object.isRequired,\n  loadCustomerUnblockListData: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  customerUnblockList: state.customerUnblockList,\n});\nexport default connect(mapStateToProps, { loadCustomerUnblockListData })(\n  CustomerUnblockList\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Solar\\SolarDeatils.js",["1928","1929","1930"],"import React, {useState} from \"react\";\nimport { Form, Select, Radio, Row, Col, Input, Checkbox, Card } from \"antd\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 14 },\n};\n\nconst SolarDetails = () => {\n  const [checkRoof, setRadioRoof] = useState(false);\n\n  const onRadioChange = (e) => {\n    if(e.target.value===\"Other\"){\n      setRadioRoof(true);\n    }else{\n      setRadioRoof(false);\n    }\n\n  };\n  return (\n    <div>\n      <br></br>\n      <Card title=\"Solar Details\">\n        <Row>\n          <Col className=\"mr-5 mt-3\" xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name=\"electricityBillNumber\"\n              label=\"Customer Electricity Bill Number\n              \"\n              labelCol={{ md: 6, lg: 14 }}\n              hasFeedback\n              rules={[{ message: \"Customer Electricity Bill Number\" }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"typeOfMeterConnection\"\n              label=\"Type of Meter Connection\"\n              labelCol={{ md: 6, lg: 14 }}\n            >\n              <Radio.Group>\n                <Radio value=\"Single\">Single</Radio>\n                <Radio value=\"Three\">Three</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name=\"typeOfTariff\"\n              label=\"Type of Tariff\n              \"\n              labelCol={{ md: 6, lg: 14 }}\n              hasFeedback\n              rules={[{ message: \"Type of Tariff\" }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n\n          <Col className=\"mt-3\" xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name=\"typeOfRequirement\"\n              label=\"Type of Requirement \"\n              labelCol={{ md: 6, lg: 13 }}\n            >\n              <Radio.Group>\n                <Radio value=\"LECO\">LECO</Radio>\n                <Radio value=\"CEB\">CEB</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name=\"paymentType\"\n              label=\"Payment Type\"\n              labelCol={{ md: 6, lg: 13 }}\n            >\n              <Radio.Group>\n                <Radio value=\"Cash\">Cash</Radio>\n                <Radio value=\"Cheque\">Cheque</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name=\"averageMonthlyUnits\"\n              label=\"Average Monthly Units\n              \"\n              labelCol={{ md: 6, lg: 13 }}\n              hasFeedback\n              rules={[{ message: \"Average Monthly Units\" }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <Form.Item name=\"roofType\" label=\"Roof Type\" labelCol={{ md: 6, lg: 8 }}>\n              <Radio.Group checked={checkRoof} onChange={onRadioChange}>\n                <Radio className=\"mr-5\" value=\"Asbestos\">\n                  Asbestos\n                </Radio>\n                <Radio className=\"mr-5\" value=\"Amano\">\n                  Amano\n                </Radio>\n                <Radio className=\"mr-5\" value=\"Slab\">\n                  Slab\n                </Radio>\n                <Radio value=\"Other\">Other</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n          <Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Item\n                name=\"OtherRoof\"\n                label=\"Other\"\n                hidden={!checkRoof}\n                labelCol={{ md: 4, lg: 12 }}\n                hasFeedback\n                rules={[{ message: \"Other\" }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className=\"mr-5 mt-3\" xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name=\"electricityBillAmount\"\n              label=\"Electricity Bill Amount \n              \"\n              labelCol={{ md: 6, lg: 14 }}\n              hasFeedback\n              rules={[{ message: \"Electricity Bill Amount\" }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"extraSlabMountingStructure\"\n              label=\"Extra Slab Mounting Structure\n              \"\n              labelCol={{ md: 6, lg: 14 }}\n              hasFeedback\n              rules={[{ message: \"Extra Slab Mounting Structure\" }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n\n          <Col className=\"mt-3\" xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name=\"roofArea\"\n              label=\"Roof Area (Sq.ft)\n              \"\n              labelCol={{ md: 6, lg: 13 }}\n              hasFeedback\n              rules={[{ message: \"Roof Area (Sq.ft)\" }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"installationDate\"\n              label=\"Installation Date\n              \"\n              labelCol={{ md: 6, lg: 13 }}\n              hasFeedback\n              rules={[{ message: \"Installation Date\" }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={24} sm={24} md={24} lg={24}>\n            <Form.Item\n              className=\"mr-3\"\n              labelCol={{ md: 3, lg: 6 }}\n              name=\"remarkSolar\"\n              label=\"Remark\n              \"\n              hasFeedback\n              rules={[{ message: \"Remark\" }]}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default SolarDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\BedheadPanel\\BedheadPanelDetais.js",["1931"],"import React, { useState } from 'react';\nimport { Form, Select, Row, Col, Input, Card } from 'antd';\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 14 },\n};\n\nconst BedheadPanelDetails = () => {\n  const [showPanleColorOther, setShowPanleColorOther] = useState(false)\n  const [showPanleFrameColor, setShowPanleFrameColor] = useState(false)\n\n  const onPanleColorChange = (value) => {\n    if (value === \"Other\") {\n      setShowPanleColorOther(true)\n    } else {\n      setShowPanleColorOther(false)\n    }\n  }\n  const onPanleFrameColorChange = (value) => {\n    if (value === \"Other\") {\n      setShowPanleFrameColor(true)\n    } else {\n      setShowPanleFrameColor(false)\n    }\n  }\n  return (\n    <div>\n      <br></br>\n      <Card title='Bedhead Panel Details'>\n        <Row>\n          <Col className='mt-3' xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name='panelColour'\n              label='Panel Colour'\n              labelCol={{ md: 6, lg: 11 }}\n              hasFeedback\n              rules={[{ message: '-Select Color-' }]}\n            >\n              <Select placeholder='-Select Color-' onChange={onPanleColorChange}>\n                <Option value='White'>White</Option>\n                <Option value='Black'>Black</Option>\n                <Option value='Gray'>Gray</Option>\n                <Option value='Other'>Other</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              name='panelFrameColour'\n              label='Panel Frame Colour'\n              labelCol={{ md: 6, lg: 11 }}\n              hasFeedback\n              rules={[{ message: '-Select Color-' }]}\n            >\n              <Select placeholder='-Select Color-' onChange={onPanleFrameColorChange}>\n                <Option value='Black Mat'>Black Mat</Option>\n                <Option value='Black Gloss'>Black Gloss</Option>\n                <Option value='White Sand'>White Sand</Option>\n                <Option value='White Gloss'>White Gloss</Option>\n                <Option value='Other'>Other</Option>\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col className='mt-3' xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              className='ml-5'\n              name='otherPanelColor'\n              label='Other Panel Color\n              '\n              hidden={!showPanleColorOther}\n              labelCol={{ md: 6, lg: 10 }}\n              hasFeedback\n              rules={[{ message: 'Other1' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-5'\n              name='otherPanelFrameColor'\n              label='Other Panel Frame Color\n              '\n              hidden={!showPanleFrameColor}\n              labelCol={{ md: 6, lg: 10 }}\n              hasFeedback\n              rules={[{ message: 'Other2' }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className='mt-3' xs={24} sm={24} md={8} lg={8}>\n            <Form.Item\n              label='Frame Dimension in mm '\n              name='frameDimensionInmm'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Frame Dimension in mm' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label='2 Way Mini Switch QTY\n             '\n              name='twoWayMiniSwitchQTY'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: '2 Way Mini Switch QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label='5 Step Fan Controller QTY\n             '\n              name='fiveStepFanControllerQTY'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: '5 Step Fan Controller QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label='1 Gang USB Front Plate QTY'\n              name='oneGangUSBFrontPlateQTY'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: '1 Gang USB Front Plate QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label='Light Dimmer QTY'\n              name='lightDimmerQTY'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Light Dimmer QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col className='mt-3' xs={24} sm={24} md={8} lg={8}>\n            <Form.Item\n              className='ml-3'\n              name='usb1ASocketQTY'\n              label='USB 1A Socket QTY\n              '\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'USB 1A Socket QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              className='ml-3'\n              name='eightWire8ContactQTY'\n              label='8 Wire 8 Contact (Data) QTY\n              '\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: '8 Wire 8 Contact (Data) QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3'\n              name='twentyADoublePoleSwitchQTY'\n              label='20A Double Pole Switch QTY \n              '\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: '20A Double Pole Switch QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3'\n              name='oneWayMiniSwitchQTY'\n              label='1 Way Mini Switch QTY\n              '\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: '1 Way Mini Switch QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3'\n              name='multiSocketQTY'\n              label='Multi Socket QTY\n\n              '\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Multi Socket QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col className='mt-3' xs={24} sm={24} md={8} lg={8}>\n            <Form.Item\n              className='ml-3 '\n              name='twoGangUSBFrontPlateQTY'\n              label='2 Gang USB Front Plate QTY\n              '\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: '2 Gang USB Front Plate QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3 '\n              name='bellPressMiniQTY'\n              label='Bell Press Mini QTY\n\n              '\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Bell Press Mini QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3 '\n              name='tvQTY'\n              label='TV QTY\n\n              '\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'TV QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3 '\n              name='fourWireQTY'\n              label='4 Wire (T.P) QTY\n              '\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: '4 Wire (T.P) QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3 '\n              name='masterSwitchQTY'\n              label='Master Switch QTY\n\n              '\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Master Switch QTY' }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={24} sm={24} md={24} lg={24}>\n            <Form.Item\n              labelCol={{ md: 3, lg: 5 }}\n              name='remarkBHP'\n              label='Remark\n              '\n              hasFeedback\n              rules={[{ message: 'Remark' }]}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default BedheadPanelDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeterList\\RepeterList.js",["1932","1933","1934"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Menu, Pagination, Row, Table, Avatar, Alert } from \"antd\";\nimport utils from \"utils\";\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { EyeOutlined } from \"@ant-design/icons\";\nimport RepeterDummy from \"./repeterDummy\";\nimport { getStatus, getStatusName, getRepeterType } from \"./utilsRepeter\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { loadRepeaterData } from \"../redux/actions/repeaterAction\";\nimport { motion } from \"framer-motion\";\n\nconst RepeterList = (props) => {\n  const {\n    loadRepeaterData,\n    repeaterData,\n    showMessage,\n    message,\n    loading,\n    page,\n    total,\n  } = props;\n  const [data, setData] = useState(RepeterDummy);\n  let history = useHistory();\n\n  useEffect(() => {\n    loadRepeaterData(1);\n  }, []);\n  const onPageChange = (page) => {\n    loadRepeaterData(page);\n  };\n\n  const handleView = (row) => {\n    history.push(`/app/repeater/view/` + row.id);\n  };\n\n  const tableDropdownMenu = (row) => {\n    return (\n      <Menu>\n        <Menu.Item key=\"0\" onClick={() => handleView(row)}>\n          <EyeOutlined />\n          <span>View Details</span>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  const columns = [\n    {\n      title: \"#\",\n      dataIndex: \"index\",\n      render: (_, record, index) => {\n        return <p className=\"mb-0\"> {index + 1} </p>;\n      },\n    },\n    {\n      title: \"Action By\",\n      dataIndex: \"actionBy\",\n      render: (_, record) => (\n        <Avatar\n          size=\"default\"\n          className={`ml-1 ant-avatar-blue`}\n          // src={record.img}\n        >\n          <span className=\"font-weight-semibold font-size-sm\">\n            {utils.getNameInitial(\n              record.created_user_name\n                ? record.created_user_name\n                : \"Dummy Dummy\"\n              // record.created_by ? record.created_by : 'Dummy Dummy'\n            )}\n          </span>\n          {/*\n            {record.img ? (\n              ''\n            ) : (\n              <span className='font-weight-semibold font-size-sm'>\n                {utils.getNameInitial(record.actionBy)}\n              </span>\n            )}\n          </Avatar>\n           */}\n        </Avatar>\n      ),\n    },\n    {\n      title: \"Request No\",\n      dataIndex: \"requestNo\",\n      render: (_, record) => <p className=\"mb-0\">{record.reference_no}</p>,\n    },\n\n    {\n      title: \"Customer Name\",\n      dataIndex: \"customerName\",\n      render: (_, record) => (\n        <div>\n          <p className=\"mb-0\">{record.customer_name}</p>\n          <p className=\"mb-0\">{record.customer_bpr}</p>\n        </div>\n      ),\n    },\n    {\n      title: \"Type\",\n      dataIndex: \"type\",\n      render: (_, record) => (\n        <div>\n          <p className=\"mb-0\">{getRepeterType(record.repeater_category_id)}</p>\n        </div>\n      ),\n    },\n\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: (_, record) => (\n        <p className=\"mb-0\" style={{ color: `${getStatus(record.status)}` }}>\n          {getStatusName(record.status)}\n        </p>\n      ),\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"createdAt\",\n      render: (_, record) => (\n        <p className=\"mb-0\">{moment(record.createdAt).format(\"YYYY-MM-DD\")}</p>\n      ),\n    },\n\n    {\n      title: \"\",\n      dataIndex: \"\",\n      render: (_, record) => (\n        <div className=\"text-right\">\n          <EllipsisDropdown menu={tableDropdownMenu(record)} />\n        </div>\n      ),\n    },\n  ];\n  return (\n    <Fragment>\n      <motion.div\n        initial={{ opacity: 0, marginBottom: 0 }}\n        animate={{\n          opacity: showMessage ? 1 : 0,\n          marginBottom: showMessage ? 20 : 0,\n        }}\n      >\n        <Alert type=\"error\" showIcon message={message}></Alert>\n      </motion.div>\n      <Table\n        rowKey=\"id\"\n        columns={columns}\n        dataSource={repeaterData}\n        pagination={false}\n        loading={loading}\n      />\n      <Row justify=\"end\" className=\"mt-2\">\n        <Pagination\n          defaultCurrent={page}\n          pageSize={20}\n          current={page}\n          total={total}\n          onChange={onPageChange}\n        />\n      </Row>\n    </Fragment>\n  );\n};\n\nRepeterList.prototype = {\n  repeaterData: PropTypes.object.isRequired,\n  loadRepeaterData: PropTypes.func.isRequired,\n  showMessage: PropTypes.object.isRequired,\n  message: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  page: PropTypes.object.isRequired,\n  total: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  repeaterData: state.repeater.repeaterData,\n  showMessage: state.repeater.showMessage,\n  message: state.repeater.message,\n  loading: state.repeater.loading,\n  page: state.repeater.page,\n  total: state.repeater.total,\n});\n\nexport default connect(mapStateToProps, { loadRepeaterData })(RepeterList);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeaterComponents\\Header.js",["1935"],"import React, { Component } from 'react';\nimport PageHeaderAlt from 'components/layout-components/PageHeaderAlt';\nimport { Button, Col, Row } from 'antd';\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\nimport Flex from 'components/shared-components/Flex';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\n\nconst Header = ({ onAdd, addLoading }) => {\n  let history = useHistory();\n  return (\n    <div>\n      <PageHeaderAlt className='bg-white border-bottom' overlap>\n        <div className='container'>\n          <Row gutter={8} align='middle' justify='start' className='mb-0'>\n            <Col>\n              <span\n                onClick={() => history.goBack()}\n                style={{ cursor: 'pointer' }}\n              >\n                <ArrowLeftOutlined style={{ fontSize: '18px' }} />\n              </span>\n            </Col>\n            <Col>\n              <AppBreadcrumb />\n            </Col>\n          </Row>\n          <br></br>\n          <Flex\n            className='py-2'\n            mobileFlex={false}\n            justifyContent='between'\n            alignItems='center'\n          >\n            <h3 className='mb-3'>Add Repeater Request</h3>\n\n            <div className='mb-3'>\n              <Button type='primary' onClick={onAdd} loading={addLoading}>\n                Add\n              </Button>\n            </div>\n          </Flex>\n        </div>\n      </PageHeaderAlt>\n    </div>\n  );\n};\n\nexport default Header;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\shared-components\\Flex\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationCreate\\ItemTable.js",["1936","1937","1938"],"import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { Table, Input, Button, Popconfirm, Form, Row, Col } from \"antd\";\nimport numeral from \"numeral\";\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  vatType,\n  onChange,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef();\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  let netTotal = 0;\n  const toggleEdit = (values) => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n\n    let linePrice = 0;\n    let linePriceNoTax = 0;\n    let unitPriceNoTax = 0;\n\n    if (typeof values.quantity !== \"undefined\") {\n      let qty = Number(values.quantity);\n      let unitPrice = record[\"price\"];\n      unitPriceNoTax = record[\"price\"] + record[\"price\"] * 0.08;\n      linePrice = qty * unitPrice;\n      linePriceNoTax = qty * unitPriceNoTax;\n      record[\"total\"] = linePrice;\n      record[\"noTaxPrice\"] = unitPriceNoTax;\n      record[\"noTaxTotal\"] = linePriceNoTax;\n    }\n  };\n\n  const change = (value) => {\n    onChange(value);\n  };\n\n  const save = async (e) => {\n    try {\n      console.log(await form.validateFields());\n      const values = form.getFieldsValue();\n      toggleEdit(values);\n      console.log(record);\n      await handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log(\"Save failed:\", errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n        }}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `${title} is required.`,\n          },\n        ]}\n      >\n        <Input\n          ref={inputRef}\n          onPressEnter={save}\n          onBlur={() => {\n            save();\n          }}\n          onChange={(value) => {\n            change(value);\n          }}\n        />\n      </Form.Item>\n    ) : (\n      <div className=\"editable-cell-value-wrap\" onClick={toggleEdit}>\n        {children}\n      </div>\n    );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      total: 0,\n      netDiscount: 0,\n      vatAmount: 0,\n      subTotal: 0,\n    };\n\n    this.state = {\n      dataSource: [\n        {\n          key: 0,\n          no: 1,\n          product: \"X0-0110\",\n          quantity: 0,\n          additional: 5,\n          udp: 5,\n          price: 200,\n          total: 0,\n          noTaxPrice: 200,\n          noTaxTotal: 0,\n        },\n      ],\n      count: 1,\n      vat: 0.08,\n      i: 0,\n    };\n    window.addEventListener(\"change\", (e) => this.vatChanged(e));\n    this.vatChanged = this.vatChanged.bind(this);\n    this.sendData = this.sendData.bind(this);\n  }\n\n  sendData(data) {\n    this.props.parentCallback(data);\n  }\n\n  vatChanged() {\n    const newData = [...this.state.dataSource];\n    this.calculator(newData);\n  }\n\n  handleDelete = (key) => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({\n      dataSource: dataSource.filter((item) => item.key !== key),\n    });\n  };\n\n  handleAdd = () => {\n    const { count, dataSource } = this.state;\n    const newData = {\n      key: count,\n      no: count + 1,\n      product: \"X0-0110\",\n      quantity: 0,\n      additional: 0,\n      udp: 0,\n      price: 200,\n      total: 0,\n      noTaxPrice: 200 + 200 * 0.08,\n      noTaxTotal: 0,\n    };\n    this.setState({\n      dataSource: [...dataSource, newData],\n      count: count + 1,\n    });\n  };\n\n  handleSave = async (row) => {\n    const newData = [...this.state.dataSource];\n    console.log(newData);\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    this.setState({\n      dataSource: newData,\n    });\n\n    await this.calculator(newData);\n    let processedData = {\n      rows: newData,\n      total: this.state.total,\n      netDiscount: this.state.netDiscount,\n      vatAmount: this.state.vatAmount,\n      subTotal: this.state.subTotal,\n    };\n    this.sendData(processedData);\n  };\n\n  calculator = (newData) => {\n    let total = 0;\n    let discount = 0;\n    let vatAmount = 0;\n    let subTotal = 0;\n    let discountPortions = 0;\n    let noTaxTotal = 0;\n\n    for (var i = 0; i < newData.length; i++) {\n      discountPortions = 0;\n      let qty = Number(newData[i].quantity);\n      let unitPrice = Number(newData[i].price);\n      let unitPriceNoTax = Number(newData[i].noTaxPrice);\n      let udp = Number(newData[i].udp);\n      let additional = Number(newData[i].additional);\n      discountPortions = udp + additional;\n\n      if (this.props.vatType === \"VAT\" || this.props.vatType === \"S-VAT\") {\n        let linePrice = qty * unitPrice;\n        let lineDiscount = linePrice * (discountPortions / 100.0);\n        total = total + newData[i].total;\n        discount = discount + lineDiscount;\n        vatAmount = (total - discount) * Number(this.state.vat);\n        subTotal = total - discount + vatAmount;\n        this.setState({\n          total: total,\n          netDiscount: discount,\n          vatAmount: vatAmount,\n          subTotal: subTotal,\n        });\n      } else if (this.props.vatType === \"NO-TAX\") {\n        let linePrice = qty * unitPriceNoTax;\n        let lineDiscount = linePrice * (discountPortions / 100.0);\n        noTaxTotal = noTaxTotal + newData[i].noTaxTotal;\n        discount = discount + lineDiscount;\n        subTotal = noTaxTotal - discount;\n        this.setState({\n          total: noTaxTotal,\n          netDiscount: discount,\n          subTotal: subTotal,\n        });\n      }\n    }\n    // this.sendData(newData)\n  };\n\n  showVat = () => {\n    if (this.props.vatType === \"VAT\") {\n      return <p>Vat(8%) : {numeral(this.state.vatAmount).format(\"0,0.00\")}</p>;\n    } else if (this.props.vatType === \"S-VAT\") {\n      return (\n        <p>S-Vat(8%) : {numeral(this.state.vatAmount).format(\"0,0.00\")}</p>\n      );\n    } else {\n      return <p></p>;\n    }\n  };\n\n  onChange = (e) => {\n    const newData = [...this.state.dataSource];\n    this.calculator(newData);\n  };\n\n  componentDidUpdate() {\n    for (this.state.i; this.state.i < 3; this.state.i++) {\n      const newData = [...this.state.dataSource];\n      this.calculator(newData);\n    }\n  }\n\n  render() {\n    const { dataSource } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.props.columns.map((col) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return {\n        ...col,\n        onCell: (record) => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n          vatType: this.props.vatType,\n          onChange: this.onChange,\n        }),\n      };\n    });\n    return (\n      <div>\n        <Button\n          onClick={this.handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        >\n          Add a row\n        </Button>\n        <Table\n          components={components}\n          rowClassName={() => \"editable-row\"}\n          bordered\n          dataSource={dataSource}\n          columns={columns}\n          pagination={false}\n        />\n        <Row className=\"pt-3\">\n          <Col span={16}>\n            <Form.Item name={[\"user\", \"introduction\"]} label=\"\">\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n          <Col span={8} style={{ textAlign: \"right\" }}>\n            <p>Amount : {numeral(this.state.total).format(\"0,0.00\")}</p>\n            <p>Discount : {numeral(this.state.netDiscount).format(\"0,0.00\")}</p>\n            {this.showVat()}\n            <h3>\n              Total Amount : {numeral(this.state.subTotal).format(\"0,0.00\")}\n            </h3>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default EditableTable;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeaterDetails\\RepeterDetailsComponents\\SideCards.js",["1939","1940"],"import React from \"react\";\nimport { Avatar, Card, Badge, Row, Col } from \"antd\";\nimport Flex from \"components/shared-components/Flex\";\nimport utils from \"utils\";\nimport { EnvironmentOutlined } from \"@ant-design/icons\";\n\nconst SideCards = (props) => {\n  const { data } = props;\n\n  return (\n    <div>\n      <Card>\n        <Row justify=\"space-between\">\n          <Col>\n            <h4>Action By</h4>\n          </Col>\n        </Row>\n        <br></br>\n        <Flex>\n          <Avatar size={40} className=\"ant-avatar-blue\">\n            <span className=\"font-weight-bold font-size-lg\">\n              {utils.getNameInitial(data?.created_user_name||\"\")}\n            </span>\n          </Avatar>\n\n          <div className=\"ml-3\">\n            <h5>{data?.created_user_name}</h5>\n            <h6>\n              <p>Employee Designation</p>\n            </h6>\n          </div>\n        </Flex>\n      </Card>\n      <Card>\n        <Row justify=\"space-between\">\n          <Col>\n            <h4>Customer</h4>\n          </Col>\n        </Row>\n        <br></br>\n        <Flex>\n          <Avatar size={40} className=\"ant-avatar-blue\">\n            <span className=\"font-weight-bold font-size-lg\">\n              {utils.getNameInitial(data?.customer_name||\"\")}\n            </span>\n          </Avatar>\n\n          <div className=\"ml-3\">\n            <h5>{data?.customer_name}</h5>\n            <h6>\n              <p>{data?.customer_bpr}</p>\n            </h6>\n          </div>\n        </Flex>\n      </Card>\n      <Card>\n        <Row justify=\"space-between\">\n          <Col>\n            <h4>Contact Person</h4>\n          </Col>\n        </Row>\n        <br></br>\n        <Flex>\n          <Avatar size={40} className=\"ant-avatar-blue\">\n            <span className=\"font-weight-bold font-size-lg\">\n              {utils.getNameInitial(data?.request_contact_name||\"\")}\n            </span>\n          </Avatar>\n\n          <div className=\"ml-3\">\n            <h5>{data?.request_contact_name}</h5>\n            <h6>\n              <p>{data?.designation}</p>\n            </h6>\n          </div>\n        </Flex>\n      </Card>\n    </div>\n  );\n};\n\nexport default SideCards;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeaterDetails\\RepeterDetailsComponents\\Table.js",["1941","1942","1943","1944","1945","1946","1947","1948","1949","1950"],"import React, { useEffect, useState } from \"react\";\nimport { Avatar, Card, Badge, Row, Col, Form, List } from \"antd\";\nimport Flex from \"components/shared-components/Flex\";\nimport utils from \"utils\";\nimport { EnvironmentOutlined } from \"@ant-design/icons\";\n\nconst DataTable = (props) => {\n    const { data } = props;\n    const [keys, setKeys] = useState([]);\n    const [values, setValues] = useState([]);\n\n    useEffect(() => {\n        let ka = [];\n        let va = [];\n        let obj = {};\n        if (data !== undefined) {\n            obj = JSON.parse(data)\n            for (let key in obj) {\n                console.log(data)\n                ka.push(key);\n                va.push(obj[key]);\n            }\n            setKeys(ka);\n            setValues(va);\n\n            console.log(keys);\n            console.log(values);\n        }\n\n\n\n\n\n    }, [data])\n\n    console.log(data)\n    return (\n        <div>\n            <List>\n                {keys.map((key, index) => {\n\n                    return (\n                        <List.Item key={key}>\n                            <List.Item.Meta\n                                avatar={<p className='mb-0'>{index + 1}</p>}\n                                title={<p className='mb-0'>{key}</p>}\n                            />\n                            <div className='mb-0'>{values[index]}</div>\n                        </List.Item>\n                    )\n                })}\n            </List>\n        </div>\n    );\n};\n\nexport default DataTable;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalDetails\\QRejectModal.js",["1951"],"import React from 'react';\nimport { Button, Col, Modal, Row, Image } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Approve from '../../../../../assets/images/reject.png';\n\nconst QRejectModal = ({ qreject, setqreject, onReject }) => {\n  let history = useHistory();\n  const onCancel = () => {\n    setqreject(false);\n  };\n\n  const onRejectApproval = () => {\n    onReject();\n    setqreject(false);\n    // history.push(`/app/quotation/approvallist`);\n  };\n  return (\n    <Modal\n      centered\n      visible={qreject}\n      onCancel={onCancel}\n      footer={[\n        <Row justify='center'>\n          <Col className='mr-3'>\n            <Button\n              className='r-btn'\n              style={{ borderColor: '#ff4d4f' }}\n              onClick={onCancel}\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col>\n            <Button className='reject-btn' onClick={onRejectApproval}>\n              Reject\n            </Button>\n          </Col>\n        </Row>,\n      ]}\n    >\n      <Row justify='center' className='mt-4'>\n        <Col xs={24} className='justify-content-center d-flex mb-2'>\n          <Image src={Approve} width='75px' />\n        </Col>\n\n        <Col xs={24} className=''>\n          <p className='text-center pl-3 pr-3'>\n            Are you sure you want to Reject this Quotation?\n          </p>\n        </Col>\n      </Row>\n    </Modal>\n  );\n};\n\nexport default QRejectModal;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalDetails\\QApprovalModal.js",["1952"],"import { Button, Col, Modal, Row, Image } from 'antd';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Approve from '../../../../../assets/images/approve.png';\n\nconst QApprovalModal = ({ qapproval, setqapproval, onApproval }) => {\n  let history = useHistory();\n\n  const onCancel = () => {\n    setqapproval(false);\n  };\n  const onApproveAdditional = () => {\n    onApproval();\n    setqapproval(false);\n    // history.push(`/app/quotation/approvallist`);\n  };\n  return (\n    <Modal\n      centered\n      visible={qapproval}\n      onCancel={onCancel}\n      footer={[\n        <Row justify='center'>\n          <Col>\n            <Button\n              className='mr-3'\n              style={{ borderColor: '#1890ff', color: '#1890ff' }}\n              onClick={onCancel}\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col>\n            <Button type='primary' onClick={onApproveAdditional}>\n              Approve\n            </Button>\n          </Col>\n        </Row>,\n      ]}\n    >\n      <Row justify='center' className='mt-4'>\n        <Col xs={24} className='justify-content-center d-flex mb-2'>\n          <Image src={Approve} width='75px' />\n        </Col>\n        <Col xs={24} className=''>\n          <p className='text-center pl-3 pr-3'>\n            Are you sure you want to approve this Quotation?\n          </p>\n        </Col>\n      </Row>\n    </Modal>\n  );\n};\n\nexport default QApprovalModal;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalDetails\\ApprovalNavBar.js",["1953"],"import React from 'react';\nimport { PageHeader, Button, Tag, Row, Avatar, Col } from 'antd';\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\nimport {\n  PhoneOutlined,\n  MoneyCollectOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\nimport utils from 'utils';\nimport numeral from 'numeral';\nimport { useState } from 'react';\nimport QApprovalModal from './QApprovalModal';\nimport QRejectModal from './QRejectModal';\nimport { getStatusType } from '../../QuotationList/quotationUtil';\nimport moment from 'moment';\n\n\nconst ApprovalNavBar = (props) => {\n  const { quotationApprovalCurrentData, onApproval, onReject } = props;\n  const [qreject, setqreject] = useState(false);\n  const [qapproval, setqapproval] = useState(false);\n\n  const openqapproval = () => {\n    setqapproval(true);\n  };\n\n  const openqreject = () => {\n    setqreject(true);\n  };\n\n  return (\n    <>\n      <PageHeader\n        ghost={false}\n        subTitle={<AppBreadcrumb />}\n        onBack={() => window.history.back()}\n        extra={[\n          <Button\n            size='small'\n            onClick={openqapproval}\n            className={'approve-btn'}\n            style={{\n              width: 100,\n            }}\n          >\n            Approve\n          </Button>,\n          <Button\n            size='small'\n            onClick={openqreject}\n            className={'reject-btn'}\n            style={{\n              width: 100,\n            }}\n          >\n            Reject\n          </Button>,\n        ]}\n      >\n        <QApprovalModal\n          qapproval={qapproval}\n          setqapproval={setqapproval}\n          onApproval={onApproval}\n        />\n        <QRejectModal\n          qreject={qreject}\n          setqreject={setqreject}\n          onReject={onReject}\n        />\n        <Row>\n          <Col xs={24} sm={24} md={12} lg={12}>\n            <Row>\n              <Avatar shape='square' size={65} className='ant-avatar-blue'>\n                <span className='font-weight-bold font-size-lg'>\n                  {utils.getNameInitial(\n                    quotationApprovalCurrentData.customerDetail\n                      ? quotationApprovalCurrentData.customerDetail.customerName\n                      : 'Dummy Dummy'\n                  )}\n                </span>\n              </Avatar>\n\n              <Col>\n                <h4 className='ml-3'>\n                  {quotationApprovalCurrentData.customerDetail &&\n                    quotationApprovalCurrentData.customerDetail.customerName}\n                </h4>\n                <p className='mb-4 ml-3'>\n                  {quotationApprovalCurrentData.quotationNo &&\n                    quotationApprovalCurrentData.quotationNo}{' '}\n                </p>\n              </Col>\n              <Col className='ml-2'>\n                {getStatusType(\n                  quotationApprovalCurrentData.status\n                    ? quotationApprovalCurrentData.status\n                    : 'pending'\n                )}\n              </Col>\n            </Row>\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={12}>\n            <Row>\n              <Col lg={7}>\n                {quotationApprovalCurrentData.totalAmount && (\n                  <span>\n                    <MoneyCollectOutlined style={{ color: '#4E89FF' }} /> Value\n                    :{' '}\n                    {numeral(quotationApprovalCurrentData.totalAmount).format(\n                      '0.0 a'\n                    )}\n                  </span>\n                )}\n              </Col>\n              <Col lg={8}>\n                {quotationApprovalCurrentData.createdAt && (\n                  <span>\n                    <CalendarOutlined style={{ color: '#4E89FF' }} /> Date :{' '}\n                    {moment(quotationApprovalCurrentData.createdAt).format(\n                      'YYYY-MM-DD'\n                    )}\n                  </span>\n                )}\n              </Col>\n              <Col lg={9}>\n                {quotationApprovalCurrentData.customerDetail && (\n                  <span>\n                    <PhoneOutlined style={{ color: '#4E89FF' }} /> Phone :\n                    {quotationApprovalCurrentData.customerDetail.contact}\n                  </span>\n                )}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </PageHeader>\n    </>\n  );\n};\n\nexport default ApprovalNavBar;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalDetails\\ApprovalSideCards.js",["1954","1955"],"import React from 'react';\nimport { Card, Row, Col } from 'antd';\nimport numeral from 'numeral';\n\nconst GrossProfitAnalysis = ({ quotationApprovalCurrentData }) => {\n  const totalA = [];\n  const dwap = [];\n  const dap = [];\n  {\n    quotationApprovalCurrentData.qutationDetailList &&\n      quotationApprovalCurrentData.qutationDetailList.map((data) => {\n        totalA.push(data.total);\n\n        const total = data.total;\n        const udp = data.udp;\n        const additional = parseFloat(data.additional);\n\n        const disWithoutAddi = (total * udp) / 100;\n        dwap.push(disWithoutAddi);\n\n        const disWithAddi = ((udp + additional) / 100) * total;\n        dap.push(disWithAddi);\n      });\n  }\n\n  const totalAmount = totalA.reduce(function (acc, val) {\n    return acc + val;\n  }, 0);\n\n  const totalOfDWAP = dwap.reduce(function (acc, val) {\n    return acc + val;\n  }, 0);\n\n  const totalOfDAP = dap.reduce(function (acc, val) {\n    return acc + val;\n  }, 0);\n\n  const totalOfCost = 100;\n\n  const grossMarginBeforeAddi = totalAmount - totalOfDWAP - totalOfCost;\n  const grossProfitBeforeAddiPresent = grossMarginBeforeAddi / totalAmount;\n\n  const grossMarginAfterAddi = totalAmount - totalOfDAP - totalOfCost;\n  const grossProfitAfterAddiPresent = grossMarginAfterAddi / totalAmount;\n\n  return (\n    <Card>\n      <Row justify='space-between'>\n        <Col>\n          <h4>Gross Profit Analysis</h4>\n        </Col>\n      </Row>\n\n      <Row>\n        <h1>{numeral(grossProfitBeforeAddiPresent).format('0.00 %')}</h1>\n      </Row>\n      <Row>\n        <h6>\n          <p>Before Additional Discount</p>\n        </h6>\n      </Row>\n\n      <Row>\n        <h1>{numeral(grossProfitAfterAddiPresent).format('0.00 %')}</h1>\n      </Row>\n      <Row>\n        <h6>\n          <p>After Additional Discount</p>\n        </h6>\n      </Row>\n    </Card>\n  );\n};\n\nconst ApprovalSideCards = (props) => {\n  const { quotationApprovalCurrentData } = props;\n  return (\n    <div>\n      <GrossProfitAnalysis\n        quotationApprovalCurrentData={quotationApprovalCurrentData}\n      />\n      <Card>\n        <Row justify='space-between'>\n          <Col xs={24}>\n            <h4>Quotation Remark</h4>\n          </Col>\n          <h6>\n            <p>\n              {quotationApprovalCurrentData.note &&\n                quotationApprovalCurrentData.note}\n            </p>\n          </h6>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default ApprovalSideCards;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\util-components\\Icon\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\shared-components\\Loading\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\AppBreadcrumb.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockDetails\\CustomerUnBlockCreditPeriodModal.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer-unblock\\CustomerUnblockDetails\\CustomerUnblockCreditLimitModal.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeterList\\repeterDummy.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeterList\\utilsRepeter.js",["1956","1957"],"export const getStatus = (status) => {\n  switch (status) {\n    case \"1\":\n      return \"#179020\";\n    case \"-1\":\n      return \"#FF0000\";\n    case \"0\":\n      return \"#FFAA00\";\n    case \"2\":\n      return \"#0043FF\";\n    case \"5\":\n      return \"#FF6F00\";\n    case \"3\":\n      return \"#5F009F \";\n    case \"4\":\n      return \"#AF1458\";\n    default:\n      return \"#FFAA00\";\n  }\n};\n\nexport const getStatusName = (status) => {\n  switch (status) {\n    case \"-1\":\n      return \"Rejected\";\n    case \"0\":\n      return \"Pending\";\n    case \"1\":\n      return \"Approved\";\n    case \"2\":\n      return \"In Progress\";\n    case \"3\":\n      return \"PO Verified\";\n    case \"4\":\n      return \"BOM Created\";\n    case \"5\":\n      return \"Invoiced\";\n  }\n};\n\nexport const getRepeterType = (status) => {\n  switch (status) {\n    case \"1\":\n      return \"UPS\";\n    case \"2\":\n      return \"PABX\";\n    case \"3\":\n      return \"Bedhead Panel\";\n    case \"4\":\n      return \"Q-BUS\";\n    case \"5\":\n      return \"Power DB\";\n    case \"6\":\n      return \"Lighting\";\n    case \"7\":\n      return \"Wired Panel\";\n    case \"8\":\n      return \"Cable Management\";\n    case \"9\":\n      return \"Genarators\";\n    case \"10\":\n      return \"CCTV\";\n    case \"11\":\n      return \"Solar\";\n    case \"13\":\n      return \"Non-Wired Panel\";\n  }\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\RepeaterDetails\\RepeterDetailsComponents\\NavBar.js",["1958","1959","1960","1961","1962","1963","1964","1965"],"import React, {Component, useEffect} from \"react\";\nimport { useState } from \"react\";\nimport { PageHeader, Button, Tag, Row, Avatar, Popconfirm, Col } from \"antd\";\nimport AppBreadcrumb from \"components/layout-components/AppBreadcrumb\";\nimport Flex from \"components/shared-components/Flex\";\nimport {\n  MailOutlined,\n  PhoneOutlined,\n  CalendarOutlined,\n} from \"@ant-design/icons\";\nimport utils from \"utils\";\n\nimport { useHistory } from \"react-router-dom\";\nimport moment from 'moment';\n\nconst NavBar = (props) => {\n  let history = useHistory();\n  const { data } = props;\n  const [title,setTitle] = useState(\"\");\n  useEffect(()=>{\n    switch (data?.repeater_category_id){\n      case \"1\":setTitle(\"UPS\")\n            break;\n      case \"2\":setTitle(\"PABX\")\n        break;\n      case \"3\":setTitle(\"Bedhead Panel\")\n        break;\n      case \"4\":setTitle(\"Q-BUS\")\n        break;\n      case \"5\":setTitle(\"Power DB\")\n        break;\n      case \"6\":setTitle(\"Lighting\")\n        break;\n      case \"7\":setTitle(\"Wired Panel\")\n        break;\n      case \"8\":setTitle(\"Cable Management\")\n        break;\n      case \"9\":setTitle(\"Genarators\")\n        break;\n      case \"10\":setTitle(\"CCTV\")\n        break;\n      case \"11\":setTitle(\"Solar\")\n        break;\n      default:setTitle(\"Non Wired Panel\")\n        break;\n    }\n  },[])\n  return (\n    <div>\n      <div className=\"site-page-header-ghost-wrapper bg-white\">\n        <PageHeader\n          ghost={false}\n          subTitle={<AppBreadcrumb />}\n          onBack={() => window.history.back()}\n        >\n          <Row>\n            <Col xs={24} sm={24} md={10} lg={10}>\n              <Row>\n                <div>\n                  <h4 className=\"ml-3\">{title}-Repeater Request</h4>\n\n                  <p className=\"mb-4 ml-3\">{data?.reference_no}</p>\n                </div>\n\n                <Tag size=\"small\" className=\"ml-1 btn-sm\" color=\"orange\">\n                  PENDING\n                </Tag>\n              </Row>\n            </Col>\n            <Col xs={24} sm={24} md={14} lg={14}>\n              <Row className=\"ml-3\">\n                <Col lg={10}>\n                  <span>\n                    <CalendarOutlined style={{ color: \"#4E89FF\" }} /> Created\n                    Date : {moment(data?.createdAt).format(\"DD/MM/YYYY\")}\n                  </span>\n                </Col>\n                <Col className=\"ml-5\" lg={8}>\n                  <span>\n                    <PhoneOutlined style={{ color: \"#4E89FF\" }} /> Phone : {data?.mobile_no}\n                  </span>\n                </Col>\n              </Row>\n              <Row className=\"mt-2 ml-3\">\n                <Col lg={10}>\n                  <span>\n                    <MailOutlined style={{ color: \"#4E89FF\" }} /> Email :{\" \"}\n                    {data?.email}\n                  </span>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </PageHeader>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\quotationUtil.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\auth-views\\authentication\\login-2\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\PageHeaderAlt.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\shared-components\\EllipsisDropdown\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\auth-views\\components\\LoginForm.js",["1966","1967","1968","1969","1970","1971"],"import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form, Input, Divider, Alert } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport { GoogleSVG, FacebookSVG } from 'assets/svg/icon';\r\nimport CustomIcon from 'components/util-components/CustomIcon'\r\nimport {  \r\n\tshowLoading, \r\n\tshowAuthMessage, \r\n\thideAuthMessage,\r\n\tauthenticated,\r\n    signIn\r\n} from 'redux/actions/Auth';\r\nimport JwtAuthService from 'services/JwtAuthService'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\"\r\nimport {isSession} from \"../../../session/Session\";\r\n\r\nexport const LoginForm = (props) => {\r\n\tlet history = useHistory();\r\n\r\n\tconst { \r\n\t\totherSignIn, \r\n\t\tshowForgetPassword, \r\n\t\thideAuthMessage,\r\n\t\tonForgetPasswordClick,\r\n\t\tshowLoading,\r\n\t\textra,\r\n\t\tloading,\r\n\t\tshowMessage,\r\n\t\tmessage,\r\n\t\tauthenticated,\r\n\t\tshowAuthMessage,\r\n\t\ttoken,\r\n\t\tredirect,\r\n\t\tallowRedirect,\r\n        signIn\r\n\t} = props\r\n\r\n\tconst onLogin = values => {\r\n\t\tshowLoading();\r\n\t\tsignIn(values);\r\n\t};\r\n\r\n\tconst onGoogleLogin = () => {\r\n\t\tshowLoading()\r\n\t}\r\n\r\n\tconst onFacebookLogin = () => {\r\n\t\tshowLoading()\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSession()) {\r\n\t\t\thistory.push(redirect)\r\n\t\t}\r\n\t},[authenticated]);\r\n\t\r\n\tconst renderOtherSignIn = (\r\n\t\t<div>\r\n\t\t\t<Divider>\r\n\t\t\t\t<span className=\"text-muted font-size-base font-weight-normal\">or connect with</span>\r\n\t\t\t</Divider>\r\n\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t<Button \r\n\t\t\t\t\tonClick={() => onGoogleLogin()} \r\n\t\t\t\t\tclassName=\"mr-2\" \r\n\t\t\t\t\tdisabled={loading} \r\n\t\t\t\t\ticon={<CustomIcon svg={GoogleSVG}/>}\r\n\t\t\t\t>\r\n\t\t\t\t\tGoogle\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button \r\n\t\t\t\t\tonClick={() => onFacebookLogin()} \r\n\t\t\t\t\ticon={<CustomIcon svg={FacebookSVG}/>}\r\n\t\t\t\t\tdisabled={loading} \r\n\t\t\t\t>\r\n\t\t\t\t\tFacebook\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<motion.div\r\n\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }}\r\n\t\t\t\tanimate={{\r\n\t\t\t\t\topacity: showMessage ? 1 : 0,\r\n\t\t\t\t\tmarginBottom: showMessage ? 20 : 0\r\n\t\t\t\t}}>\r\n\t\t\t\t<Alert type=\"error\" showIcon message={message}></Alert>\r\n\t\t\t</motion.div>\r\n\t\t\t<Form \r\n\t\t\t\tlayout=\"vertical\" \r\n\t\t\t\tname=\"login-form\"\r\n\t\t\t\tonFinish={onLogin}\r\n\t\t\t>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: 'Please input your username',\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}>\r\n\t\t\t\t\t<Input prefix={<UserOutlined  className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t<div className={`${showForgetPassword? 'd-flex justify-content-between w-100 align-items-center' : ''}`}>\r\n\t\t\t\t\t\t\t<span>Password</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tshowForgetPassword && \r\n\t\t\t\t\t\t\t\t<span \r\n\t\t\t\t\t\t\t\t\tonClick={() => onForgetPasswordClick} \r\n\t\t\t\t\t\t\t\t\tclassName=\"cursor-pointer font-size-sm font-weight-normal text-muted\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tForget Password?\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t} \r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: 'Please input your password',\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t{\r\n\t\t\t\t\totherSignIn ? renderOtherSignIn : null\r\n\t\t\t\t}\r\n\t\t\t\t{ extra }\r\n                <a href=\"https://aws.amazon.com/what-is-cloud-computing\">\r\n\t\t\t\t\t<img src=\"https://d0.awsstatic.com/logos/powered-by-aws.png\" alt=\"Powered by AWS Cloud Computing\" style={{width:\"60px\"}} className={\"mr-4\"}/>\r\n\t\t\t\t\t<img src=\"https://cdn-images-1.medium.com/max/800/1*ubdzj9K3MrbMb0Ep0UV3IA.png\" alt=\"Powered by AWS Cloud Computing\" style={{width:\"70px\"}}/>\r\n\t\t\t\t</a>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nLoginForm.propTypes = {\r\n\totherSignIn: PropTypes.bool,\r\n\tshowForgetPassword: PropTypes.bool,\r\n\textra: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n};\r\n\r\nLoginForm.defaultProps = {\r\n\totherSignIn: false,\r\n\tshowForgetPassword: true\r\n};\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n\tconst {loading, message, showMessage, token, redirect} = auth;\r\n  \treturn {loading, message, showMessage, token, redirect}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tshowAuthMessage,\r\n\tshowLoading,\r\n\thideAuthMessage,\r\n\tauthenticated,\r\n    signIn\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\r\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\util-components\\IntlMessage\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\services\\JwtAuthService.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\assets\\svg\\icon.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\util-components\\CustomIcon\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\auth\\FetchInterceptor.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\history.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\utill.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\PRBX\\PrbxDetails.js",["1972","1973"],"import React from 'react';\nimport { Form, Select, Radio, Row, Col, Input, Card } from 'antd';\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 14 },\n};\n\nconst PrbxDetails = () => {\n  return (\n    <div>\n      <br></br>\n      <Card title='PRBX Details'>\n        <Row>\n          <Col className='mr-5 mt-3' xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name='noOfExtensions'\n              label='No of Extensions\n              '\n              labelCol={{ md: 5, lg: 11 }}\n              hasFeedback\n              rules={[{ message: 'No of Extensions' }]}\n            >\n              <Input placeholder='No of Extensions' />\n            </Form.Item>\n            <Form.Item\n              name='brand'\n              label='Brand\n              '\n              labelCol={{ md: 5, lg: 11 }}\n              hasFeedback\n              rules={[{ message: 'Brand' }]}\n            >\n              <Input placeholder='Brand' />\n            </Form.Item>\n            <Form.Item\n              name='typeOfRequirement'\n              label='Type of Requirement'\n              labelCol={{ md: 5, lg: 11 }}\n            >\n              <Radio.Group>\n                <Radio className='mr-5' value='New'>\n                  New\n                </Radio>\n                <Radio value='Existing'>Existing</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name='quotationRequirement'\n              label='Quotation Requirement'\n              labelCol={{ md: 5, lg: 11 }}\n            >\n              <Radio.Group>\n                <Radio className='mb-3' value='Within Week'>\n                  Within Week\n                </Radio>\n\n                <Radio value='One or Two Weeks'>One or Two Weeks</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n\n          <Col className='mt-3' xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name='noOfRecipients_Operators'\n              label='No of Recipients/Operators \n              '\n              labelCol={{ md: 5, lg: 11 }}\n              hasFeedback\n              rules={[{ message: 'No of Recipients/Operators ' }]}\n            >\n              <Input placeholder='No of Recipients/Operators' />\n            </Form.Item>\n            <Form.Item\n              name='noOfTrunks_Outline'\n              label='No of Trunks/Outline'\n              labelCol={{ md: 5, lg: 11 }}\n              hasFeedback\n              rules={[{ message: 'No of Trunks/Outline' }]}\n            >\n              <Input placeholder='No of Trunks/Outline' />\n            </Form.Item>\n            <Form.Item\n              name='telephoneCabling'\n              label='Telephone cabling'\n              labelCol={{ md: 5, lg: 11 }}\n            >\n              <Radio.Group>\n                <Radio className='mr-5' value='Yes'>\n                  Yes\n                </Radio>\n                <Radio value='No'>No</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={24} sm={24} md={24} lg={24}>\n            <Form.Item\n              name='remarkPrbx'\n              label='Remark\n              '\n              className='mr-3'\n              hasFeedback\n              rules={[{ message: 'Remark' }]}\n              labelCol={{ md: 6, lg: 5 }}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default PrbxDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\QBUS\\QBusDetails.js",["1974","1975"],"import React from 'react';\nimport { Form, Select, Radio, Row, Col, Input, Card } from 'antd';\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 14 },\n};\n\nconst QBusDetails = () => {\n  return (\n    <div>\n      <br></br>\n      <Card title='Q-BUS Details'>\n        <Row>\n          <Col className='mr-3 mt-3' xs={24} sm={24} md={10} lg={10}>\n            <Form.Item\n              name='softCopiesCADDrawing'\n              label='Soft Copies CAD Drawing(PDF) '\n              labelCol={{ md: 6, lg: 15 }}\n            >\n              <Radio.Group>\n                <Radio value='Yes'>Yes</Radio>\n                <Radio value='No'>No</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name='standardsFollow'\n              label='Standards Follow(If applicable)'\n              labelCol={{ md: 6, lg: 15 }}\n            >\n              <Radio.Group>\n                <Radio value='Yes'>Yes</Radio>\n                <Radio value='No'>No</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name='wiringStatus_newExists'\n              label='Wiring Status - new exists'\n              labelCol={{ md: 6, lg: 15 }}\n            >\n              <Radio.Group>\n                <Radio value='Yes'>Yes</Radio>\n                <Radio value='No'>No</Radio>\n              </Radio.Group>\n            </Form.Item>\n\n            <Form.Item\n              name='singleLineDiagram'\n              label='Single Line Diagram'\n              labelCol={{ md: 8, lg: 15 }}\n            >\n              <Radio.Group>\n                <Radio value='Yes'>Yes</Radio>\n                <Radio value='No'>No</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n\n          <Col className='mt-3' xs={24} sm={24} md={12} lg={12}>\n            <Form.Item\n              name='detailedSpecificationOfTheProject'\n              label='Detailed Specification of the project'\n              labelCol={{ md: 6, lg: 15 }}\n            >\n              <Radio.Group>\n                <Radio value='Yes'>Yes</Radio>\n                <Radio value='No'>No</Radio>\n              </Radio.Group>\n            </Form.Item>\n\n            <Form.Item\n              name='loadSpecificationIFSLDNotAvailable'\n              label=\"Load Specification IF SLD's not available\"\n              labelCol={{ md: 6, lg: 15 }}\n            >\n              <Radio.Group>\n                <Radio value='Yes'>Yes</Radio>\n                <Radio value='No'>No</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name='picturesTakenAtTheSite'\n              label='Pictures taken at the site (If Available)'\n              labelCol={{ md: 6, lg: 15 }}\n            >\n              <Radio.Group>\n                <Radio value='Yes'>Yes</Radio>\n                <Radio value='No'>No</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={24} sm={24} md={23} lg={23}>\n            <Form.Item\n              className='mr-5'\n              labelCol={{ md: 6, lg: 7 }}\n              name='remarkQBUS'\n              label='Remark\n              '\n              hasFeedback\n              rules={[{ message: 'Remark' }]}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default QBusDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Non-WiredPanel\\NonWiredPanelDetails.js",["1976","1977"],"import React, {useState} from \"react\";\nimport { Form, Select, Radio, Row, Col, Input, Checkbox, Card } from \"antd\";\nimport {useHistory} from \"react-router-dom\";\n\nconst { Option } = Select;\n\nconst NonWiredPanelDetails = () => {\n\n  const [checkColor, setRadioColor] = useState(false);\n\n  const onRadioChange = (e) => {\n    if(e.target.value===\"Other\"){\n      setRadioColor(true);\n    }else{\n      setRadioColor(false);\n    }\n\n  };\n\n  return (\n    <div>\n      <br></br>\n      <Card title=\"Non-Wired Panel Details\">\n        <Row>\n          <Col className=\"mr-5 mt-3\" xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name=\"environment\"\n              label=\"Environment \"\n              labelCol={{ md: 6, lg: 11 }}\n              hasFeedback\n              rules={[{ message: \"-Select Environment-\" }]}\n            >\n              <Select placeholder=\"-Select Environment-\">\n                <Option value=\"Indoor\"> Indoor </Option>\n                <Option value=\"Outdoor\">Outdoor</Option>\n                <Option value=\"Coastal Area\">Coastal Area</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"coatingType\"\n              label=\"Coating Type \"\n              labelCol={{ md: 6, lg: 11 }}\n              hasFeedback\n              rules={[{ message: \"-Select Coating Type-\" }]}\n            >\n              <Select placeholder=\"-Select Coating Type-\">\n                <Option value=\"Powder\"> Powder </Option>\n                <Option value=\"Spray Paint\">Spray Paint </Option>\n                <Option value=\"Primer Powder\">Primer Powder</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"asPerTheDrawing\"\n              label=\"As per the Drawing\"\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Radio.Group>\n                <Radio className=\"mr-5\" value=\"Yes\">\n                  Yes\n                </Radio>\n                <Radio value=\"No\">No</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name=\"asPerTheSample\"\n              label=\"As per the Sample\"\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Radio.Group>\n                <Radio className=\"mr-5\" value=\"Yes\">\n                  Yes\n                </Radio>\n                <Radio value=\"No\">No</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n\n          <Col className=\"mt-3\" xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name=\"coverPlate\"\n              label=\"Cover Plate\"\n              labelCol={{ md: 6, lg: 11 }}\n              hasFeedback\n              rules={[{ message: \"-Select Cover Plate-\" }]}\n            >\n              <Select placeholder=\"-Select Cover Plate-\">\n                <Option value=\"No\"> No </Option>\n                <Option value=\"Full\">Full</Option>\n                <Option value=\"Open\">Open</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"mountingMethod\"\n              label=\"Mounting Method\"\n              labelCol={{ md: 6, lg: 11 }}\n              hasFeedback\n              rules={[{ message: \"-Select Mounting Method-\" }]}\n            >\n              <Select placeholder=\"-Select Mounting Method-\">\n                <Option\n                  value=\"Surface\"\n                >\n                  Surface\n                </Option>\n                <Option value=\"Sunk\">Sunk </Option>\n                <Option value=\"Free Solution\"> Free Solution</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"asPerTheBOQ\"\n              label=\"As per the BOQ\"\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Radio.Group>\n                <Radio className=\"mr-5\" value=\"Yes\">\n                  Yes\n                </Radio>\n                <Radio value=\"No\">No</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name=\"mountingPlate\"\n              label=\"Mounting Plate\"\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Radio.Group>\n                <Radio className=\"mr-5\" value=\"Yes\">\n                  Yes\n                </Radio>\n                <Radio value=\"No\">No</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} sm={12} md={6} lg={8}>\n            <Form.Item name=\"color\" label=\"Color\" labelCol={{ md: 5, lg: 8 }}>\n              <Radio.Group checked={checkColor} onChange={onRadioChange}>\n                <Radio className=\"mr-5\" value=\"RAL-7022\">\n                  RAL-7022\n                </Radio>\n                <Radio value=\"Other\">Other</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n          <Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Item\n              name=\"OtherColor\"\n              label=\"Other\"\n              hidden={!checkColor}\n              labelCol={{ md: 4, lg: 12 }}\n              hasFeedback\n              rules={[{ message: \"Other\" }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={24} sm={24} md={24} lg={24}>\n            <Form.Item\n              name=\"remarkNW\"\n              label=\"Remark\"\n              className=\"mr-3\"\n              hasFeedback\n              rules={[{ message: \"Remark\" }]}\n              labelCol={{ md: 6, lg: 5 }}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default NonWiredPanelDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\LightningDetails\\LightningDetails.js",["1978"],"import React from 'react';\nimport { Form, Select, Row, Col, Input, Card } from 'antd';\n\nconst { Option } = Select;\n\nconst LightningDetails = () => {\n  return (\n    <div>\n      <br></br>\n      <Card title='Lightning Details'>\n        <Row>\n          <Col className='mt-3' xs={24} sm={24} md={8} lg={8}>\n            <Form.Item\n              label='Required LUX level'\n              name='requiredLUXLevel'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Required LUX level' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label='Dimming requirement'\n              name='dimmingRequirement'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Dimming requirement' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label='Luminous Flux'\n              name='luminousFlux'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Luminous Flux' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label='Beam Angle'\n              name='beamAngle'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Beam Angle' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label='IP rating'\n              name='ipating'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'IP rating' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label='Warranty'\n              name='warranty'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Warranty' }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col className='mt-3' xs={24} sm={24} md={8} lg={8}>\n            <Form.Item\n              className='ml-3'\n              name='colorTemperature'\n              label='Color temperature'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Color temperature' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              className='ml-3'\n              name='requiredDimmingMethod'\n              label='Required Dimming Method'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Required Dimming Method' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3'\n              name='cri'\n              label='CRI'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'CRI' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3'\n              name='ratedPower'\n              label='Rated Power'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Rated Power' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3'\n              name='cutOut'\n              label='Cut Out'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Cut Out' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3'\n              name='ikRating'\n              label='IK rating\n\n              '\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'IK rating' }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col className='mt-3' xs={24} sm={24} md={8} lg={8}>\n            <Form.Item\n              className='ml-3 '\n              name='colorsOfFittings'\n              label='Colors of fittings'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Colors of fittings' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3 '\n              name='lampType'\n              label='Lamp Type'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Lamp Type' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3 '\n              name='cct'\n              label='CCT'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'CCT' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3 '\n              name='mountingMethod'\n              label='Mounting Method'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Mounting Method' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3 '\n              name='material'\n              label='Material'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Material' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='ml-3 '\n              name='lifeSpan'\n              label='Life span'\n              labelCol={{ md: 5, lg: 17 }}\n              hasFeedback\n              rules={[{ message: 'Life span' }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={24} sm={24} md={24} lg={24}>\n            <Form.Item\n              className='ml-3'\n              labelCol={{ md: 3, lg: 5 }}\n              name='remarkLighting'\n              label='Remark'\n              hasFeedback\n              rules={[{ message: 'Remark' }]}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default LightningDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Generator\\GeneratorDetails.js",["1979"],"import React from \"react\";\nimport { Form, Select, Radio, Row, Col, Input, Card } from \"antd\";\n\nconst { Option } = Select;\n\nconst GeneratorDetails = () => {\n  return (\n    <div>\n      <br></br>\n      <Card title=\"Generator Details\">\n        <Row>\n          <Col className=\"mr-5 mt-3\" xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              labelCol={{ md: 5, lg: 13 }}\n              name=\"capacity\"\n              label=\"Capacity Of Generator (KVA)\"\n              hasFeedback\n              rules={[{ message: \"Capacity Of Generator (KVA)\" }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"earthingLength\"\n              label=\"Earthing Length \n              \"\n              labelCol={{ md: 5, lg: 13 }}\n              hasFeedback\n              rules={[{ message: \"Earthing Length \" }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"changeOverSwitch\"\n              label=\"Change Over Switch\"\n              labelCol={{ md: 5, lg: 13 }}\n            >\n              <Radio.Group>\n                <Radio value=\"ATS\">ATS</Radio>\n                <Radio value=\"Manual\">Manual</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n\n          <Col className=\"mt-3\" xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name=\"cableDistance\"\n              label=\"Cable Distance\n\n              \"\n              labelCol={{ md: 5, lg: 10 }}\n              hasFeedback\n              rules={[{ message: \"Cable Distance\" }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              name=\"soundProof\"\n              label=\"Sound Proof\"\n              labelCol={{ md: 5, lg: 10 }}\n            >\n              <Radio.Group>\n                <Radio value=\"Open\">Open</Radio>\n                <Radio value=\"Close\">Close</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name=\"fuelTank\"\n              label=\"Fuel Tank\"\n              labelCol={{ md: 5, lg: 10 }}\n            >\n              <Radio.Group>\n                <Radio value=\"Generator Tank\">Generator Tank</Radio>\n                <Radio value=\"Additional Fuel Tank\">Additional Fuel Tank</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={24} sm={24} md={24} lg={24}>\n            <Form.Item\n              name=\"remarkGen\"\n              label=\"Remark\n              \"\n              className=\"mr-3\"\n              hasFeedback\n              rules={[{ message: \"Remark\" }]}\n              labelCol={{ md: 6, lg: 6 }}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default GeneratorDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\CCTV\\CctvDetails.js",["1980"],"import React from \"react\";\nimport { Form, Select, Radio, Row, Col, Input, Card } from \"antd\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 14 },\n};\n\nconst CctvDetails = () => {\n  return (\n    <div>\n      <br></br>\n      <Card title=\"CCTV Details\">\n        <Row>\n          <Col className=\"mr-5 mt-3\" xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name=\"noOfCamerasIndoor\"\n              label=\"No of cameras/Location Indoor \"\n              labelCol={{ md: 6, lg: 13 }}\n              hasFeedback\n              rules={[{ message: \"No of cameras/Location Indoor\" }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              name=\"noOfExistingCameras\"\n              label=\"No of cameras/Location Existing  \"\n              labelCol={{ md: 6, lg: 13 }}\n              hasFeedback\n              rules={[{ message: \"No of cameras/Location Existing \" }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"recordingDuration\"\n              label=\"Recording Duration \"\n              labelCol={{ md: 6, lg: 13 }}\n              hasFeedback\n              rules={[{ message: \"-Recording Duration-\" }]}\n            >\n              <Select placeholder=\"-Recording Duration-\">\n                <Option value=\"1 to 7 days\"> 1 to 7 days </Option>\n                <Option value=\"8 to 14 days\"> 8 to 14 days </Option>\n                <Option\n                  value=\"15 to 30 days\"\n                >\n                  15 to 30 days\n                </Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"monitor\"\n              label=\"Monitor\"\n              labelCol={{ md: 6, lg: 13 }}\n            >\n              <Radio.Group>\n                <Radio value=\"Existing\">Existing</Radio>\n                <Radio value=\"New\">New</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name=\"monitorSize\"\n              label=\"Monitor Size\"\n              labelCol={{ md: 6, lg: 13 }}\n              hasFeedback\n              rules={[{ message: \"New Monitor Size\" }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n\n          <Col className=\"mt-3\" xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name=\"noOfCamerasOutdoor\"\n              label=\"No of cameras/Location Outdoor\"\n              labelCol={{ md: 6, lg: 13 }}\n              hasFeedback\n              rules={[{ message: \"No of cameras/Location Outdoor\" }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              name=\"typeOfRequirement\"\n              label=\"Type of Requirement \"\n              labelCol={{ md: 6, lg: 13 }}\n              hasFeedback\n              rules={[{ message: \"Select Requirement\" }]}\n            >\n              <Select placeholder=\"-Select Requirement-\">\n                <Option value=\"New\">New</Option>\n                <Option value=\"Expansion\"> Expansion</Option>\n                <Option\n                  value=\"Existing\"\n                >\n                  {\" \"}\n                  Existing\n                </Option>\n                <Option value=\"Other\"> Other</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              name=\"valueAddedServices\"\n              label=\"Value added services\"\n              labelCol={{ md: 6, lg: 13 }}\n              hasFeedback\n              rules={[{ message: \"-Select Service-\" }]}\n            >\n              <Select placeholder=\"-Select Service-\">\n                <Option value=\"Motion Detection\">Motion Detection</Option>\n                <Option value=\"Access Control\">Access Control </Option>\n                <Option\n                  value=\"Email Notification\"\n                >\n                  Email Notification\n                </Option>\n                <Option\n                  value=\"Remote Monitoring\"\n                >\n                  Remote Monitoring\n                </Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"cctvCabling\"\n              label=\"CCTV Cabling\"\n              labelCol={{ md: 6, lg: 13 }}\n            >\n              <Radio.Group>\n                <Radio value=\"Existing\">Existing</Radio>\n                <Radio value=\"New\">New</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name=\"extensionCableType\"\n              label=\"Extension Cable Type\n              \"\n              labelCol={{ md: 6, lg: 13 }}\n              hasFeedback\n              rules={[{ message: \"Extension Cable Type\" }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={24} sm={24} md={24} lg={24}>\n            <Form.Item\n              name=\"remarkCCTV\"\n              label=\"Remark\n              \"\n              className=\"mr-3\"\n              hasFeedback\n              rules={[{ message: \"Remark\" }]}\n              labelCol={{ md: 6, lg: 5 }}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default CctvDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\PowerDB\\PowerDBDetails.js",["1981","1982"],"import React from 'react';\nimport { Form, Select, Radio, Row, Col, Input, DatePicker, Card } from 'antd';\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst formItemLayout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 14 },\n};\n\nconst PowerDBDetails = () => {\n  return (\n    <div>\n      <br></br>\n      <Card title='PowerDB Details'>\n        <Row>\n          <Col className='mr-5 mt-3' xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name='projectName'\n              label='Project Name\n              '\n              hasFeedback\n              rules={[{ message: 'Project Name' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              className='justify-end'\n              name='requiredDate'\n              label='Required Date'\n              hasFeedback\n              labelCol={{ md: 8, lg: 11 }}\n            >\n              <DatePicker style={{ width: '100%' }} />\n            </Form.Item>\n            <Form.Item\n              name='panelType'\n              label='Panel Type'\n              hasFeedback\n              rules={[{ message: '-Select Panel Type-' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Select placeholder='-Select Panel Type-'>\n                <Option value='Wired'> Wired </Option>\n                <Option value='Non-Wired'>Non-Wired </Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name='coverPlate'\n              label='Cover Plate'\n              hasFeedback\n              rules={[{ message: '-Select Cover Plates-' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Select placeholder='-Select Cover Plates-'>\n                <Option value='No'>No</Option>\n                <Option value='Full'>Full </Option>\n                <Option value='Open'>Open </Option>\n                <Option value='Not Satisfied'>Not Satisfied</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              name='dimentions'\n              label='Dimentions'\n              hasFeedback\n              rules={[{ message: 'Dimentions' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='coatingType'\n              label='Coating Type'\n              hasFeedback\n              rules={[{ message: '-Select Coating Type-' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Select placeholder='-Select Coating Type-'>\n                <Option value='Powder'>Powder</Option>\n                <Option value='Spray Paint'>Spray Paint</Option>\n                <Option value='Primer Powder'>Primer Powder</Option>\n                <Option value='HDG'>HDG</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              name='colour_FinishType'\n              label='Colour, Finish Type \n              '\n              hasFeedback\n              rules={[{ message: 'Colour, Finish Type ' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='formType'\n              label='Form Type'\n              hasFeedback\n              rules={[{ message: 'Form Type' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='mountingPlates'\n              label='Mounting Plates'\n              hasFeedback\n              rules={[{ message: 'Mounting Plates' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='lBars'\n              label='L Bars'\n              hasFeedback\n              rules={[{ message: 'L Bars' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='cableAlley'\n              label='Cable Alley'\n              hasFeedback\n              rules={[{ message: 'Cable Alley' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='accessories_Other'\n              label='Accessories & Other \n              '\n              hasFeedback\n              rules={[{ message: 'Accessories & Other ' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n\n          <Col className='mt-3' xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name='projectLocation'\n              label='Project Location'\n              hasFeedback\n              rules={[{ message: 'Project Location' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='ipRating'\n              label='IP Rating'\n              hasFeedback\n              rules={[{ message: 'IP Rating' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='environment'\n              label='Environment'\n              hasFeedback\n              rules={[{ message: '-Select Environment-' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Select placeholder='-Select Environment-'>\n                <Option value='Indoor'>Indoor</Option>\n                <Option value='Outdoor'>Outdoor</Option>\n                <Option value='Coastal Area'>Coastal Area</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name='collerType'\n              label='Coller Type '\n              hasFeedback\n              rules={[{ message: '-Select Coller Type-' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Select placeholder='-Select Coller Type-'>\n                <Option value='Sunk/Recces'> Sunk/Recces </Option>\n                <Option value='Surface'>Surface </Option>\n                <Option value='Free Standing'>Free Standing </Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              name='cableEntry'\n              label='Cable Entry'\n              hasFeedback\n              rules={[{ message: '-Select Cable Entry-' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Select placeholder='-Select Cable Entry-'>\n                <Option value='Top Side'> Top Side </Option>\n                <Option value='Bottom Side'> Bottom Side </Option>\n                <Option value='Other'>Other</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              name='otherCoatingType'\n              label='Other Coating Type'\n              hasFeedback\n              rules={[{ message: 'Other Coating Type' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='designOutput'\n              label='Design Output'\n              hasFeedback\n              rules={[{ message: '-Select Design Output-' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Select placeholder='-Select Design Output-'>\n                <Option value='As per the Sample'>As per the Sample </Option>\n                <Option value='As per the Drawing'>As per the Drawing</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name='other'\n              label='Other'\n              hasFeedback\n              rules={[{ message: 'Other' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='canopy'\n              label='Canopy'\n              hasFeedback\n              rules={[{ message: 'Canopy' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='coverPlates'\n              label='Cover plates'\n              hasFeedback\n              rules={[{ message: 'Cover plates' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='busAlley'\n              label='Bus Alley'\n              hasFeedback\n              rules={[{ message: 'Bus Alley' }]}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name='gpLevelNeedToMatch'\n              label='GP Level Need To Match'\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Radio.Group>\n                <Radio className='mr-5' value='Yes'>\n                  Yes\n                </Radio>\n                <Radio value='No'>No</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={24} sm={24} md={24} lg={24}>\n            <Form.Item\n              className='mr-3'\n              name='remarkPowerDB'\n              label='Remark\n              '\n              hasFeedback\n              rules={[{ message: 'Remark' }]}\n              labelCol={{ md: 6, lg: 5 }}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default PowerDBDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\CableManagement\\CableManagementDetails.js",["1983","1984"],"import React, {useState} from \"react\";\nimport { Form, Select, Radio, Row, Col, Input, Checkbox, Card } from \"antd\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 14 },\n};\n\nconst CableManagementDetails = () => {\n  const [checkColor, setRadioColor] = useState(false);\n\n  const onRadioChange = (e) => {\n    if(e.target.value===\"Other\"){\n      setRadioColor(true);\n    }else{\n      setRadioColor(false);\n    }\n\n  };\n\n  return (\n    <div>\n      <br></br>\n      <Card title=\"Cable Management Details\">\n        <Row>\n          <Col className=\"mr-5 mt-3\" xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name=\"asPerTheDrawing\"\n              label=\"As per the Drawing\"\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Radio.Group>\n                <Radio className=\"mr-5\" value=\"Yes\">\n                  Yes\n                </Radio>\n                <Radio value=\"No\">No</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name=\"asPerTheSample\"\n              label=\"As per the Sample\"\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Radio.Group>\n                <Radio className=\"mr-5\" value=\"Yes\">\n                  Yes\n                </Radio>\n                <Radio value=\"No\">No</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Row>\n              <Col xs={12} sm={12} md={12} lg={12}>\n                <Form.Item name=\"color\" label=\"Color\" labelCol={{ md: 1, lg: 8 }}>\n                  <Radio.Group checked={checkColor} onChange={onRadioChange}>\n                    <Radio className=\"mr-5\" value=\"RAL-7022\">\n                      RAL-7022\n                    </Radio>\n                    <Radio value=\"Other\">Other</Radio>\n                  </Radio.Group>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col className=\"mt-3\" xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name=\"asPerTheBOQ\"\n              label=\"As per the BOQ\"\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Radio.Group>\n                <Radio className=\"mr-5\" value=\"Yes\">\n                  Yes\n                </Radio>\n                <Radio value=\"No\">No</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name=\"brackets\"\n              label=\"Brackets\"\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Radio.Group>\n                <Radio className=\"mr-5\" value=\"Yes\">\n                  Yes\n                </Radio>\n                <Radio value=\"No\">No</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item name=\"lid\" label=\"Lid\" labelCol={{ md: 6, lg: 11 }}>\n              <Radio.Group>\n                <Radio className=\"mr-5\" value=\"Yes\">\n                  Yes\n                </Radio>\n                <Radio value=\"No\">No</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n                name=\"OtherColor\"\n                label=\"Other\"\n                hidden={!checkColor}\n              labelCol={{ md: 6, lg: 11 }}\n            >\n              <Input\n\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name=\"surfaceFinish\"\n              label=\"Surface Finish \"\n              labelCol={{ md: 6, lg: 11 }}\n              hasFeedback\n              rules={[{ message: \"-Select Color-\" }]}\n            >\n              <Select placeholder=\"-Select Color-\">\n                <Option value=\"Powder Coated\"> Powder Coated </Option>\n                <Option value=\"HDG\">HDG</Option>\n                <Option value=\"Zinc Aluminum\">Zinc Aluminum</Option>\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              className=\"ml-5\"\n              name=\"dimensions\"\n              label=\"Dimensions\n              \"\n              labelCol={{ md: 6, lg: 11 }}\n              hasFeedback\n              rules={[{ message: \"Dimensions\" }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={24} sm={24} md={23} lg={23}>\n            <Form.Item\n              className=\"mr-5\"\n              labelCol={{ md: 6, lg: 6 }}\n              name=\"remarkCM\"\n              label=\"Remark\n              \"\n              hasFeedback\n              rules={[{ message: \"Remark\" }]}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default CableManagementDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\UPS\\UpsDetails.js",["1985"],"import React from 'react';\nimport { Form, Select, Radio, Row, Col, Input, Card } from 'antd';\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 14 },\n};\n\nconst UpsDetails = () => {\n  return (\n    <div>\n      <br></br>\n      <Card title='UPS Details'>\n        <Row>\n          <Col className='mr-5 mt-3' xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name='typeOfUPS'\n              label='Type of UPS'\n              labelCol={{ md: 4, lg: 7 }}\n            >\n              <Radio.Group>\n                <Radio value='Line Inactive'>Line Inactive</Radio>\n                <Radio value='Online'>Online</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name='typeOfUse'\n              label='Type of Use'\n              hasFeedback\n              labelCol={{ md: 4, lg: 7 }}\n            >\n              <Select placeholder='-Select Type-'>\n                <Option value='Residential'> Residential </Option>\n                <Option value='Industrial'>Industrial </Option>\n                <Option value='Data Center'>Data Center </Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name='capacity'\n              label='Capacity'\n              labelCol={{ md: 4, lg: 7 }}\n            >\n              <Radio.Group>\n                <Radio value='Less than 1 kVA'>Less than 1 kVA </Radio>\n                <Radio value='1kVA - 3kVA'>1kVA - 3kVA</Radio>\n              </Radio.Group>\n            </Form.Item>\n\n            <Form.Item\n              name='inputPower'\n              label='Input Power'\n              hasFeedback\n              labelCol={{ md: 4, lg: 7 }}\n            >\n              <Select placeholder='-Select Input Power-'>\n                <Option value='Single Phase'>Single Phase </Option>\n                <Option value='Three Phase'>Three Phase</Option>\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col className='mt-3' xs={24} sm={24} md={11} lg={11}>\n            <Form.Item\n              name='backupTime'\n              label='Backup Time'\n              labelCol={{ md: 4, lg: 7 }}\n            >\n              <Radio.Group>\n                <Radio value='10 - 60min'>10 - 60min</Radio>\n                <Radio value='more than 60min'>more than 60min</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item\n              name='other1'\n              label='Other\n              '\n              labelCol={{ md: 4, lg: 7 }}\n              hasFeedback\n              rules={[{ message: 'Other' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              name='other2'\n              label='Other\n              '\n              labelCol={{ md: 4, lg: 7 }}\n              hasFeedback\n              rules={[{ message: 'Other' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              name='outputPower'\n              label='Output Power'\n              labelCol={{ md: 4, lg: 7 }}\n              hasFeedback\n              rules={[{ message: '-Select Output Power-' }]}\n            >\n              <Select placeholder='-Select Output Power-'>\n                <Option value='Single Phase'>Single Phase</Option>\n                <Option value='Three Phase'>Three Phase</Option>\n              </Select>\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col className='mt-2' xs={24} sm={24} md={24} lg={24}>\n            <Form.Item\n              name='remarkUps'\n              label='Remark'\n              hasFeedback\n              rules={[{ message: 'Remark' }]}\n              labelCol={{ xs: 24 }}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default UpsDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\repeater\\Wired-Panel\\WiredPanelDetails.js",["1986"],"import React, {useState} from \"react\";\nimport {Form, Select, Radio, Row, Col, Input, Card} from \"antd\";\n\nconst {Option} = Select;\n\nconst formItemLayout = {\n    labelCol: {span: 6},\n    wrapperCol: {span: 14},\n};\n\nconst WiredPanelDetails = () => {\n    const [checkColor, setRadioColor] = useState(false);\n\n    const onRadioChange = (e) => {\n        if (e.target.value === \"Other\") {\n            setRadioColor(true);\n        } else {\n            setRadioColor(false);\n        }\n    }\n        return (\n        <div>\n            <br></br>\n            <Card title=\"WiredPanel Details\">\n                <Row>\n                    <Col className=\"mr-5 mt-3\" xs={24} sm={24} md={11} lg={11}>\n                        <Form.Item\n                            name=\"asPerTheDrawing\"\n                            label=\"As per the Drawing\"\n                            labelCol={{md: 6, lg: 10}}\n                        >\n                            <Radio.Group>\n                                <Radio className=\"mr-5\" value=\"Yes\">\n                                    Yes\n                                </Radio>\n                                <Radio value=\"No\">No</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"asPerTheSample\"\n                            label=\"As per the Sample\"\n                            labelCol={{md: 6, lg: 10}}\n                        >\n                            <Radio.Group>\n                                <Radio className=\"mr-5\" value=\"Yes\">\n                                    Yes\n                                </Radio>\n                                <Radio value=\"No\">No</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"environment\"\n                            label=\"Environment \"\n                            hasFeedback\n                            rules={[{message: \"-Select Color-\"}]}\n                            labelCol={{md: 6, lg: 10}}\n                        >\n                            <Select placeholder=\"-Select Environment-\">\n                                <Option value=\"Indoor\"> Indoor </Option>\n                                <Option value=\"Outdoor\">Outdoor</Option>\n                                <Option value=\"Coastal Area\">Coastal Area</Option>\n                            </Select>\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"coatingType\"\n                            label=\"Coating Type \"\n                            hasFeedback\n                            rules={[{message: \"-Select Coating-\"}]}\n                            labelCol={{md: 6, lg: 10}}\n                        >\n                            <Select placeholder=\"-Select Color-\">\n                                <Option value=\"Powder\"> Powder </Option>\n                                <Option value=\"Spray Paint\">Spray Paint </Option>\n                                <Option value=\"Primer Powder\">Primer Powder</Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n\n                    <Col className=\"mt-3\" xs={24} sm={24} md={11} lg={11}>\n                        <Form.Item\n                            name=\"asPerTheBOQ\"\n                            label=\"As per the BOQ\"\n                            labelCol={{md: 6, lg: 11}}\n                        >\n                            <Radio.Group>\n                                <Radio className=\"mr-5\" value=\"Yes\">\n                                    Yes\n                                </Radio>\n                                <Radio value=\"No\">No</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"brackets\"\n                            label=\"Brackets\"\n                            labelCol={{md: 6, lg: 11}}\n                        >\n                            <Radio.Group>\n                                <Radio className=\"mr-5\" value=\"Yes\">\n                                    Yes\n                                </Radio>\n                                <Radio value=\"No\">No</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"coverPlate\"\n                            label=\"Cover Plate  \"\n                            hasFeedback\n                            rules={[{message: \"-Select Cover Plate-\"}]}\n                            labelCol={{md: 6, lg: 11}}\n                        >\n                            <Select placeholder=\"-Select Color-\">\n                                <Option value=\"Indoor\"> No </Option>\n                                <Option value=\"Outdoor\">Full</Option>\n                                <Option value=\"Coastal Area\">Open</Option>\n                            </Select>\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"mountingMethod\"\n                            label=\"Mounting Method  \"\n                            hasFeedback\n                            rules={[{message: \"-Select Color-\"}]}\n                            labelCol={{md: 6, lg: 11}}\n                        >\n                            <Select placeholder=\"-Select Mounting Method-\">\n                                <Option value=\"Surface\">Surface</Option>\n                                <Option value=\"Sunk\">Sunk</Option>\n                                <Option value=\"Free Solution\">Free Solution</Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xs={12} sm={12} md={6} lg={8}>\n                        <Form.Item name=\"color\" label=\"Color\" labelCol={{ md: 5, lg: 8 }}>\n                            <Radio.Group checked={checkColor} onChange={onRadioChange}>\n                                <Radio className=\"mr-5\" value=\"RAL-7022\">\n                                    RAL-7022\n                                </Radio>\n                                <Radio value=\"Other\">Other</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                    </Col>\n                    <Col xs={12} sm={12} md={6} lg={6}>\n                        <Form.Item\n                            name=\"OtherColor\"\n                            label=\"Other\"\n                            hidden={!checkColor}\n                            labelCol={{ md: 4, lg: 12 }}\n                            hasFeedback\n                            rules={[{ message: \"Other\" }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xs={24} sm={24} md={24} lg={24}>\n                        <Form.Item\n                            name=\"remarkWP\"\n                            label=\"Remark\n              \"\n                            className=\"mr-3\"\n                            hasFeedback\n                            rules={[{message: \"Remark\"}]}\n                            labelCol={{md: 4, lg: 5}}\n                        >\n                            <Input.TextArea/>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Card>\n        </div>\n    );\n};\n\nexport default WiredPanelDetails;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\POUpload\\POUploadMain.js",["1987","1988","1989","1990","1991","1992"],"import React, { useEffect } from 'react';\nimport Header from './Header';\nimport { Col, Row, PageHeader, Button } from 'antd';\nimport { useHistory, useParams } from 'react-router-dom';\nimport SideCards from './SideCards';\nimport POUploadForm from './POUploadForm';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n  quotationListLoadDataByOne,\n  customerValidationLoad,\n} from '../redux/actions/quotationListAction';\n\nconst POUploadMain = (props) => {\n  const {\n    quotationCurrentData,\n    quotationListLoadDataByOne,\n    customerValidationData,\n    customerValidationLoading,\n  } = props;\n  let { id } = useParams();\n\n  useEffect(() => {\n    quotationListLoadDataByOne(id);\n  }, []);\n  return (\n    <>\n      <Header quotationCurrentData={quotationCurrentData} />\n      <Row gutter={16} className='mt-3'>\n        <Col xs={24} sm={8} md={8}>\n          <SideCards\n            quotationCurrentData={quotationCurrentData}\n            customerValidationData={customerValidationData}\n            customerValidationLoading={customerValidationLoading}\n          />\n        </Col>\n        <Col xs={24} sm={24} md={16}>\n          <POUploadForm\n            quotationCurrentData={quotationCurrentData}\n            customerValidationData={customerValidationData}\n            customerValidationLoading={customerValidationLoading}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nPOUploadMain.prototype = {\n  quotationCurrentData: PropTypes.object.isRequired,\n  quotationListLoadDataByOne: PropTypes.func.isRequired,\n  customerValidationLoading: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  quotationCurrentData: state.quotationList.current,\n  customerValidationData: state.quotationList.customerValidationData,\n  customerValidationLoading: state.quotationList.loadingCVData,\n});\n\nexport default connect(mapStateToProps, {\n  quotationListLoadDataByOne,\n})(POUploadMain);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalList\\QuotationApprovalListMain.js",["1993"],"import React, { Fragment, useState } from \"react\";\nimport {\n  PageHeader,\n  Button,\n  Form,\n  Row,\n  Col,\n  Input,\n  Select,\n  Drawer,\n  DatePicker,\n} from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nimport AppBreadcrumb from \"components/layout-components/AppBreadcrumb\";\nimport QuotaionApprovalList from \"./QuotaionApprovalList\";\n\nconst QuotaionApprovalListFilter = () => {\n  const [form1] = Form.useForm();\n  const [form2] = Form.useForm();\n\n  const { RangePicker } = DatePicker;\n\n  const [visiable, setVisiable] = useState(false);\n\n  const onChange = (date, dateString) => {\n    console.log(date, dateString);\n  };\n  const onClose = () => {\n    setVisiable(false);\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Form form={form1}>\n          <Row gutter={10}>\n            <Col xs={24} sm={24} md={12} lg={6}>\n              <Form.Item>\n                <Input.Search placeholder=\"Search\" />\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={6}>\n              <Form.Item>\n                <Input.Search placeholder=\"Search Customer\" />\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={6}>\n              <Form.Item>\n                <Select placeholder=\"Quotation No\">\n                  <Select.Option value=\"Pubudu\">Pubudu</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col xs={12} sm={12} lg={3}>\n              <Button\n                style={{ width: \"100%\" }}\n                onClick={() => setVisiable(!visiable)}\n              >\n                More filter\n              </Button>\n            </Col>\n            <Col xs={12} sm={12} lg={3}>\n              <Button style={{ width: \"100%\" }} icon={<SearchOutlined />}>\n                Search\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n\n      <Drawer\n        visible={visiable}\n        onClose={onClose}\n        placement=\"right\"\n        closable={false}\n        title=\"Filter\"\n        drawerStyle={{ backgroundColor: \"#FAFAFB\" }}\n        footer={\n          <Row justify=\"space-between\">\n            <Col lg={12}>\n              <Button onClick={onClose}>Cancle</Button>\n            </Col>\n            <Col lg={12}>\n              <Button type=\"primary\" icon={<SearchOutlined />}>\n                Search\n              </Button>\n            </Col>\n          </Row>\n        }\n      >\n        <Form form={form2} name={\"filter-lead\"}>\n          <Row>\n            <Col xs={24} sm={24} md={24} lg={24}>\n              <Form.Item>\n                <Select placeholder=\"Status\">\n                  <Select.Option value=\"kasun\">--Kasun--</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={24}>\n              <Form.Item>\n                <RangePicker />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Drawer>\n    </Fragment>\n  );\n};\n\nconst QuotationApprovalListMain = () => {\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"Quotation Approval List\"\n        subTitle={<AppBreadcrumb />}\n      />\n      <div>\n        <QuotaionApprovalListFilter />\n        <div className=\"mt-3\">\n          <QuotaionApprovalList />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default QuotationApprovalListMain;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationDetails\\QuotationDetailsMain.js",["1994","1995","1996"],"import { PageHeader, Col, Card, Row, Form, Table } from 'antd';\nimport React, { useState } from 'react';\nimport { Fragment } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport SideCards from './SideCards';\nimport NavBar from './NavBar';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { quotationListLoadDataByOne } from '../redux/actions/quotationListAction';\nimport { useEffect } from 'react';\nimport numeral from 'numeral';\n\nconst QuotationDetailsMain = (props) => {\n  const { quotationCurrentData, quotationListLoadDataByOne } = props;\n  let history = useHistory();\n  let { id } = useParams();\n\n  useEffect(() => {\n    quotationListLoadDataByOne(id);\n  }, []);\n\n  const [form] = Form.useForm();\n\n  const columns = [\n    {\n      title: '#',\n      dataIndex: 'no',\n      render: (_, record, index) => <p>{index + 1}</p>,\n    },\n    {\n      title: 'Product',\n      dataIndex: 'product',\n      render: (_, record) => <p>{record.productNo}</p>,\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      render: (_, record) => <p>{record.quantity}</p>,\n    },\n    {\n      title: 'Additional %',\n      dataIndex: 'additional',\n      render: (_, record) => <p>{record.additional}</p>,\n    },\n\n    {\n      title: 'Max / UDP',\n      dataIndex: 'max',\n      render: (_, record) => (\n        <p>\n          {record.max} / {record.udp}\n        </p>\n      ),\n    },\n\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      render: (_, record) => <p>{numeral(record.price).format('0,00.00')}</p>,\n    },\n\n    {\n      title: 'Total',\n      dataIndex: 'total',\n      render: (_, record) => <p>{numeral(record.total).format('0,00.00')}</p>,\n    },\n  ];\n\n  return (\n    <div>\n      <NavBar quotationCurrentData={quotationCurrentData} />\n      <br></br>\n      <div>\n        <Row gutter={16}>\n          <Col xs={24} sm={8} md={8}>\n            <SideCards quotationCurrentData={quotationCurrentData} />\n          </Col>\n\n          <Col xs={24} sm={24} md={16}>\n            <div>\n              <PageHeader\n                className='pt-0'\n                ghost={true}\n                title='Quotation Details'\n              />\n            </div>\n            <Card>\n              <Fragment>\n                <div className='container'>\n                  <Card bordered={false} style={{ width: '100%' }}>\n                    <Form form={form} labelCol={{ lg: 24 }} labelAlign='left'>\n                      <Row gutter={16}>\n                        <Col xs={24} lg={24}>\n                          <Table\n                            rowKey='id'\n                            columns={columns}\n                            dataSource={\n                              quotationCurrentData.qutationDetailList &&\n                              quotationCurrentData.qutationDetailList\n                            }\n                            pagination={false}\n                            // scroll={{ x: 800, y: 200 }}\n                          />\n                        </Col>\n                      </Row>\n\n                      <Row className='mt-5' justify='space-between'>\n                        <Col className='mr-4' xs={24} sm={24} md={16} lg={16}>\n                          <p>\n                            {quotationCurrentData.note &&\n                              quotationCurrentData.note}\n                          </p>\n                        </Col>\n                        <Col>\n                          <Row className='ml-auto' justify='end'>\n                            <Col>\n                              <p style={{ textAlign: 'right' }}>\n                                Amount :{' '}\n                                {quotationCurrentData.amount &&\n                                  numeral(quotationCurrentData.amount).format(\n                                    '0,00.00'\n                                  )}\n                              </p>\n\n                              <p style={{ textAlign: 'right' }}>\n                                Discount :{' '}\n                                {quotationCurrentData.discount &&\n                                  numeral(quotationCurrentData.discount).format(\n                                    '0,00.00'\n                                  )}\n                              </p>\n\n                              <p style={{ textAlign: 'right' }}>\n                                Vat(8%) :{' '}\n                                {quotationCurrentData.vat &&\n                                  numeral(quotationCurrentData.vat).format(\n                                    '0,00.00'\n                                  )}\n                              </p>\n                            </Col>\n                          </Row>\n                        </Col>\n                      </Row>\n                      <Row className='mt-3' justify='end'>\n                        <Col>\n                          <h3>\n                            Total Amount :{' '}\n                            {quotationCurrentData.totalAmount &&\n                              numeral(quotationCurrentData.totalAmount).format(\n                                '0,00.00'\n                              )}\n                          </h3>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </Card>\n                </div>\n              </Fragment>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nQuotationDetailsMain.prototype = {\n  quotationCurrentData: PropTypes.object.isRequired,\n  quotationListLoadDataByOne: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  quotationCurrentData: state.quotationList.current,\n});\n\nexport default connect(mapStateToProps, { quotationListLoadDataByOne })(\n  QuotationDetailsMain\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationList\\QuotationListMain.js",["1997"],"import React, { Fragment, useState } from \"react\";\nimport {\n  PageHeader,\n  Button,\n  Form,\n  Row,\n  Col,\n  Input,\n  Select,\n  Drawer,\n  Switch,\n  DatePicker,\n} from \"antd\";\nimport { PlusOutlined, SearchOutlined, UserOutlined } from \"@ant-design/icons\";\n\nimport AppBreadcrumb from \"components/layout-components/AppBreadcrumb\";\nimport QuotationList from \"./QuotationList\";\nimport { useHistory } from \"react-router-dom\";\n\nconst QuotaionListFilter = () => {\n  const [form1] = Form.useForm();\n  const [form2] = Form.useForm();\n\n  const { RangePicker } = DatePicker;\n\n  const [visiable, setVisiable] = useState(false);\n\n  const onChange = (date, dateString) => {\n    console.log(date, dateString);\n  };\n  const onClose = () => {\n    setVisiable(false);\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Form form={form1}>\n          <Row gutter={10}>\n            <Col xs={24} sm={24} md={12} lg={6}>\n              <Form.Item>\n                <Input.Search placeholder=\"Search\" />\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={6}>\n              <Form.Item>\n                <Input.Search placeholder=\"Search Customer\" />\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={6}>\n              <Form.Item>\n                <Select placeholder=\"Action By\">\n                  <Select.Option value=\"Pubudu\">Pubudu</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col xs={12} sm={12} lg={{ span: 3 }}>\n              <Button\n                style={{ width: \"100%\" }}\n                onClick={() => setVisiable(!visiable)}\n              >\n                More filter\n              </Button>\n            </Col>\n            <Col xs={12} sm={12} lg={{ span: 3 }}>\n              <Button style={{ width: \"100%\" }} icon={<SearchOutlined />}>\n                Search\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n\n      <Drawer\n        visible={visiable}\n        onClose={onClose}\n        placement=\"right\"\n        closable={false}\n        title=\"Filter\"\n        drawerStyle={{ backgroundColor: \"#FAFAFB\" }}\n        footer={\n          <Row justify=\"space-between\">\n            <Col lg={12}>\n              <Button onClick={onClose}>Cancle</Button>\n            </Col>\n            <Col lg={12}>\n              <Button type=\"primary\" icon={<SearchOutlined />}>\n                Search\n              </Button>\n            </Col>\n          </Row>\n        }\n      >\n        <Form form={form2} name={\"filter-lead\"}>\n          <Row>\n            <Col lg={24}>\n              <Form.Item>\n                <Select placeholder=\"Status\">\n                  <Select.Option value=\"kasun\">--Kasun--</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={24}>\n              <Form.Item>\n                <RangePicker />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={10} justify=\"space-between\" align=\"middle\">\n            <Col>\n              <span className=\"mr-3\">\n                <UserOutlined />\n              </span>\n              <label htmlFor=\"assignToMe\">Archive</label>\n            </Col>\n            <Col offset={3}>\n              <Form.Item style={{ marginBottom: 0 }}>\n                <Switch size=\"small\" />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Drawer>\n    </Fragment>\n  );\n};\n\nconst QuotationListMain = () => {\n  let history = useHistory();\n\n  const onAddQuotation = () => {\n    history.push(\"/app/quotation/list/create\");\n  };\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"Quotation List\"\n        subTitle={<AppBreadcrumb />}\n        extra={[\n          <Button\n            onClick={onAddQuotation}\n            type=\"primary\"\n            className=\"ml-2\"\n            shape=\"round\"\n            style={{ width: \"41px\", padding: \"0\" }}\n          >\n            <PlusOutlined />\n          </Button>,\n        ]}\n      />\n      <div>\n        <QuotaionListFilter />\n        <div className=\"mt-3\">\n          <QuotationList />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default QuotationListMain;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\EditLead.js",["1998","1999","2000","2001","2002","2003"],"import {\n  Button,\n  Card,\n  Col,\n  Form,\n  Input,\n  PageHeader,\n  Row,\n  Select,\n  message,\n  Popover,\n} from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\nimport React, { useEffect, useState } from 'react';\nimport { Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport GoogleMap from 'google-map-react';\nimport { connect } from 'react-redux';\nimport { loadTodoDataAll } from '../../todos/redux/action/todoAction';\nimport { loadTodoType } from '../../todos/redux/action/TodoTypeAction';\nimport { loadProjectType } from '../redux/actions/projectTypeAction';\nimport { loadCustomerList } from '../../quotation/QuotationList/redux/actions/quotationCreateAction';\nimport PropTypes from 'prop-types';\nimport { maskCurrency } from './utils';\n\nimport LocationPicker from '../map/LocationPicker';\nimport { updateLead } from '../redux/actions/leadListAction';\n\nconst rules = {\n  projectName: [\n    {\n      required: true,\n      message: 'Please Enter Project Name.',\n    },\n  ],\n  todoName: [\n    {\n      required: true,\n      message: 'Please Select Todo Name.',\n    },\n  ],\n  todoType: [\n    {\n      required: true,\n      message: 'Please Select Todo Type.',\n    },\n  ],\n  contactNo: [\n    {\n      required: true,\n      message: 'Plese Enter Contact No',\n    },\n  ],\n  email: [\n    {\n      pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n      message: 'Invalid Email',\n    },\n  ],\n};\n\nconst EditLead = (props) => {\n  const {\n    loadTodoType,\n    loadTodoDataAll,\n    todoName,\n    todoType,\n    loadCustomerList,\n    customerList,\n    customerLoad,\n    currentData,\n    updateLead,\n    loadProjectType,\n    projectType,\n  } = props;\n  let history = useHistory();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    loadTodoType();\n    loadTodoDataAll();\n    loadCustomerList();\n    loadProjectType();\n  }, []);\n\n  const onCancle = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n  const [loc, setLoc] = useState();\n  const locationHandler = async (location) => {\n    const { lat, lng } = location;\n    const locate = lat + ',' + lng;\n    setLoc(locate);\n  };\n  useEffect(() => {\n    if (currentData) {\n      form.setFieldsValue(currentData);\n    } else {\n      history.push('/app/lead/list');\n    }\n    return () => {\n      form.setFieldsValue();\n    };\n  }, [form, currentData]);\n\n  // useEffect(() => {\n  //   form.setFieldsValue({ geoLocation: loc });\n  // }, [loc]);\n\n  const content = (\n    <div style={{ width: 400 }}>\n      <LocationPicker location={locationHandler} />\n    </div>\n  );\n\n  const onSubmit = (e) => {\n    form.validateFields().then((values) => {\n      const {\n        projectName,\n        projecttypename,\n        project_value,\n        customer,\n        remark,\n        todoname,\n        todotype,\n        contact,\n        email,\n        geoLocation,\n      } = values;\n      const editLead = {\n        id: currentData.id,\n        projectName: projectName,\n        project_value: project_value,\n        projecttypename: projecttypename,\n        customer: customer,\n        remark: remark,\n        todoname: todoname,\n        todotype: todotype,\n        contact: contact,\n        email: email,\n        geoLocation: geoLocation,\n        contributorList: currentData.contributorList,\n      };\n      try {\n        updateLead(editLead);\n        console.log(editLead);\n        message.success('Data Added');\n        history.push('/app/lead/list');\n      } catch (err) {\n        message.error(err);\n      }\n    });\n  };\n  return (\n    <Fragment>\n      <PageHeader\n        title='Edit Lead'\n        onBack={() => history.goBack()}\n      ></PageHeader>\n      <div className='container'>\n        <Card bordered={false} style={{ width: '100%' }}>\n          <Form\n            form={form}\n            labelCol={{ lg: 24 }}\n            labelAlign='left'\n            // initialValues={currentData}\n          >\n            <Row gutter={16}>\n              <Col xs={24} lg={12}>\n                <Form.Item\n                  className='mb-1'\n                  label='Project Name'\n                  name='projectName'\n                  rules={rules.projectName}\n                >\n                  <Input size='small' placeholder='Project Name' />\n                </Form.Item>\n                <Row gutter={8}>\n                  <Col s={24} lg={12}>\n                    <Form.Item\n                      className='mb-1'\n                      label='Project Type'\n                      name='projecttypename'\n                    >\n                      <Select\n                        placeholder='--Select Project Type--'\n                        size='small'\n                      >\n                        {projectType &&\n                          projectType.map((proType) => (\n                            <Select.Option\n                              key={proType.id}\n                              value={proType.projectTypeName}\n                            >\n                              {proType.projectTypeName}\n                            </Select.Option>\n                          ))}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col s={24} lg={12}>\n                    <Form.Item\n                      className='mb-1'\n                      label='Project Value'\n                      name='project_value'\n                    >\n                      <Input size='small' />\n                    </Form.Item>\n                  </Col>\n                </Row>\n                <Form.Item className='mb-1' label='Customer' name='customer'>\n                  <Select\n                    showSearch\n                    size='small'\n                    placeholder='--Select Customer Name--'\n                    loading={customerLoad}\n                  >\n                    {customerList &&\n                      customerList?.map((cusName) => (\n                        <Select.Option\n                          key={cusName.uuid}\n                          value={cusName.company?.name}\n                        >\n                          {cusName.company?.name}\n                        </Select.Option>\n                      ))}\n                  </Select>\n                </Form.Item>\n                <Form.Item className='mb-1' label='Remark' name='remark'>\n                  <Input.TextArea rows={7} size='small' />\n                </Form.Item>\n              </Col>\n              <Col xs={24} lg={12}>\n                <Form.Item\n                  className='mb-1'\n                  label='Todo Name'\n                  name='todoname'\n                  rules={rules.todoName}\n                >\n                  <Select\n                    showSearch\n                    size='small'\n                    placeholder='-Select Todo-'\n                  >\n                    {todoName &&\n                      todoName.map((influName) => (\n                        <Select.Option\n                          key={influName.id}\n                          value={influName.todoname}\n                        >\n                          {influName.todoname}\n                        </Select.Option>\n                      ))}\n                  </Select>\n                </Form.Item>\n                <Form.Item\n                  className='mb-1'\n                  label='Todo Type'\n                  name='todotype'\n                  rules={rules.todoType}\n                >\n                  <Select placeholder='--Select Contact Type--' size='small'>\n                    {todoType &&\n                      todoType.map((influType) => (\n                        <Select.Option\n                          key={influType.id}\n                          value={influType.category_name}\n                        >\n                          {influType.category_name}\n                        </Select.Option>\n                      ))}\n                  </Select>\n                </Form.Item>\n\n                <Form.Item\n                  className='mb-2'\n                  label='Contact No'\n                  name='contact'\n                  rules={rules.contactNo}\n                >\n                  <Input size='small' maxLength={13} minLength={13} />\n                </Form.Item>\n\n                <Form.Item\n                  className='mb-2'\n                  label='Email'\n                  name='email'\n                  rules={rules.email}\n                >\n                  <Input size='small' type='email' />\n                </Form.Item>\n\n                <Popover\n                  style={{ width: '500px' }}\n                  content={content}\n                  trigger='click'\n                  placement='top'\n                >\n                  <Form.Item\n                    className='mb-1'\n                    label='Search Location'\n                    name='geoLocation'\n                    labelCol={{ lg: 0 }}\n                  >\n                    <Input\n                      disabled\n                      size='small'\n                      prefix={<SearchOutlined />}\n                      placeholder='Search'\n                    />\n                  </Form.Item>\n                </Popover>\n\n                <Row className='mt-3' justify='end'>\n                  <Col>\n                    <Button\n                      className='mr-1'\n                      style={{\n                        width: 100,\n                        borderColor: '#3e82f7',\n                        color: '#3e82f7',\n                      }}\n                      onClick={onCancle}\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      type='primary'\n                      htmlType='submit'\n                      style={{ width: 100 }}\n                      onClick={onSubmit}\n                    >\n                      Edit\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Form>\n        </Card>\n      </div>\n    </Fragment>\n  );\n};\n\nEditLead.prototype = {\n  todoName: PropTypes.object.isRequired,\n  todoType: PropTypes.object.isRequired,\n  loadTodoDataAll: PropTypes.func.isRequired,\n  loadTodoType: PropTypes.func.isRequired,\n  currentData: PropTypes.object.isRequired,\n  updateLead: PropTypes.func.isRequired,\n  loadCustomerList: PropTypes.func.isRequired,\n  customerList: PropTypes.object.isRequired,\n  customerLoad: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  todoName: state.todo.data,\n  todoType: state.todoType.todoTypeData,\n  currentData: state.leadList.current,\n  projectType: state.projectTypesList.projectTypeData,\n  loadProjectType: PropTypes.func.isRequired,\n  customerList: state.quotationCreate.customerList,\n  customerLoad: state.quotationCreate.customerListLoading,\n});\n\nexport default connect(mapStateToProps, {\n  loadTodoDataAll,\n  loadTodoType,\n  updateLead,\n  loadProjectType,\n  loadCustomerList,\n})(EditLead);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\AddLead.js",["2004","2005","2006","2007","2008","2009","2010","2011"],"import {\n  Button,\n  Card,\n  Col,\n  Form,\n  Input,\n  message,\n  PageHeader,\n  Row,\n  Select,\n  Popover,\n} from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport AppBreadcrumb from \"components/layout-components/AppBreadcrumb\";\nimport React, { useEffect, useState } from \"react\";\nimport { Fragment } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport GoogleMap from \"google-map-react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport LocationPicker from \"../map/LocationPicker\";\n\n//actions\nimport { loadTodoDataAll } from \"../../todos/redux/action/todoAction\";\nimport { loadTodoType } from \"../../todos/redux/action/TodoTypeAction\";\nimport { loadProjectType } from \"../redux/actions/projectTypeAction\";\nimport { loadCustomerList } from \"../../quotation/QuotationList/redux/actions/quotationCreateAction\";\nimport { maskCurrency } from \"./utils\";\n\nimport { addLead, leadError } from \"../redux/actions/leadListAction\";\nimport { value } from \"numeral\";\n\nconst rules = {\n  projectName: [\n    {\n      required: true,\n      message: \"Please Enter Project Name.\",\n    },\n  ],\n  todoName: [\n    {\n      required: true,\n      message: \"Please Select Todo Name.\",\n    },\n  ],\n  todoType: [\n    {\n      required: true,\n      message: \"Please Select Todo Type.\",\n    },\n  ],\n  contactNo: [\n    {\n      required: true,\n      message: \"Plese Enter Contact No\",\n    },\n  ],\n  email: [\n    {\n      pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n      message: \"Invalid Email\",\n    },\n  ],\n};\n\nconst AddLead = (props) => {\n  const {\n    loadTodoType,\n    loadTodoDataAll,\n    todoName,\n    todoType,\n    loadCustomerList,\n    customerList,\n    customerLoad,\n    leadLisLoading,\n    addLead,\n    loadProjectType,\n    projectType,\n  } = props;\n\n  let history = useHistory();\n\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    loadTodoType();\n    loadTodoDataAll();\n    loadCustomerList();\n    loadProjectType();\n  }, []);\n\n  console.log(customerList);\n  const onCancle = (e) => {\n    e.preventDefault();\n    form.resetFields();\n    history.goBack();\n  };\n\n  const onChangeProjectValue = (value) => {\n    const { setFieldsValue } = form;\n    setTimeout(() => setFieldsValue({ projectValue: maskCurrency(value) }), 1);\n  };\n\n  const [loc, setLoc] = useState();\n\n  const locationHandler = async (location) => {\n    const { lat, lng } = location;\n    const locate = lat + \",\" + lng;\n    setLoc(locate);\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({ loc: loc });\n  }, [loc]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    form.validateFields().then((values) => {\n      const {\n        projectName,\n        projectType,\n        projectValue,\n        customerName,\n        remark,\n        todoName,\n        todoType,\n        contactNo,\n        email,\n        searchLocation,\n        loc,\n      } = values;\n\n      const newLead = {\n        projectName: projectName,\n        project_value: projectValue.replaceAll(\",\", \"\"),\n        projecttypename: projectType,\n        customer: customerName,\n        remark: remark,\n        todoname: todoName,\n        todotype: todoType,\n        contact: \"+94\" + contactNo,\n        email: email,\n        geoLocation: loc,\n      };\n\n      try {\n        addLead(newLead);\n        message.success(\"Data Added\");\n        console.log(newLead);\n        history.push(\"/app/lead/list\");\n      } catch (err) {\n        message.error(\"error\");\n      }\n    });\n  };\n\n  const content = (\n    <div style={{ width: 400 }}>\n      <LocationPicker location={locationHandler} />\n    </div>\n  );\n  const [cus, setCus] = useState({\n    cusda: [],\n    value: undefined,\n  });\n\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"Add Lead\"\n        subTitle={<AppBreadcrumb />}\n        onBack={() => history.goBack()}\n      />\n      <div className=\"container\">\n        <Card bordered={false} style={{ width: \"100%\" }}>\n          <Form form={form} labelCol={{ lg: 24 }} labelAlign=\"left\">\n            <Row gutter={16}>\n              <Col xs={24} lg={12}>\n                <Form.Item\n                  className=\"mb-1\"\n                  label=\"Project Name\"\n                  name=\"projectName\"\n                  rules={rules.projectName}\n                >\n                  <Input size=\"small\" placeholder=\"Project Name\" />\n                </Form.Item>\n\n                <Row gutter={8}>\n                  <Col s={24} lg={12}>\n                    <Form.Item\n                      className=\"mb-1\"\n                      label=\"Project Type\"\n                      name=\"projectType\"\n                    >\n                      <Select\n                        placeholder=\"--Select Project Type--\"\n                        size=\"small\"\n                      >\n                        {projectType &&\n                          projectType.map((proType) => (\n                            <Select.Option\n                              key={proType.id}\n                              value={proType.projectTypeName}\n                            >\n                              {proType.projectTypeName}\n                            </Select.Option>\n                          ))}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col s={24} lg={12}>\n                    <Form.Item\n                      className=\"mb-1\"\n                      label=\"Project Value\"\n                      name=\"projectValue\"\n                    >\n                      <Input\n                        size=\"small\"\n                        onChange={(e) => onChangeProjectValue(e.target.value)}\n                      />\n                    </Form.Item>\n                  </Col>\n                </Row>\n\n                <Form.Item\n                  className=\"mb-1\"\n                  label=\"Customer\"\n                  name=\"customerName\"\n                >\n                  <Select\n                    showSearch\n                    optionFilterProp=\"children\"\n                    size=\"small\"\n                    placeholder=\"--Select Customer Name--\"\n                    loading={customerLoad}\n                  >\n                    {customerList &&\n                      customerList?.map((cusName) => (\n                        <Select.Option\n                          key={cusName.uuid}\n                          value={cusName.company?.name}\n                        >\n                          {cusName.company?.name}\n                        </Select.Option>\n                      ))}\n                  </Select>\n                </Form.Item>\n                <Form.Item className=\"mb-1\" label=\"Remark\" name=\"remark\">\n                  <Input.TextArea rows={7} size=\"small\" />\n                </Form.Item>\n              </Col>\n              <Col xs={24} lg={12}>\n                <Form.Item\n                  className=\"mb-1\"\n                  label=\"Todo Name\"\n                  name=\"todoName\"\n                  rules={rules.todoName}\n                >\n                  <Select\n                    showSearch\n                    size=\"small\"\n                    placeholder=\"-Select Todo-\"\n                  >\n                    {todoName &&\n                      todoName.map((influName) => (\n                        <Select.Option\n                          key={influName.id}\n                          value={influName.todoname}\n                        >\n                          {influName.todoname}\n                        </Select.Option>\n                      ))}\n                  </Select>\n                </Form.Item>\n                <Form.Item\n                  className=\"mb-1\"\n                  label=\"Todo Type\"\n                  name=\"todoType\"\n                  rules={rules.todoType}\n                >\n                  <Select placeholder=\"--Select Contact Type--\" size=\"small\">\n                    {todoType &&\n                      todoType.map((influType) => (\n                        <Select.Option\n                          key={influType.id}\n                          value={influType.category_name}\n                        >\n                          {influType.category_name}\n                        </Select.Option>\n                      ))}\n                  </Select>\n                </Form.Item>\n                <Form.Item\n                  className=\"mb-2\"\n                  label=\"Contact No\"\n                  name=\"contactNo\"\n                  rules={rules.contactNo}\n                >\n                  <Input\n                    size=\"small\"\n                    addonBefore=\"+94\"\n                    pattern=\"07[1,2,5,6,7,8][0-9]+\"\n                    maxLength={10}\n                    minLength={10}\n                  />\n                </Form.Item>\n                <Form.Item\n                  className=\"mb-2\"\n                  label=\"Email\"\n                  name=\"email\"\n                  rules={rules.email}\n                >\n                  <Input size=\"small\" type=\"email\" />\n                </Form.Item>\n                <Popover\n                  style={{ width: \"500px\" }}\n                  content={content}\n                  trigger=\"click\"\n                  placement=\"top\"\n                >\n                  <Form.Item\n                    className=\"mb-1\"\n                    label=\"Search Location\"\n                    name=\"loc\"\n                    labelCol={{ lg: 0 }}\n                  >\n                    <Input\n                      // disabled\n                      size=\"small\"\n                      prefix={<SearchOutlined />}\n                      placeholder=\"Search\"\n                    />\n                  </Form.Item>\n                </Popover>\n\n                <Row className=\"mt-3\" justify=\"end\">\n                  <Col>\n                    <Button\n                      className=\"mr-1\"\n                      style={{\n                        width: 100,\n                        borderColor: \"#3e82f7\",\n                        color: \"#3e82f7\",\n                      }}\n                      onClick={onCancle}\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      loading={leadLisLoading}\n                      type=\"primary\"\n                      style={{ width: 100 }}\n                      onClick={onSubmit}\n                    >\n                      Add\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Form>\n        </Card>\n      </div>\n    </Fragment>\n  );\n};\n\nAddLead.prototype = {\n  todoName: PropTypes.object.isRequired,\n  todoType: PropTypes.object.isRequired,\n  loadTodoDataAll: PropTypes.func.isRequired,\n  loadTodoType: PropTypes.func.isRequired,\n  loadCustomerDataAll: PropTypes.func.isRequired,\n  leadLisLoading: PropTypes.object.isRequired,\n  addLead: PropTypes.func.isRequired,\n  loadProjectType: PropTypes.func.isRequired,\n  loadCustomerList: PropTypes.func.isRequired,\n  customerList: PropTypes.object.isRequired,\n  customerLoad: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  todoName: state.todo.data,\n  todoType: state.todoType.todoTypeData,\n  customerName: state.customer.data,\n  leadLisLoading: state.leadList.loading,\n  projectType: state.projectTypesList.projectTypeData,\n  customerList: state.quotationCreate.customerList,\n  customerLoad: state.quotationCreate.customerListLoading,\n});\n\nexport default connect(mapStateToProps, {\n  loadTodoDataAll,\n  loadTodoType,\n  addLead,\n  loadProjectType,\n  loadCustomerList,\n})(AddLead);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadList.js",["2012","2013","2014","2015","2016"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport Search from \"antd/lib/input/Search\";\nimport {\n  Radio,\n  Button,\n  Row,\n  Col,\n  Pagination,\n  PageHeader,\n  DatePicker,\n  Drawer,\n  Switch,\n  Select,\n  Form,\n  Badge,\n} from \"antd\";\n\nimport { BsGrid1X2 } from \"react-icons/bs\";\nimport {\n  UnorderedListOutlined,\n  PlusOutlined,\n  BarChartOutlined,\n  UserOutlined,\n  LikeTwoTone,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport AppBreadcrumb from \"components/layout-components/AppBreadcrumb\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  leadloaddata,\n  loadFilteredData,\n} from \"../redux/actions/leadListAction\";\nimport PropTypes from \"prop-types\";\n\n//component\n\nimport LeadListItemMain from \"./LeadListItemMain\";\nimport { type } from \"jquery\";\n\nconst VIEW_LIST = \"LIST\";\nconst VIEW_SCRUMBOARD = \"SCRUMBOARD\";\nconst VIEW_GRAPH = \"GRAPH\";\n\nconst LeadListFilter = (props) => {\n  const [form1] = Form.useForm();\n  const [form2] = Form.useForm();\n  const { parentCallback } = props;\n  const [dateRange, setDateRange] = useState();\n\n  const { RangePicker } = DatePicker;\n\n  const onChange = (date, dateString) => {\n    console.log(date, dateString);\n    setDateRange(dateString);\n  };\n  const [visiable, setVisiable] = useState(false);\n\n  const onClose = () => {\n    setVisiable(false);\n  };\n\n  const onSearch = () => {\n    form1.validateFields().then((values) => {\n      const data = {\n        leadName:\n          typeof values.searchText === \"undefined\" ? -1 : values.searchText,\n        start: typeof dateRange === \"undefined\" ? -1 : dateRange[0],\n        end: typeof dateRange === \"undefined\" ? -1 : dateRange[1],\n        contributor:\n          typeof values.contributor === \"undefined\" ? -1 : values.contributor,\n        tag: typeof values.tag === \"undefined\" ? -1 : values.tag,\n      };\n      parentCallback(data);\n    });\n  };\n\n  return (\n    <Fragment>\n      <Form form={form1}>\n        <Row gutter={8}>\n          <Col xs={24} md={18}>\n            <Row gutter={10}>\n              <Col xs={24} md={12}>\n                <Form.Item name=\"searchText\">\n                  <Search placeholder=\"Search\" />\n                </Form.Item>\n              </Col>\n              <Col xs={24} md={12}>\n                <Form.Item name=\"dateRange\">\n                  <RangePicker onChange={onChange} style={{ width: \"100%\" }} />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Col>\n          <Col xs={24} md={6}>\n            <Row gutter={[10, 10]}>\n              <Col xs={24} md={12}>\n                <Button\n                  style={{ width: \"100%\" }}\n                  onClick={() => setVisiable(!visiable)}\n                >\n                  More filter\n                </Button>\n              </Col>\n              <Col xs={24} md={12}>\n                <Button\n                  style={{ width: \"100%\" }}\n                  icon={<SearchOutlined />}\n                  onClick={onSearch}\n                >\n                  Search\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n\n        <Drawer\n          visible={visiable}\n          onClose={onClose}\n          placement=\"right\"\n          closable={false}\n          title=\"Filter\"\n          drawerStyle={{ backgroundColor: \"#FAFAFB\" }}\n          footer={\n            <Row justify=\"space-between\">\n              <Col lg={12}>\n                <Button onClick={onClose}>Cancle</Button>\n              </Col>\n              <Col lg={12}>\n                <Button\n                  type=\"primary\"\n                  icon={<SearchOutlined />}\n                  onClick={onSearch}\n                >\n                  Search\n                </Button>\n              </Col>\n            </Row>\n          }\n        >\n          <h5>Basic</h5>\n          <Row gutter={10} className=\"pt-3\" align=\"middle\">\n            <Col>\n              <span>\n                <UserOutlined\n                  style={{ color: \"#1890FF\", fontSize: 18, marginRight: 10 }}\n                />\n              </span>\n              <label htmlFor=\"assignToMe\">Assigned to me</label>\n            </Col>\n            <Col offset={3}>\n              <Form.Item style={{ marginBottom: 0 }}>\n                <Switch size=\"small\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row className=\"pt-3\">\n            <Col lg={24}>\n              <Form.Item name=\"contributor\">\n                <Select placeholder=\"Contributors\">\n                  <Select.Option value=\"kasun\">--Kasun--</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <span>\n                <LikeTwoTone style={{ fontSize: 18, marginRight: 10 }} />\n              </span>\n              <label htmlFor=\"lead\">Lead</label>\n            </Col>\n          </Row>\n          <Row className=\"pt-3\" gutter={3}>\n            <Form.Item name=\"tag\">\n              <Radio.Group>\n                <Radio.Button value=\"hot\">Hot</Radio.Button>\n                <Radio.Button value=\"cold\">Cold</Radio.Button>\n                <Radio.Button value=\"all\">All</Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n          </Row>\n        </Drawer>\n      </Form>\n    </Fragment>\n  );\n};\n//Lead List main\nconst LeadList = (props) => {\n  let history = useHistory();\n  const [view, setView] = useState(VIEW_LIST);\n  const {\n    leadloaddata,\n    loadFilteredData,\n    leadListData: { leadData, loading, page, total },\n  } = props;\n\n  useEffect(() => {\n    leadloaddata(1);\n  }, []);\n\n  const onChangeProjectView = (e) => {\n    setView(e.target.value);\n  };\n\n  const toAddLead = () => {\n    history.push(\"/app/lead/list/add\");\n  };\n\n  const handleCallback = (childData) => {\n    console.log(childData);\n    loadFilteredData(\n      1,\n      childData.leadName,\n      childData.start,\n      childData.end,\n      childData.contributor,\n      childData.tag\n    );\n  };\n\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"Lead List\"\n        subTitle={<AppBreadcrumb />}\n        extra={[\n          <Radio.Group\n            size=\"middle\"\n            defaultValue={VIEW_LIST}\n            onChange={(e) => onChangeProjectView(e)}\n          >\n            <Radio.Button value={VIEW_SCRUMBOARD}>\n              <BsGrid1X2 style={{ paddingTop: \"1\" }} />\n            </Radio.Button>\n            <Radio.Button value={VIEW_GRAPH} disabled>\n              <BarChartOutlined />\n            </Radio.Button>\n            <Radio.Button value={VIEW_LIST}>\n              <UnorderedListOutlined />\n            </Radio.Button>\n          </Radio.Group>,\n          <Button\n            type=\"primary\"\n            className=\"ml-2\"\n            shape=\"circle\"\n            style={{ width: \"41px\", padding: \"0\" }}\n            onClick={toAddLead}\n          >\n            <PlusOutlined />\n          </Button>,\n        ]}\n      />\n\n      <div>\n        <LeadListFilter parentCallback={handleCallback} />\n      </div>\n\n      <div className={`my-4 ${view === VIEW_LIST ? \"\" : \"container-fluid\"}`}>\n        {view === VIEW_SCRUMBOARD\n          ? history.push(`/app/lead/list/kanban`)\n          : null}\n\n        {view === VIEW_LIST ? (\n          <LeadListItemMain\n            leadloaddata={leadloaddata}\n            leadData={leadData}\n            loading={loading}\n            page={page}\n            total={total}\n          />\n        ) : null}\n      </div>\n    </Fragment>\n  );\n};\n\nLeadList.prototype = {\n  leadListData: PropTypes.object.isRequired,\n  leadloaddata: PropTypes.func.isRequired,\n  loadFilteredData: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  leadListData: state.leadList,\n});\n\nexport default connect(mapStateToProps, { leadloaddata, loadFilteredData })(\n  LeadList\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadDetails.js",["2017","2018"],"import { Col, Row, PageHeader, Button } from \"antd\";\nimport React, { useState } from \"react\";\nimport NavBar from \"./LeadComponents/NavBar\";\nimport SideCards from \"./LeadComponents/SideCards\";\nimport LeadTimeline from \"./LeadDetailsTimeline\";\nimport LeadRecommendation from \"./LeadRecommendation\";\nimport LeadAttachment from \"./LeadAttachment\";\nimport LeadFollowUp from \"./LeadFollowUp\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport { leadLoadDataByOne } from \"../../redux/actions/leadListAction\";\nimport { loadFollowupTypeAll } from \"../../redux/actions/followUpAction\";\n\nconst VIEW_TIMELINE = \"TIMELINE\";\nconst VIEW_RECOMMEND = \"RECOMMEND\";\nconst VIEW_ATTACH = \"ATTACH\";\nconst VIEW_FOLLOWUP = \"FOLLOWUP\";\n\nconst LeadDetails = (props) => {\n  let history = useHistory();\n  let { id } = useParams();\n  const {\n    currentData,\n    leadLoadDataByOne,\n    loadFollowupTypeAll,\n    followUpTypeData,\n    followUpLoading,\n  } = props;\n  const [view, setView] = useState(VIEW_TIMELINE);\n\n  useEffect(() => {\n    leadLoadDataByOne(id);\n    loadFollowupTypeAll();\n  }, []);\n\n  const getTitle = (view) => {\n    if (view === VIEW_TIMELINE) {\n      return \"Lead Details\";\n    } else if (view === VIEW_RECOMMEND) {\n      return \"Add Recommen..\";\n    } else if (view === VIEW_ATTACH) {\n      return \"Add Attachments\";\n    } else if (view === VIEW_FOLLOWUP) {\n      return \"Add Followup\";\n    }\n  };\n  return (\n    <>\n      <NavBar current={currentData && currentData} />\n      <Row gutter={16} className=\"mt-3\">\n        <Col xs={24} sm={8} md={8}>\n          <SideCards current={currentData && currentData} />\n        </Col>\n        <Col xs={24} sm={24} md={16}>\n          <div>\n            <PageHeader\n              title={getTitle(view)}\n              extra={[\n                <Button\n                  size=\"small\"\n                  key=\"1\"\n                  onClick={() => setView(VIEW_TIMELINE)}\n                >\n                  Show Timeline\n                </Button>,\n                <Button\n                  size=\"small\"\n                  key=\"2\"\n                  onClick={() => setView(VIEW_RECOMMEND)}\n                >\n                  + Recommend\n                </Button>,\n                <Button\n                  size=\"small\"\n                  key=\"3\"\n                  onClick={() => setView(VIEW_ATTACH)}\n                >\n                  + Attach\n                </Button>,\n                <Button\n                  size=\"small\"\n                  key=\"4\"\n                  value={VIEW_FOLLOWUP}\n                  onClick={() => setView(VIEW_FOLLOWUP)}\n                  loading={followUpLoading}\n                >\n                  + Followup\n                </Button>,\n              ]}\n            ></PageHeader>\n            {view === VIEW_TIMELINE ? <LeadTimeline current={currentData && currentData}/>:null}\n            {view === VIEW_RECOMMEND ? (\n              <LeadRecommendation leadid={id} setView={setView} />\n            ) : null}\n            {view === VIEW_ATTACH ? (\n              <LeadAttachment leadid={id} setView={setView} />\n            ) : null}\n            {view === VIEW_FOLLOWUP ? (\n              <LeadFollowUp\n                leadid={id}\n                followUpTypeData={followUpTypeData}\n                setView={setView}\n              />\n            ) : null}\n          </div>\n        </Col>\n      </Row>\n    </>\n  );\n};\nLeadDetails.prototype = {\n  currentData: PropTypes.object.isRequired,\n  leadLoadDataByOne: PropTypes.func.isRequired,\n  followUpTypeData: PropTypes.object.isRequired,\n  loadFollowupTypeAll: PropTypes.func.isRequired,\n  followUpLoading: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  currentData: state.leadList.current,\n  followUpTypeData: state.followUp.followupTypes,\n  followUpLoading: state.followUp.loading,\n});\n\nexport default connect(mapStateToProps, {\n  leadLoadDataByOne,\n  loadFollowupTypeAll,\n})(LeadDetails);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\LeadDashboard.js",["2019","2020","2021"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { ScrumboardContext, ScrumboardProvider } from \"./ScrumboardContext\";\nimport Board from \"./Board\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { Button, PageHeader, Radio, Spin, Row } from \"antd\";\nimport {\n  BarChartOutlined,\n  PlusOutlined,\n  UnorderedListOutlined,\n} from \"@ant-design/icons\";\nimport AppBreadcrumb from \"components/layout-components/AppBreadcrumb\";\n\nimport { BsGrid1X2 } from \"react-icons/bs\";\nimport reorder, { reorderQuoteMap } from \"./reoreder\";\nimport ModalForm from \"./ModalForm\";\nimport { modalModeTypes } from \"./utils\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  getKanbanLeadLoading,\n  updateLead,\n  updateLeadStage,\n} from \"../redux/actions/leadListAction\";\nimport PropTypes from \"prop-types\";\nimport { setCurrent } from \"../../customer/redux/actions/customerAction\";\n\nconst ScrumboardWrapper = (props) => {\n  const {\n    ordered,\n    modal,\n    columns,\n    cardData,\n    currentListId,\n    modalMode,\n    updateOrdered,\n    updateColumns,\n    updateModal,\n  } = useContext(ScrumboardContext);\n  const onDragEnd = async (result, cardData) => {\n    if (result.combine) {\n      if (result.type === \"COLUMN\") {\n        const shallow = [...ordered];\n        shallow.splice(result.source.index, 1);\n        updateOrdered(shallow);\n        return;\n      }\n\n      const column = columns[result.source.droppableId];\n      const withQuoteRemoved = [...column];\n      withQuoteRemoved.splice(result.source.index, 1);\n      const newColumns = {\n        ...columns,\n        [result.source.droppableId]: withQuoteRemoved,\n      };\n      updateColumns(newColumns);\n      return;\n    }\n\n    if (!result.destination) {\n      return;\n    }\n\n    const source = result.source;\n    const destination = result.destination;\n\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n\n    if (result.type === \"COLUMN\") {\n      const newOrdered = reorder(ordered, source.index, destination.index);\n      updateOrdered(newOrdered);\n      return;\n    }\n    const data = reorderQuoteMap({\n      quoteMap: columns,\n      source,\n      destination,\n    });\n    updateColumns(data.quoteMap);\n    let updatedLead;\n    if (result.destination.droppableId === \"To Do\") {\n      updatedLead = data.quoteMap[\"To Do\"][result.destination.index];\n    } else if (result.destination.droppableId === \"Processing\") {\n      updatedLead = data.quoteMap[\"Processing\"][result.destination.index];\n    } else if (result.destination.droppableId === \"In Review\") {\n      updatedLead = data.quoteMap[\"In Review\"][result.destination.index];\n    } else {\n      updatedLead = data.quoteMap[\"Done\"][result.destination.index];\n    }\n    //console.log(updatedLead)\n    let stageId = 1;\n    let stageName = \"\";\n    switch (result.destination.droppableId) {\n      case \"To Do\":\n        stageId = 1;\n        stageName = \"To Do\";\n        break;\n      case \"Processing\":\n        stageId = 2;\n        stageName = \"Processing\";\n        break;\n      case \"In Review\":\n        stageId = 3;\n        stageName = \"In Review\";\n        break;\n      case \"Done\":\n        stageId = 4;\n        stageName = \"Done\";\n        break;\n    }\n    updatedLead.stageid = stageId;\n    updatedLead.stagename = stageName;\n    try {\n      await props.updateLeadStage({\n        id: updatedLead.id,\n        stageid: stageId,\n        name: stageName,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onCloseModal = () => {\n    updateModal(false);\n  };\n\n  const onModalSubmit = (values, mode) => {\n    const data = columns;\n    console.log(values);\n    const updatadedCard = data[currentListId].map((elm) => {\n      if (values.id === elm.id) {\n        elm = values;\n      }\n      return elm;\n    });\n    console.log(updatadedCard);\n    data[currentListId] = updatadedCard;\n    updateColumns(data);\n    updateModal(false);\n\n    props.updateLead(values);\n  };\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 1000);\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Row justify='center' align='middle' style={{ height: \"70vh\" }}>\n          <Spin spinning={loading} style={{ opacity: 1 }} size={\"large\"}>\n            <div></div>\n          </Spin>\n        </Row>\n      ) : (\n        <>\n          <DragDropContext onDragEnd={(result) => onDragEnd(result, cardData)}>\n            {props.containerHeight ? (\n              <div className='scrumboard'>\n                <BoardWrapper {...props} />\n              </div>\n            ) : (\n              <BoardWrapper {...props} />\n            )}\n          </DragDropContext>\n          <ModalForm\n            visible={modal}\n            onClose={() => onCloseModal()}\n            onModalSubmit={(values, modalMode) =>\n              onModalSubmit(values, modalMode)\n            }\n            modalMode={modalMode}\n            cardData={cardData}\n            listId={currentListId}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nconst BoardWrapper = ({\n  containerHeight,\n  useClone,\n  isCombineEnabled,\n  withScrollableColumns,\n}) => {\n  const { ordered, columns, updateModal, updateModalMode } = useContext(\n    ScrumboardContext\n  );\n\n  const onAddBoardModal = () => {\n    updateModal(true);\n    updateModalMode(modalModeTypes(2));\n  };\n\n  return (\n    <Droppable\n      droppableId='board'\n      type='COLUMN'\n      direction='horizontal'\n      ignoreContainerClipping={containerHeight}\n      isCombineEnabled={isCombineEnabled}\n    >\n      {(provided) => (\n        <div\n          className='scrumboard'\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {/*   <div className='scrumboard-header'>\n            <div>\n              <h3>Backlog</h3>\n            </div>\n            <div className='text-right'>\n              <div className='d-flex align-items-center'>\n                {memberIds.map((member, i) =>\n                  i < 4 ? (\n                    <AssigneeAvatar key={member} id={member} size={30} chain />\n                  ) : null\n                )}\n                <Avatar className='ml-n2' size={30}>\n                  <span className='text-gray font-weight-semibold font-size-base'>\n                    +9\n                  </span>\n                </Avatar>\n              </div>\n            </div>\n                  </div> */}\n\n          <Scrollbars className='scrumboard-body'>\n            {ordered?.map((key, index) => (\n              <Board\n                key={key}\n                index={index}\n                title={key}\n                contents={columns[key]}\n                isScrollable={withScrollableColumns}\n                isCombineEnabled={isCombineEnabled}\n                useClone={useClone}\n              />\n            ))}\n            {provided.placeholder}\n            {/*\n              <div className='board-column add'>\n                <div className='board-title' onClick={() => onAddBoardModal()}>\n                  <h4 className='mb-0'>\n                    <PlusOutlined />\n                    <span>Add List</span>\n                  </h4>\n                </div>\n              </div>\n            */}\n          </Scrollbars>\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nconst VIEW_LIST = \"LIST\";\nconst VIEW_SCRUMBOARD = \"SCRUMBOARD\";\nconst VIEW_GRAPH = \"GRAPH\";\n\nconst LeadDashboard = (props) => {\n  const { getKanbanLeadLoading } = props;\n\n  useEffect(() => {\n    getKanbanLeadLoading();\n  }, []);\n\n  let history = useHistory();\n  const [view, setView] = useState(VIEW_SCRUMBOARD);\n\n  const onChangeProjectView = (e) => {\n    setView(e.target.value);\n  };\n\n  const toAddLead = () => {\n    history.push(\"/app/lead/list/add\");\n  };\n\n  return (\n    <>\n      <PageHeader\n        title='Lead List'\n        subTitle={<AppBreadcrumb />}\n        extra={[\n          <Radio.Group\n            size='middle'\n            defaultValue={VIEW_SCRUMBOARD}\n            onChange={(e) => onChangeProjectView(e)}\n          >\n            <Radio.Button value={VIEW_SCRUMBOARD}>\n              <BsGrid1X2 style={{ paddingTop: \"1\" }} />\n            </Radio.Button>\n            <Radio.Button value={VIEW_GRAPH} disabled>\n              <BarChartOutlined />\n            </Radio.Button>\n            <Radio.Button value={VIEW_LIST}>\n              <UnorderedListOutlined />\n            </Radio.Button>\n          </Radio.Group>,\n          <Button\n            type='primary'\n            className='ml-2'\n            shape='circle'\n            style={{ width: \"41px\", padding: \"0\" }}\n            onClick={toAddLead}\n          >\n            <PlusOutlined />\n          </Button>,\n        ]}\n      />\n\n      {view === VIEW_LIST ? history.push(\"/app/lead/list\") : null}\n      <ScrumboardProvider>\n        <ScrumboardWrapper {...props} />\n      </ScrumboardProvider>\n    </>\n  );\n};\n\nLeadDashboard.prototype = {\n  columns: PropTypes.object.isRequired,\n  columnLoading: PropTypes.object.isRequired,\n  getKanbanLeadLoading: PropTypes.func.isRequired,\n  updateLeadStage: PropTypes.func.isRequired,\n  updateLead: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => {\n  return {\n    columns: state.leadList.columns,\n    columnLoading: state.leadList.kanbanLoading,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getKanbanLeadLoading,\n  updateLeadStage,\n  setCurrent,\n  updateLead,\n})(LeadDashboard);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-list\\EditCustomer.js",["2022"],"import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Button,\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n  Select,\n  Switch,\n  PageHeader,\n  Popover,\n} from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport FormItem from 'antd/lib/form/FormItem';\nimport TextArea from 'antd/lib/input/TextArea';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport BgImg from '../../../../../assets/images/addcustomerbg.png';\n\nimport { updateCustomer } from '../../redux/actions/customerAction';\nimport LoationPicker from '../../map/LocationPicker';\n\nconst rules = {\n  name: [\n    {\n      required: true,\n      message: 'Please enter customer name.',\n    },\n  ],\n  category: [\n    {\n      required: true,\n      message: 'Please select customer category',\n    },\n  ],\n  innerCircle: [],\n  address: [\n    {\n      required: true,\n      message: 'Please select customer address.',\n    },\n  ],\n  contactNo: [\n    {\n      required: true,\n      message: 'Please enter customer contact number',\n    },\n  ],\n  companyEmail: [\n    {\n      pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n      message: 'Invalid Email',\n    },\n  ],\n  geoLocation: [\n    {\n      required: true,\n      message: 'Please enter customer location',\n    },\n  ],\n  remark: [],\n};\n\nconst EditCustomer = (props) => {\n  const { current, updateCustomer } = props;\n  console.log(current);\n  let history = useHistory();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (current) {\n      form.setFieldsValue(current);\n    }\n  }, [form, current]);\n  const [loc, setLoc] = useState();\n  const locationHandler = async (location) => {\n    const { lat, lng } = location;\n    const locate = lat + ',' + lng;\n    setLoc(locate);\n  };\n  const location = (\n    <div style={{ width: 400 }}>\n      <LoationPicker location={locationHandler} />\n    </div>\n  );\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    form.validateFields().then((values) => {\n      const {\n        customerName,\n        category,\n        innerCircle,\n        address,\n        contact,\n        email,\n        geoLocation,\n        remark,\n      } = values;\n      const updateCustomerNew = {\n        id: current.id,\n        customerName: customerName,\n        category: category,\n        innerCircle: innerCircle,\n        address: address,\n        contact: contact,\n        email: email,\n        geoLocation: geoLocation,\n        remark: remark,\n      };\n      updateCustomer(updateCustomerNew);\n      history.push('/app/customer/list');\n    });\n  };\n  const onCancle = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n  return (\n    <Fragment>\n      <PageHeader title='Edit Customer' />\n      <div className='container'>\n        <Card bordered={false} style={{ width: '100%' }}>\n          <Row justify='center' align='middle'>\n            <Col xs={24} sm={24} md={24} lg={14}>\n              {/* Form */}\n              <Form\n                form={form}\n                labelCol={{ lg: 6, md: 6 }}\n                initialValues={current}\n              >\n                <Form.Item label='Name' name='customerName' rules={rules.name}>\n                  <Input />\n                </Form.Item>\n                <Form.Item>\n                  <Row gutter={16}>\n                    <Col xs={24} md={24} lg={17}>\n                      <FormItem\n                        label='Category'\n                        name='category'\n                        rules={rules.category}\n                        labelCol={{ lg: 8, md: 6 }}\n                      >\n                        <Select placeholder='-Select Type-'>\n                          <Select.Option value='B2B'>B2B</Select.Option>\n                          <Select.Option value='B2G'>B2G</Select.Option>\n                          <Select.Option value='B2C'>B2C</Select.Option>\n                          <Select.Option value='B2T'>B2T</Select.Option>\n                          <Select.Option value='B2E'>B2E</Select.Option>\n                          <Select.Option value='B2X'>B2X</Select.Option>\n                          <Select.Option value='B2I'>B2I</Select.Option>\n                        </Select>\n                      </FormItem>\n                    </Col>\n                    <Col sm={24} md={24} lg={7}>\n                      <Form.Item\n                        label='Inner Circle'\n                        name='innerCircle'\n                        rules={rules.innerCircle}\n                        labelCol={{ md: 6, lg: 15 }}\n                        valuePropName='checked'\n                      >\n                        <Switch size='default' />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                </Form.Item>\n                <Form.Item label='Address' name='address' rules={rules.address}>\n                  <TextArea />\n                </Form.Item>\n\n                <Form.Item\n                  label='Contact Number'\n                  name='contact'\n                  rules={rules.contactNo}\n                  labelCol={{ md: 6 }}\n                >\n                  <Input minLength={13} maxLength={13} />\n                </Form.Item>\n\n                <Form.Item\n                  label='Customer Email'\n                  name='email'\n                  rules={rules.companyEmail}\n                >\n                  <Input type='email' />\n                </Form.Item>\n                <Popover\n                  style={{ width: '500px' }}\n                  content={location}\n                  trigger='click'\n                  placement='bottom'\n                >\n                  <Form.Item\n                    label='Geo Location'\n                    name='geoLocation'\n                    rules={rules.geoLocation}\n                  >\n                    <Input\n                      disabled\n                      placeholder='Click to select location'\n                      type='text'\n                      addonAfter={<SendOutlined rotate={-30} />}\n                    />\n                  </Form.Item>\n                </Popover>\n                <Form.Item label='Remark' name='remark' rules={rules.remark}>\n                  <TextArea />\n                </Form.Item>\n                <Form.Item>\n                  <Row gutter={16} justify='end'>\n                    <Col>\n                      <Button htmlType='button' onClick={onCancle}>\n                        Cancel\n                      </Button>\n                    </Col>\n                    <Col>\n                      <Button\n                        type='primary'\n                        htmlType='submit'\n                        onClick={onSubmit}\n                      >\n                        Edit\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Form>\n\n              {/* Form - end */}\n            </Col>\n\n            <Col\n              className='bgImgOfForm'\n              md={12}\n              lg={10}\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              <img src={BgImg} alt='bgimg' width='300' className='img' />\n            </Col>\n          </Row>\n        </Card>\n      </div>\n    </Fragment>\n  );\n};\n\nEditCustomer.prototype = {\n  current: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  updateCustomer: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  current: state.customer.current,\n  loading: state.customer.loading,\n});\nexport default connect(mapStateToProps, { updateCustomer })(EditCustomer);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-list\\AddCustomer.js",["2023","2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036"],"import React, { Fragment, useState, useEffect } from 'react';\nimport {\n  Button,\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n  Select,\n  Switch,\n  PageHeader,\n  message,\n  Popover,\n  Upload,\n} from 'antd';\nimport { SendOutlined, UploadOutlined } from '@ant-design/icons';\nimport FormItem from 'antd/lib/form/FormItem';\nimport TextArea from 'antd/lib/input/TextArea';\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\nimport DownloadPdf from '../../../../../assets/pdf/Customer Registration Credit Application Form (Amended 2nd Feb 21) PDF.pdf';\nimport BgImg from '../../../../../assets/images/addcustomerbg.png';\nimport { addCustomer } from '../../redux/actions/customerAction';\nimport LoationPicker from '../../map/LocationPicker';\nimport { loadTodoType } from '../../../todos/redux/action/TodoTypeAction';\nimport $ from 'jquery';\n\nconst rules = {\n  name: [\n    {\n      required: true,\n      message: 'Please enter customer name.',\n    },\n  ],\n  category: [\n    {\n      required: true,\n      message: 'Please select customer category',\n    },\n  ],\n  innerCircle: [],\n  address: [\n    {\n      required: true,\n      message: 'Please select customer address.',\n    },\n  ],\n  contactNo: [\n    {\n      required: true,\n      message: 'Please enter customer contact number',\n    },\n  ],\n  companyEmail: [\n    {\n      pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n      message: 'Invalid Email',\n    },\n  ],\n  geoLocation: [\n    {\n      required: true,\n      message: 'Please enter customer location',\n    },\n  ],\n  remark: [],\n};\n\nconst InputComponent = ({ id, name }) => {\n  useEffect(() => {\n    (function (window, document, undefined) {\n      $('.inputfile').each(function () {\n        var $input = $(this),\n          $label = $input.next('label'),\n          labelVal = $label.html();\n\n        $input.on('change', function (e) {\n          var fileName = '';\n\n          if (e.target.value) fileName = e.target.value.split('\\\\').pop();\n\n          if (fileName) $label.find('span').html(fileName);\n          else $label.html(labelVal);\n        });\n\n        // Firefox bug fix\n        $input\n          .on('focus', function () {\n            $input.addClass('has-focus');\n          })\n          .on('blur', function () {\n            $input.removeClass('has-focus');\n          });\n      });\n    })(window, document);\n  }, []);\n\n  return (\n    <div>\n      <div className='box-input-cus'>\n        <input\n          type='file'\n          id={id}\n          name={name}\n          className='inputfile inputfile-3'\n        />\n        <label htmlFor={id}>\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            width='20'\n            height='17'\n            viewBox='0 0 20 17'\n          >\n            <path d='M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z' />\n          </svg>{' '}\n          <span>Choose a file&hellip;</span>\n        </label>\n      </div>\n    </div>\n  );\n};\n\nconst AddCustomer = (props) => {\n  const {\n    customer: { loading },\n    addCustomer,\n    loadTodoType,\n    todoTypeData,\n    todoTypeLoading,\n    showMessage,\n    messages,\n  } = props;\n\n  let history = useHistory();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    loadTodoType();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    form.validateFields().then((values) => {\n      const {\n        name,\n        category,\n        innerCircle,\n        address,\n        contactNo,\n        companyEmail,\n        geoLocation,\n        remark,\n        todoType,\n      } = values;\n\n      const brUpload = document.querySelector('#br');\n      const vatUpload = document.querySelector('#vatcert');\n      const svatUpload = document.querySelector('#svatcert');\n      const form20Upload = document.querySelector('#form20');\n      const bankStatementUpload = document.querySelector('#bankStatement');\n      const nicUpload = document.querySelector('#nic');\n      const creditUpload = document.querySelector('#credit');\n\n      const newCustomer = new FormData();\n      newCustomer.append('customerName', name);\n      // newCustomer.append('inf_type', todoType);\n      newCustomer.append('category', category);\n      newCustomer.append('innerCircle', innerCircle);\n      newCustomer.append('address', address);\n      newCustomer.append('contact', '+94' + contactNo);\n      newCustomer.append('email', companyEmail);\n      newCustomer.append('geoLocation', geoLocation);\n      newCustomer.append('remark', remark);\n      newCustomer.append('type', 'new');\n      newCustomer.append('status', 'pending');\n      newCustomer.append('BR', brUpload.files[0]);\n      newCustomer.append('vatcert', vatUpload.files[0]);\n      newCustomer.append('svatcert', svatUpload.files[0]);\n      newCustomer.append('form', form20Upload.files[0]);\n      newCustomer.append('bank_statement', bankStatementUpload.files[0]);\n      newCustomer.append('nic', nicUpload.files[0]);\n      newCustomer.append('credit', creditUpload.files[0]);\n\n      try {\n        addCustomer(newCustomer);\n        console.log(...newCustomer);\n        history.push('/app/customer/list');\n        message.success('Added');\n        // form.resetFields();\n      } catch (error) {\n        message.error(error);\n      }\n    });\n  };\n\n  const onCancle = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n\n  const [loc, setLoc] = useState();\n\n  useEffect(() => {\n    form.setFieldsValue({ geoLocation: loc });\n  }, [loc]);\n\n  const locationHandler = async (location) => {\n    const { lat, lng } = location;\n    const locate = lat + ',' + lng;\n    setLoc(locate);\n  };\n\n  const location = (\n    <div style={{ width: '250%' }}>\n      <LoationPicker location={locationHandler} />\n    </div>\n  );\n  return (\n    <div>\n      <Row>\n        <Col xs={24}>\n          <PageHeader\n            title='Add Customer'\n            subTitle={<AppBreadcrumb />}\n            onBack={() => history.goBack()}\n            extra={[\n              <a href={DownloadPdf} target='_blank'>\n                <Button\n                  className='btn-sm'\n                  type='primary'\n                  style={{\n                    width: 200,\n                  }}\n                >\n                  Download Application\n                </Button>\n              </a>,\n            ]}\n            display\n          />\n          <Form\n            form={form}\n            className='justify-space-between'\n            labelAlign='left'\n            initialValues={{ innerCircle: false }}\n          >\n            <Row>\n              <Col xs={24}>\n                <Card>\n                  <Row gutter={17}>\n                    <Col xs={24} sm={24} md={12} lg={12}>\n                      <Form.Item\n                        label='Name'\n                        name='name'\n                        labelCol={{ xs: 24 }}\n                        rules={rules.name}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <FormItem\n                        label='Category'\n                        name='category'\n                        labelAlign='left'\n                        rules={rules.category}\n                        labelCol={{ xs: 24 }}\n                      >\n                        <Select placeholder='-Select Type-'>\n                          <Select.Option value='B2B'>B2B</Select.Option>\n                          <Select.Option value='B2G'>B2G</Select.Option>\n                          <Select.Option value='B2C'>B2C</Select.Option>\n                          <Select.Option value='B2T'>B2T</Select.Option>\n                          <Select.Option value='B2E'>B2E</Select.Option>\n                          <Select.Option value='B2X'>B2X</Select.Option>\n                          <Select.Option value='B2I'>B2I</Select.Option>\n                        </Select>\n                      </FormItem>\n\n                      <Form.Item\n                        label='Contact Number'\n                        name='contactNo'\n                        rules={rules.contactNo}\n                        labelCol={{ xs: 24 }}\n                      >\n                        <Input\n                          addonBefore='+94'\n                          minLength={10}\n                          maxLength={10}\n                        />\n                      </Form.Item>\n                      <Popover\n                        style={{ width: '500px' }}\n                        content={location}\n                        trigger='click'\n                        placement='bottom'\n                      >\n                        <Form.Item\n                          label='Geo Location'\n                          name='geoLocation'\n                          labelCol={{ xs: 24 }}\n                          rules={rules.geoLocation}\n                        >\n                          <Input\n                            placeholder='Click to select location'\n                            addonAfter={<SendOutlined rotate={-30} />}\n                          />\n                        </Form.Item>\n                      </Popover>\n                    </Col>\n                    <Col xs={24} sm={24} md={12} lg={12}>\n                      {/* <Form.Item\n                        name='todoType'\n                        label='Type of the Todo'\n                        labelCol={{ xs: 24 }}\n                        rules={rules.todo}\n                      >\n                        <Select\n                          placeholder='-Select Type-'\n                          loading={todoTypeLoading}\n                        >\n                          <Select.Option value=''>-Select Type-</Select.Option>\n                          {todoTypeData &&\n                            todoTypeData.map((influData) => {\n                              return (\n                                <Select.Option\n                                  key={influData.id}\n                                  value={influData.category_name}\n                                >\n                                  {influData.category_name}\n                                </Select.Option>\n                              );\n                            })}\n                        </Select>\n                      </Form.Item> */}\n                      <Form.Item\n                        label='Address'\n                        name='address'\n                        labelCol={{ xs: 24 }}\n                        rules={rules.address}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label='Customer Email'\n                        name='companyEmail'\n                        labelCol={{ xs: 24 }}\n                        rules={rules.companyEmail}\n                      >\n                        <Input type='email' />\n                      </Form.Item>\n                      <Form.Item\n                        label='Inner Circle'\n                        name='innerCircle'\n                        rules={rules.innerCircle}\n                        labelCol={{ xs: 24 }}\n                        valuePropName='checked'\n                      >\n                        <Switch size='default' />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className='mt-2' xs={24} sm={24} md={24} lg={24}>\n                      <Form.Item\n                        label='Remark'\n                        name='remark'\n                        labelCol={{ xs: 24 }}\n                        rules={rules.remark}\n                      >\n                        <TextArea />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                </Card>\n                <Col xs={24}>\n                  <Card title='File(s) Attachment'>\n                    <Card>\n                      <Row>\n                        <Col xs={24} sm={24} md={6} lg={6}>\n                          <Form.Item label='BR' labelCol={{ xs: 24 }}>\n                            <InputComponent name='br' id='br' />\n                          </Form.Item>\n\n                          <Form.Item\n                            label='VAT Certificate'\n                            labelCol={{ xs: 24 }}\n                          >\n                            <InputComponent name='vat' id='vatcert' />\n                          </Form.Item>\n                        </Col>\n\n                        <Col xs={24} sm={24} md={6} lg={6}>\n                          <Form.Item\n                            label='SVAT Certificate'\n                            labelCol={{ xs: 24 }}\n                          >\n                            <InputComponent id='svatcert' name='svat' />\n                          </Form.Item>\n\n                          <Form.Item label='Form 20' labelCol={{ xs: 24 }}>\n                            <InputComponent id='form20' name='form20' />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={24} sm={24} md={6} lg={6}>\n                          <Form.Item\n                            label='Bank Statement'\n                            labelCol={{ xs: 24 }}\n                          >\n                            <InputComponent\n                              id='bankStatement'\n                              name='bankStatement'\n                            />\n                          </Form.Item>\n\n                          <Form.Item label='NIC' labelCol={{ xs: 24 }}>\n                            <InputComponent id='nic' name='nic' />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={24} sm={24} md={6} lg={6}>\n                          <Form.Item\n                            label='Credit Application'\n                            labelCol={{ xs: 24 }}\n                          >\n                            <InputComponent id='credit' name='credit' />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Card>\n                  </Card>\n                </Col>\n                <Row gutter={16} justify='end'>\n                  <Col>\n                    <Button htmlType='button' size='large' onClick={onCancle}>\n                      Cancel\n                    </Button>\n                  </Col>\n\n                  <Col>\n                    <Button\n                      type='primary'\n                      htmlType='submit'\n                      size='large'\n                      onClick={onSubmit}\n                      loading={loading}\n                    >\n                      Add\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nAddCustomer.prototype = {\n  customer: PropTypes.object.isRequired,\n  addCustomer: PropTypes.func.isRequired,\n  todoTypeData: PropTypes.object.isRequired,\n  todoTypeLoading: PropTypes.object.isRequired,\n  loadTodoType: PropTypes.func.isRequired,\n  showMessage: PropTypes.object.isRequired,\n  messages: PropTypes.string.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  customer: state.customer,\n  todoTypeData: state.todoType.todoTypeData,\n  todoTypeLoading: state.todoType.todoTypeLoading,\n  showMessage: state.customer.showMessage,\n  messages: state.customer.message,\n});\nexport default connect(mapStateToProps, { addCustomer, loadTodoType })(\n  AddCustomer\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\CustomerMain.js",["2037"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { Radio, Button, PageHeader, Row, Col, Select, Form } from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport { BsGrid1X2 } from \"react-icons/bs\";\nimport { UnorderedListOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport AppBreadcrumb from \"components/layout-components/AppBreadcrumb\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n//components\nimport CustomerList from \"./customer-list/CustomerList\";\nimport CustomerKanban from \"./customer-kanban/CustomerKanban\";\n\nimport { loaddata, loadFilteredData } from \"../redux/actions/customerAction\";\nimport Flex from \"components/shared-components/Flex\";\n\nconst VIEW_LIST = \"LIST\";\nconst VIEW_SCRUMBOARD = \"SCRUMBOARD\";\nconst ContectFilterGroup = (props) => {\n  const [filterForm] = Form.useForm();\n  const { parentCallback } = props;\n\n  const onFilter = () => {\n    filterForm.validateFields().then((values) => {\n      console.log(values);\n      const data = {\n        category: typeof values.category === \"undefined\" ? -1 : values.category,\n        customerType: typeof values.type === \"undefined\" ? -1 : values.type,\n        customerName:\n          typeof values.searchText === \"undefined\" ? -1 : values.searchText,\n      };\n      parentCallback(data);\n    });\n  };\n\n  return (\n    <Form form={filterForm}>\n      <Row gutter={8}>\n        <Col xs={24} md={21}>\n          <Row gutter={10}>\n            <Col xs={24} md={8}>\n              <Form.Item name=\"searchText\">\n                <Search placeholder=\"Search\" />\n              </Form.Item>\n            </Col>\n            <Col xs={24} md={8}>\n              <Form.Item name=\"category\">\n                <Select placeholder=\"Category\" style={{ width: \"100%\" }}>\n                  <Select.Option value=\"B2B\">B2B</Select.Option>\n                  <Select.Option value=\"B2G\">B2G</Select.Option>\n                  <Select.Option value=\"B2C\">B2C</Select.Option>\n                  <Select.Option value=\"B2T\">B2T</Select.Option>\n                  <Select.Option value=\"B2E\">B2E</Select.Option>\n                  <Select.Option value=\"B2X\">B2X</Select.Option>\n                  <Select.Option value=\"B2I\">B2I</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col xs={24} md={8}>\n              <Form.Item name=\"type\">\n                <Select placeholder=\"Type\" style={{ width: \"100%\" }}>\n                  <Select.Option value=\"new\">New</Select.Option>\n                  <Select.Option value=\"Existing\">Existing</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col xs={24} md={3}>\n          <Button style={{ width: \"100%\" }} onClick={onFilter}>\n            Search\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nconst CustomerMain = (props) => {\n  let history = useHistory();\n  const [view, setView] = useState(VIEW_LIST);\n\n  const {\n    loaddata,\n    loadFilteredData,\n    customer: { data, page, total, loading },\n  } = props;\n\n  useEffect(() => {\n    loaddata(1);\n    //eslint-disable-next-line\n  }, []);\n\n  const onChangeProjectView = (e) => {\n    setView(e.target.value);\n  };\n\n  const addCustomer = () => {\n    history.push(`/app/customer/list/add`);\n  };\n\n  const handleCallback = (childData) => {\n    console.log(childData);\n    loadFilteredData(\n      1,\n      childData.category,\n      childData.customerType,\n      childData.customerName\n    );\n    // loadFilteredData(1,childData.category, childData.todoType, childData.inflencerName)\n  };\n\n  const extraViewBtnGroup = (\n    <div>\n      <Radio.Group\n        defaultValue={VIEW_LIST}\n        onChange={(e) => onChangeProjectView(e)}\n      >\n        <Radio.Button value={VIEW_SCRUMBOARD} disabled>\n          <BsGrid1X2 style={{ paddingTop: \"1\" }} />\n        </Radio.Button>\n        <Radio.Button value={VIEW_LIST}>\n          <UnorderedListOutlined />\n        </Radio.Button>\n      </Radio.Group>\n      <Button\n        type=\"primary\"\n        className=\"ml-2\"\n        shape=\"round\"\n        style={{ width: \"41px\", padding: \"0\" }}\n        onClick={addCustomer}\n      >\n        <PlusOutlined />\n      </Button>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"Customers List\"\n        subTitle={<AppBreadcrumb />}\n        extra={[extraViewBtnGroup]}\n      />\n      {view === VIEW_LIST ? (\n        <div>\n          <ContectFilterGroup parentCallback={handleCallback} />\n        </div>\n      ) : null}\n      <div className={`my-4 ${view === VIEW_LIST ? \"\" : \"container-fluid\"}`}>\n        {view === VIEW_LIST ? (\n          <CustomerList\n            customersList={data}\n            page={page}\n            total={total}\n            loading={loading}\n            loaddata={loaddata}\n          />\n        ) : (\n          <CustomerKanban />\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nCustomerMain.prototype = {\n  customer: PropTypes.object.isRequired,\n  loaddata: PropTypes.func.isRequired,\n  loadFilteredData: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  customer: state.customer,\n});\nexport default connect(mapStateToProps, { loaddata, loadFilteredData })(\n  CustomerMain\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\NavPanel.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\UserManagement\\UserListMain.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-details\\CustomerDetails.js",["2038","2039","2040","2041","2042","2043","2044","2045","2046"],"import { Col, Row, PageHeader, Card, Avatar, Tooltip } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport NavBar from './customer-details-components/NavBar';\nimport SideCards from './customer-details-components/SideCards';\nimport { FilePdfOutlined } from '@ant-design/icons';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Flex from 'components/shared-components/Flex';\nimport { PaperClipOutlined } from '@ant-design/icons';\nimport orel from '../../../../../../src/assets/images/orel.jpg';\nimport { connect } from 'react-redux';\nimport { customerLoadDataByOne } from '../../redux/actions/customerAction';\nimport PropTypes from 'prop-types';\n\nconst CustomerDetails = (props) => {\n  const { customerLoadDataByOne, customerLoading, customerCurrentData } = props;\n  let history = useHistory();\n  let { id } = useParams();\n  console.log(id);\n\n  useEffect(() => {\n    customerLoadDataByOne(id);\n  }, []);\n\n  console.log(customerCurrentData, 'test');\n\n  const MenuItemComp = ({ menuName, goto, tooltip }) => {\n    console.log(goto);\n    return (\n      <Col xs={{ span: 6 }} lg={{ span: 4 }}>\n        <Tooltip title={tooltip} placement='bottom'>\n          <a href={goto} target='_blank'>\n            <FilePdfOutlined\n              style={{\n                display: 'block',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                fontSize: '5rem',\n                cursor: 'pointer',\n              }}\n            />\n          </a>\n        </Tooltip>\n        <h6 className='mt-2' style={{ textAlign: 'center' }}>\n          {menuName}\n        </h6>\n      </Col>\n    );\n  };\n  return (\n    <>\n      <NavBar customerCurrentData={customerCurrentData} />\n      <Row gutter={16} className='mt-3'>\n        <Col xs={24} sm={8} md={8}>\n          <SideCards customerCurrentData={customerCurrentData} />\n        </Col>\n        <Col xs={24} sm={24} md={16}>\n          <PageHeader className='ml-0 pl-1' title='Attachments' />\n          <Card>\n            {/* <Flex>\n              <Avatar size={27} className='ant-avatar-blue'>\n                <span className='font-weight-bold font-size-md'>\n                  <PaperClipOutlined />\n                </span>\n              </Avatar>\n              <div className='ml-2'>\n                <h4>Added Attachments</h4>\n              </div>\n            </Flex>\n            <br></br> */}\n\n            <Card>\n              <Row className='mt-2' align='middle' gutter={[0, 16]}>\n                {customerCurrentData &&\n                  customerCurrentData.customerAttachments.map((attch) => {\n                    return (\n                      <MenuItemComp\n                        key={attch.id}\n                        menuName={attch.type}\n                        goto={attch.fileDownloadUri}\n                        tooltip={attch.fileName}\n                      />\n                    );\n                  })}\n                {/* <MenuItemComp imgUrl={orel} menuName={'VAT Certificate'} />\n                <MenuItemComp imgUrl={orel} menuName={'SVAT Certificate'} />\n                <MenuItemComp imgUrl={orel} menuName={'Form 20'} />\n                <MenuItemComp imgUrl={orel} menuName={'Bank Statement'} />\n                <MenuItemComp imgUrl={orel} menuName={'NIC'} />\n                <MenuItemComp imgUrl={orel} menuName={'Credit Application'} /> */}\n              </Row>\n            </Card>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nCustomerDetails.prototype = {\n  customerCurrentData: PropTypes.object.isRequired,\n  customerLoading: PropTypes.object.isRequired,\n  customerLoadDataByOne: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  customerCurrentData: state.customer.current,\n  customerLoading: state.customer.loading,\n});\n\nexport default connect(mapStateToProps, { customerLoadDataByOne })(\n  CustomerDetails\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\RoleManagement\\RoleListMain.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\PermissionManagement\\PermissionListMain.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\home\\index.js",["2047","2048","2049","2050"],"import React, {useEffect} from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserPermissionSuccess} from \"./redux/actions/userPermissionAction\";\r\n\r\nconst Home = (props) => {\r\n    const {getUserPermissionSuccess,userPermission,loading} = props;\r\n\t// useEffect(()=>{\r\n\t// \tgetUserPermissionSuccess(\"000000\");\r\n\t// \tlocalStorage.setItem(\"UserPermissiom\",userPermission);\r\n\t// },[])\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tHome component works!\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nHome.prototype = {\r\n\tuserPermission: PropTypes.object.isRequired,\r\n\tgetUserPermissionSuccess:PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = (state) => {\r\n\tconsole.log(state)\r\n\treturn {\r\n\t\tuserPermission: state.userPermission.userPermission,\r\n\t\tloading:state.userPermission.loading,\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, {getUserPermissionSuccess})(Home);\r\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\admin-panel\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\NavSearch\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationList\\QuotationList.js",["2051","2052","2053","2054","2055"],"import React from \"react\";\nimport { Menu, Pagination, Row, Table, Avatar } from \"antd\";\nimport utils from \"utils\";\nimport {\n  EyeOutlined,\n  DeleteOutlined,\n  RightSquareOutlined,\n  UploadOutlined,\n  DownloadOutlined,\n} from \"@ant-design/icons\";\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\nimport numeral from \"numeral\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { loadQuotationListData } from \"../redux/actions/quotationListAction\";\nimport { useEffect } from \"react\";\nimport moment from \"moment\";\nimport { toUpper } from \"lodash\";\n\nconst QuotationList = (props) => {\n  const {\n    quotationList: { quotationListData, loading, page, total },\n    loadQuotationListData,\n  } = props;\n\n  let history = useHistory();\n\n  useEffect(() => {\n    loadQuotationListData(1);\n  }, []);\n\n  const onChangePage = (page) => {\n    loadQuotationListData(page);\n  };\n  const tableDropdownMenu = (row) => {\n    const onDelete = () => {};\n    const onEdit = () => {};\n    const onPOUpload = () => {\n      history.push(`/app/quotation/list/poupload/${row.id}`);\n    };\n    const onView = () => {\n      history.push(`/app/quotation/list/quotationdetials/${row.id}`);\n    };\n    return (\n      <Menu>\n        <Menu.Item key=\"0\" onClick={onView}>\n          <EyeOutlined />\n          <span>View Details</span>\n        </Menu.Item>\n        <Menu.Item\n          key=\"1\"\n          onClick={onPOUpload}\n          disabled={row.status === \"approve\" ? false : true}\n        >\n          <UploadOutlined />\n          <span>PO Upload</span>\n        </Menu.Item>\n        <Menu.Divider />\n        {/* <Menu.Item key=\"2\">\n          <DeleteOutlined />\n          <span>Discard</span>\n        </Menu.Item> */}\n        <Menu.Item key=\"3\">\n          <RightSquareOutlined />\n          <span>Revise</span>\n        </Menu.Item>\n        {/* <Menu.Item key='4'>\n          <DownloadOutlined />\n          <span>Archive</span>\n        </Menu.Item> */}\n      </Menu>\n    );\n  };\n\n  const columns = [\n    {\n      title: \"#\",\n      dataIndex: \"index\",\n      render: (_, record, index) => {\n        return <p className=\"mb-0\"> {index + 1} </p>;\n      },\n    },\n    {\n      title: \"Action By\",\n      dataIndex: \"actionBy\",\n      render: (_, record) => (\n        <Avatar\n          size=\"default\"\n          className={`ml-1 cursor-pointer ant-avatar-blue`}\n          // src={record.img}\n        >\n          <span className=\"font-weight-semibold font-size-sm\">\n            {utils.getNameInitial(record.actionBy)}\n          </span>\n          {/*\n            {record.img ? (\n              ''\n            ) : (\n              <span className='font-weight-semibold font-size-sm'>\n                {utils.getNameInitial(record.actionBy)}\n              </span>\n            )}\n          </Avatar>\n           */}\n        </Avatar>\n      ),\n    },\n    {\n      title: \"Quotation No\",\n      dataIndex: \"quotationNo\",\n      render: (_, record) => <p className=\"mb-0\">{record.quotationNo}</p>,\n    },\n    {\n      title: \"Sales Order No\",\n      dataIndex: \"salesOrderNo\",\n      render: (_, record) => <p className=\"mb-0\">{record.salesOrderNo}</p>,\n    },\n    {\n      title: \"Customer Name\",\n      dataIndex: \"customerName\",\n      render: (_, record) => (\n        <p className=\"mb-0\">{record.customerDetail.customerName}</p>\n      ),\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"totalAmount\",\n      render: (_, record) => (\n        <p className=\"mb-0\">{numeral(record.totalAmount).format(\"0,0.00\")}</p>\n      ),\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"createdAt\",\n      render: (_, record) => (\n        <p className=\"mb-0\">{moment(record.createdAt).format(\"YYYY-MM-DD\")}</p>\n      ),\n    },\n\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: (_, record) => <p className=\"mb-0\">{toUpper(record.status)}</p>,\n    },\n    {\n      title: \"\",\n      dataIndex: \"\",\n      render: (_, quotationListData) => (\n        <div className=\"text-right\">\n          <EllipsisDropdown menu={tableDropdownMenu(quotationListData)} />\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Table\n        rowKey=\"id\"\n        columns={columns}\n        dataSource={quotationListData && quotationListData}\n        pagination={false}\n        loading={loading}\n      />\n      <Row justify=\"end\" className=\"mt-2\">\n        <Pagination\n          pageSize={20}\n          defaultCurrent={page}\n          current={page}\n          total={total}\n          onChange={onChangePage}\n        />\n      </Row>\n    </>\n  );\n};\nQuotationList.prototype = {\n  quotationList: PropTypes.object.isRequired,\n  loadQuotationListData: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  quotationList: state.quotationList,\n});\nexport default connect(mapStateToProps, { loadQuotationListData })(\n  QuotationList\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListItemMain.js",["2056","2057","2058","2059","2060"],"import React, { useState, useEffect } from \"react\";\nimport LeadListItem from \"./LeadListItem\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { leadloaddata } from \"../redux/actions/leadListAction\";\nimport { Col, Pagination, Row, Spin } from \"antd\";\n\nconst LeadListItemMain = (props) => {\n  const { leadloaddata, leadData, loading, page, total } = props;\n\n  const onChangePage = (page) => {\n    leadloaddata(page);\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Row\n          justify=\"center\"\n          align=\"middle\"\n          style={{ width: \"100%\", height: \"300px\" }}\n        >\n          <Col>\n            <Spin size=\"large\" />\n          </Col>\n        </Row>\n      ) : (\n        leadData &&\n        leadData.map((data) => {\n          return <LeadListItem data={data} key={data.id} />;\n        })\n      )}\n      <Row justify=\"end\" className=\"mt-2\">\n        <Pagination\n          pageSize={20}\n          defaultCurrent={page}\n          current={page}\n          total={total}\n          onChange={onChangePage}\n        />\n      </Row>\n    </>\n  );\n};\n\nLeadListItemMain.prototype = {};\n\n\nexport default LeadListItemMain;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadRecommendation.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadFollowUp.js",["2061","2062","2063","2064"],"import {\n  Button,\n  DatePicker,\n  Col,\n  Switch,\n  Card,\n  Row,\n  Form,\n  Select,\n  message,\n} from \"antd\";\nimport React, { useState } from \"react\";\nimport { Fragment } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactQuill from \"react-quill\";\nimport {\n  PhoneOutlined,\n  MailOutlined,\n  WhatsAppOutlined,\n} from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { addFollowUp } from \"../../redux/actions/followUpAction\";\n\nconst VIEW_TIMELINE = \"TIMELINE\";\n\nconst LeadFollowUp = (props) => {\n  const {\n    leadid,\n    addFollowUp,\n    followUpLoading,\n    setView,\n    followUpTypeData,\n  } = props;\n  let history = useHistory();\n  const [form1] = Form.useForm();\n  const [remark1, setRemark1] = useState(\"\");\n\n  const onCancle = (e) => {\n    // e.preventDefault();\n    setView(VIEW_TIMELINE);\n  };\n\n  const onSubmit = () => {\n    form1.validateFields().then((values) => {\n      const { followupDate, nextFollowupDate, remark, type } = values;\n\n      const newFollowup = {\n        leadId: `${leadid}`,\n        salesRepId: 20,\n        followupDate: moment(followupDate).format(\"YYYY-MM-DD\"),\n        nextFollowupDate: moment(nextFollowupDate).format(\"YYYY-MM-DD\"),\n        type: type,\n        remark: remark1,\n      };\n      try {\n        addFollowUp(newFollowup);\n        message.success(\"Added New Followup\");\n        setView(VIEW_TIMELINE);\n      } catch (error) {\n        message.error(error);\n      }\n    });\n  };\n\n  const followUpTypeIcon = (type) => {\n    if (type === \"Call\") {\n      return <PhoneOutlined />;\n    } else if (type === \"Email\") {\n      return <MailOutlined />;\n    } else if (type === \"WhatsApp\") {\n      return <WhatsAppOutlined />;\n    }\n  };\n  return (\n    <Card>\n      <Fragment>\n        <div className=\"container\">\n          <Card bordered={false} style={{ width: \"100%\" }}>\n            <Form form={form1} labelCol={{ lg: 24 }} labelAlign=\"left\">\n              <Row gutter={16}>\n                <Col xs={24} lg={8}>\n                  <Form.Item\n                    className=\"mb-1\"\n                    label=\"Followup Date\"\n                    name=\"followupDate\"\n                  >\n                    <DatePicker style={{ width: \"100%\" }} />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} lg={8}>\n                  <Form.Item\n                    className=\"mb-1\"\n                    label=\"Next Followup Date\"\n                    name=\"nextFollowupDate\"\n                  >\n                    <DatePicker style={{ width: \"100%\" }} />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} lg={8}>\n                  <Form.Item className=\"mb-1\" label=\"Followup Type\" name=\"type\">\n                    <Select placeholder=\"-Select Followup Type-\">\n                      {followUpTypeData &&\n                        followUpTypeData?.map((folowType) => (\n                          <Select.Option\n                            key={folowType.id}\n                            value={folowType.followtype}\n                          >\n                            <span className=\"mr-2\">\n                              {followUpTypeIcon(folowType.followtype)}\n                            </span>\n                            {folowType.followtype}\n                          </Select.Option>\n                        ))}\n                    </Select>\n                  </Form.Item>\n                </Col>\n\n                <Col xs={24} lg={24} className=\"mt-4\">\n                  <Form.Item name=\"remark\" style={{ height: 160 }}>\n                    <ReactQuill\n                      theme=\"snow\"\n                      value={remark1}\n                      onChange={setRemark1}\n                      style={{ height: 140 }}\n                    />\n                  </Form.Item>\n                  {/*\n                    <Row className='mb-2 mt-4'>\n                      <h4>Notifications </h4>\n                    </Row>\n  \n                    <Row>\n                      <Col className='mr-5'>\n                        <Form.Item\n                          label='Remind me about this followup and turn on the smart notifications'\n                          labelCol={{ lg: 22 }}\n                        >\n                          <Col className='ml-auto' justify='end'>\n                            <Switch size='small' />\n                          </Col>\n                        </Form.Item>\n                      </Col>\n                    </Row>\n  \n                    <Row>\n                      <Col justify='start' className='mr-5'>\n                        <Form.Item label='Auto start next followup'>\n                          <Col className='ml-auto' justify='end'>\n                            <Switch size='small' />\n                          </Col>\n                        </Form.Item>\n                      </Col>\n                    </Row>\n                   */}\n                </Col>\n              </Row>\n\n              <Row justify=\"end\" className=\"mt-3\">\n                <Col>\n                  <Button\n                    size=\"small\"\n                    className=\"mr-1\"\n                    style={{\n                      width: 100,\n                      borderColor: \"#3e82f7\",\n                      color: \"#3e82f7\",\n                    }}\n                    onClick={onCancle}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    size=\"small\"\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    style={{ width: 100 }}\n                    onClick={onSubmit}\n                  >\n                    Add\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </Card>\n        </div>\n      </Fragment>\n    </Card>\n  );\n};\n\nLeadFollowUp.prototype = {\n  followUpLoading: PropTypes.object.isRequired,\n  addFollowUp: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  followUpLoading: state.followUp.loading,\n});\n\nexport default connect(mapStateToProps, { addFollowUp })(LeadFollowUp);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadDetailsTimeline.js",["2065","2066","2067","2068","2069"],"import {\n  Button,\n  Row,\n  Col,\n  Avatar,\n  Card,\n  message,\n  Descriptions,\n  Spin,\n} from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getLeadTimeLineSuccess } from \"../../redux/actions/leadListAction\";\nimport moment from \"moment\";\nimport utils from \"../../../../../utils\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport ModalForm from \"../../LeadBoard/ModalForm\";\n\nconst LeadDetailsTimeline = (props) => {\n  const { current, getLeadTimeLineSuccess, timeline } = props;\n  const [currentData, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setData(current);\n    getLeadTimeLineSuccess(current?.id);\n  }, [current]);\n\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 3000);\n  }, []);\n\n  console.log(timeline);\n  return (\n    <>\n      {loading ? (\n        <Row justify=\"center\" align=\"middle\" style={{ height: \"70vh\" }}>\n          <Spin spinning={loading} style={{ opacity: 1 }} size={\"large\"}>\n            <div></div>\n          </Spin>\n        </Row>\n      ) : (\n        <Card\n          style={{\n            maxHeight: \"550px\",\n            overflow: \"scroll\",\n            overflowX: \"hidden\",\n          }}\n        >\n          {timeline.map((obj) => {\n            if (obj.type === \"attachment\") {\n              return (\n                <Card>\n                  <Row className=\"mb-3\">\n                    <Avatar\n                      className=\"mr-3\"\n                      size={30}\n                      src=\"/img/others/y.png\"\n                    />\n                    <h4 className=\"mr-3\">{obj.action}</h4>\n                    <p>{moment(obj?.attachment.created_at).fromNow()}</p>\n                  </Row>\n\n                  <Row></Row>\n                </Card>\n              );\n            }\n            if (obj.type === \"leads\") {\n              return (\n                <Card>\n                  <Row className=\"mb-3\">\n                    <Avatar className=\"mr-3 ant-avatar-blue\" size={30}>\n                      <span className=\"font-weight-bold font-size-lg\">\n                        {utils.getNameInitial(\n                          obj?.lead?.customer ? obj?.lead?.customer : \"\"\n                        )}\n                      </span>\n                    </Avatar>\n\n                    <h4 className=\"mr-3\">{obj.action}</h4>\n                    <p>{moment(obj?.lead.updated_at).fromNow()}</p>\n                  </Row>\n                </Card>\n              );\n            }\n            if (obj.type === \"recommend\") {\n              return (\n                <Card>\n                  <Row className=\"mb-3\">\n                    <Avatar\n                      className=\"mr-3\"\n                      size={30}\n                      src=\"/img/others/y.png\"\n                    />\n                    <h4 className=\"mr-3\">{obj?.action}</h4>\n                  </Row>\n                </Card>\n              );\n            }\n            if (obj.type === \"followups\") {\n              return (\n                <Card>\n                  <Row className=\"mb-3\">\n                    <Avatar\n                      className=\"mr-3\"\n                      size={30}\n                      src=\"/img/others/z.png\"\n                    />\n\n                    <h4 className=\"mr-3\">{obj.action}</h4>\n                    <p>{moment(obj?.followups?.followupDate).fromNow()}</p>\n                    <Col className=\"ml-auto\" justify=\"end\">\n                      <Button size=\"small\" type=\"link\">\n                        By Chethiya\n                      </Button>\n                    </Col>\n                  </Row>\n                  <br></br>\n\n                  <Card className=\"mt-4\">\n                    <Descriptions size=\"small\" column={3}>\n                      <Descriptions.Item label=\"Type\">\n                        {obj.followups.type}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Customer\">\n                        {currentData?.customer\n                          ? currentData?.customer\n                          : \"Loading...\"}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Phone\">\n                        {currentData?.contact\n                          ? currentData?.contact\n                          : \"Loading...\"}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Next Follow Up\">\n                        {obj?.followups?.nextFollowupDate}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Email\">\n                        {currentData?.email ? currentData?.email : \"Loading...\"}\n                      </Descriptions.Item>\n                    </Descriptions>\n                  </Card>\n                </Card>\n              );\n            }\n          })}\n        </Card>\n      )}\n    </>\n  );\n};\n\nLeadDetailsTimeline.prototype = {\n  timeLine: PropTypes.object.isRequired,\n  getLeadTimeLineSuccess: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    timeline: state.leadList.timeLine,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getLeadTimeLineSuccess,\n})(LeadDetailsTimeline);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadAttachment.js",["2070","2071","2072","2073"],"import { Card, Col, Row, Select } from 'antd';\nimport React, { useState } from 'react';\nimport { ImageSvg } from 'assets/svg/icon';\nimport CustomIcon from 'components/util-components/CustomIcon';\nimport { Upload, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\n\nconst { Dragger } = Upload;\n\nconst { Option } = Select;\nconst VIEW_TIMELINE = 'TIMELINE';\nconst LeadAttachment = ({ leadid, setView }) => {\n  const props = {\n    name: 'file',\n    multiple: true,\n    action: `http://localhost:8103/leads/${leadid}/attachments/create`,\n\n    onChange(info) {\n      const { status } = info.file;\n      if (status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully.`);\n        setView(VIEW_TIMELINE);\n      } else if (status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    },\n  };\n\n  return (\n    <Card style={{ height: 500 }}>\n      <Row justify='center' align='middle' style={{ height: 400 }}>\n        <Col>\n          <Dragger {...props}>\n            <p className='ant-upload-drag-icon'>\n              <InboxOutlined />\n            </p>\n            <p className='ant-upload-text'>\n              Click or drag file to this area to upload\n            </p>\n            <p className='ant-upload-hint'>\n              Support for a single or bulk upload. Strictly prohibit from\n              uploading company data or other band files\n            </p>\n          </Dragger>\n        </Col>\n      </Row>\n    </Card>\n  );\n};\n\nexport default LeadAttachment;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-list\\CustomerList.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\map\\LocationPicker.js",["2074","2075","2076"],"import React, { useState } from 'react';\nimport Map from './map';\n\nconst DefaultLocation = { lat: 10, lng: 106 };\nconst DefaultZoom = 10;\n\nconst LoationPicker = (props) => {\n  return (\n    <>\n      <Map\n        google={props.google}\n        center={{ lat: 6.9271, lng: 79.8612 }}\n        height='200px'\n        onLocation={props.location}\n        zoom={10}\n      />\n    </>\n  );\n};\n\nexport default LoationPicker;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\PermissionManagement\\AddPermission.js",["2077","2078","2079"],"import React from \"react\";\nimport { Button, Col, Form, Input, Modal, Radio, Transfer } from \"antd\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addPermission } from \"../redux/actions/userPermissionListAction\";\n\nconst AddPermission = ({\n  visible,\n  onCancel,\n  setVisible,\n  addPermission,\n  addPermissionLoading,\n}) => {\n  const [permissionForm] = Form.useForm();\n\n  const onSubmit = () => {\n    permissionForm.validateFields().then((values) => {\n      const { permissionName, displayName } = values;\n      const permission = {\n        name: permissionName,\n        displayname: displayName,\n        created_by: 1,\n      };\n      addPermission(permission);\n      permissionForm.resetFields();\n      console.log(permission);\n      setVisible(false);\n    });\n  };\n  return (\n    <Modal\n      visible={visible}\n      onCancel={onCancel}\n      title=\"Add new role\"\n      closable\n      centered\n      footer={[\n        <Button onClick={onCancel}>Cancel</Button>,\n        <Button\n          form={\"addRoleForm\"}\n          onClick={onSubmit}\n          type=\"primary\"\n          loading={addPermissionLoading}\n        >\n          Add\n        </Button>,\n      ]}\n    >\n      <Form form={permissionForm} layout=\"vertical\">\n        <Form.Item label=\"Permission Name\" name=\"permissionName\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Display Name\" name=\"displayName\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\nAddPermission.prototype = {\n  addPermissionLoading: PropTypes.object.isRequired,\n  addPermission: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  addPermissionLoading: state.userPermissionList.loading,\n});\nexport default connect(mapStateToProps, { addPermission })(AddPermission);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\PermissionManagement\\PermissionList.js",["2080","2081","2082","2083","2084"],"import { Pagination, Row, Table, Menu, Avatar, Tag } from \"antd\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\nimport { toUpper } from \"lodash\";\nimport moment from \"moment\";\nimport utils from \"utils\";\nimport PropTypes from \"prop-types\";\nimport {\n  loadUserPermissionListDataSuccess,\n  deletePermission,\n} from \"../redux/actions/userPermissionListAction\";\nimport { connect } from \"react-redux\";\n\nconst PermissionList = (props) => {\n  const {\n    userPermissionListLoading,\n    userPermissionListData,\n    loadUserPermissionListDataSuccess,\n    deletePermission,\n  } = props;\n  useEffect(() => {\n    loadUserPermissionListDataSuccess();\n  }, []);\n  console.log(userPermissionListData);\n  const tableDropdownMenu = (row) => {\n    const onDelete = (id) => {\n      deletePermission(id);\n    };\n    return (\n      <Menu>\n        {/* <Menu.Item key=\"1\">\n          <EditOutlined />\n          <span>Edit</span>\n        </Menu.Item> */}\n        <Menu.Item key=\"2\" onClick={() => onDelete(row.id)}>\n          <DeleteOutlined />\n          <span>Delete</span>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n  const columns = [\n    {\n      title: \"#\",\n      dataIndex: \"index\",\n      render: (_, record, index) => {\n        return <p className=\"mb-0\"> {index + 1} </p>;\n      },\n    },\n    {\n      title: \"\",\n      dataIndex: \"displayname\",\n      render: (_, record) => (\n        <Avatar size=\"default\" className={`ml-1 ant-avatar-blue`}>\n          <span className=\"font-weight-semibold font-size-sm\">\n            {utils.getNameInitial(\n              record.displayname ? record.displayname : \"Dummy Dummy\"\n            )}\n          </span>\n        </Avatar>\n      ),\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      render: (_, record) => <p className=\"mb-0\">{record.name}</p>,\n    },\n\n    {\n      title: \"Display Name\",\n      dataIndex: \"displayName\",\n      render: (_, record) => <p className=\"mb-0\">{record.displayname}</p>,\n    },\n    {\n      title: \"Created By\",\n      dataIndex: \"created_By\",\n      render: (_, record) => <p className=\"mb-0\">{record.created_by}</p>,\n    },\n\n    {\n      title: \"Created At\",\n      dataIndex: \"createdAt\",\n      render: (_, record) => (\n        <p className=\"mb-0\">\n          {moment(record.createdAt).format(\"YYYY-MM-DD : HH:MM\")}\n        </p>\n      ),\n    },\n\n    {\n      title: \"\",\n      dataIndex: \"\",\n      render: (_, record) => (\n        <div className=\"text-right\">\n          <EllipsisDropdown menu={tableDropdownMenu(record)} />\n        </div>\n      ),\n    },\n  ];\n  const data = [\n    {\n      key: 1,\n      name: \"Dashboard\",\n      displayName: \"My Dashboard\",\n      createdBy: \"Super Admin\",\n      createdAt: \"2021-02-17\",\n    },\n  ];\n  return (\n    <Fragment>\n      <Table\n        loading={userPermissionListLoading}\n        dataSource={userPermissionListData}\n        columns={columns}\n        pagination={false}\n      />\n      <Row justify=\"end\" className=\"mt-2\">\n        <Pagination />\n      </Row>\n    </Fragment>\n  );\n};\n\nPermissionList.prototype = {\n  userPermissionListData: PropTypes.object.isRequired,\n  userPermissionListLoading: PropTypes.object.isRequired,\n  loadUserPermissionListDataSuccess: PropTypes.func.isRequired,\n  deletePermission: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userPermissionListData: state.userPermissionList.userPermissionListData,\n  userPermissionListLoading: state.userPermissionList.loading,\n});\n\nexport default connect(mapStateToProps, {\n  loadUserPermissionListDataSuccess,\n  deletePermission,\n})(PermissionList);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\RoleManagement\\RoleList.js",["2085","2086","2087","2088"],"import { Pagination, Row, Table, Menu, Avatar, Tag } from \"antd\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\nimport { toUpper } from \"lodash\";\nimport moment from \"moment\";\nimport utils from \"utils\";\nimport EditRole from \"./EditRole\";\nimport PropTypes from \"prop-types\";\nimport {\n  loadUserRoleListDataSuccess,\n  deleteRole,\n} from \"../redux/actions/userRoleListAction\";\nimport { connect } from \"react-redux\";\n\nconst RoleList = (props) => {\n  const {\n    loadUserRoleListDataSuccess,\n    userRoleListLoading,\n    userRoleListData,\n    deleteRole,\n  } = props;\n  const [visible, setVisible] = useState(false);\n  const [id, setId] = useState();\n\n  useEffect(() => {\n    loadUserRoleListDataSuccess();\n  }, []);\n\n  const handleEditRole = (id) => {\n    setId(id);\n    setVisible(true);\n  };\n\n  const onCancle = () => {\n    setId();\n    setVisible(false);\n  };\n  const tableDropdownMenu = (row) => {\n    const onDelete = (id) => {\n      deleteRole(id);\n    };\n\n    return (\n      <Menu>\n        <Menu.Item key=\"1\" onClick={() => handleEditRole(row.id)}>\n          <EditOutlined />\n          <span>Edit</span>\n        </Menu.Item>\n        <Menu.Item key=\"2\" onClick={() => onDelete(row.id)}>\n          <DeleteOutlined />\n          <span>Delete</span>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n  const columns = [\n    {\n      title: \"#\",\n      dataIndex: \"index\",\n      render: (_, record, index) => {\n        return <p className=\"mb-0\"> {index + 1} </p>;\n      },\n    },\n    {\n      title: \"\",\n      dataIndex: \"displayName\",\n      render: (_, record) => (\n        <Avatar size=\"default\" className={`ml-1 ant-avatar-blue`}>\n          <span className=\"font-weight-semibold font-size-sm\">\n            {utils.getNameInitial(\n              record.displayname ? record.displayname : \"Dummy Dummy\"\n            )}\n          </span>\n        </Avatar>\n      ),\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      render: (_, record) => <p className=\"mb-0\">{record.name}</p>,\n    },\n\n    {\n      title: \"Display Name\",\n      dataIndex: \"displayname\",\n      render: (_, record) => <p className=\"mb-0\">{record.displayname}</p>,\n    },\n    {\n      title: \"Created By\",\n      dataIndex: \"createdBy\",\n      render: (_, record) => <p className=\"mb-0\">{record.created_by}</p>,\n    },\n\n    {\n      title: \"Created At\",\n      dataIndex: \"createdAt\",\n      render: (_, record) => (\n        <p className=\"mb-0\">{moment(record.createdAt).format(\"YYYY-MM-DD\")}</p>\n      ),\n    },\n\n    {\n      title: \"\",\n      dataIndex: \"\",\n      render: (_, record) => (\n        <div className=\"text-right\">\n          <EllipsisDropdown menu={tableDropdownMenu(record)} />\n        </div>\n      ),\n    },\n  ];\n\n  const data = [\n    {\n      key: 1,\n      name: \"Head Of Dep\",\n      displayName: \"Head Of Dept\",\n      createdBy: \"Super Admin\",\n      createdAt: \"2021-02-17\",\n    },\n  ];\n  return (\n    <Fragment>\n      <Table\n        loading={userRoleListLoading}\n        dataSource={userRoleListData}\n        columns={columns}\n        pagination={false}\n      />\n      <Row justify=\"end\" className=\"mt-2\">\n        <Pagination />\n      </Row>\n      <EditRole visible={visible} onCancle={onCancle} id={id} />\n    </Fragment>\n  );\n};\nRoleList.prototype = {\n  userRoleListData: PropTypes.object.isRequired,\n  userRoleListLoading: PropTypes.object.isRequired,\n  loadUserRoleListDataSuccess: PropTypes.func.isRequired,\n  deleteRole: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userRoleListData: state.userRoleList.userRoleListData,\n  userRoleListLoading: state.userRoleList.loading,\n});\nexport default connect(mapStateToProps, {\n  loadUserRoleListDataSuccess,\n  deleteRole,\n})(RoleList);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\RoleManagement\\AddRole.js",["2089","2090","2091","2092","2093"],"import { Button, Col, Form, Input, Modal, Radio, Transfer } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { loadUserPermissionListDataSuccess } from \"../redux/actions/userPermissionListAction\";\nimport { addRole } from \"../redux/actions/userRoleListAction\";\n\nconst AddRole = (props) => {\n  const {\n    visible,\n    onCancle,\n    setVisible,\n    loadUserPermissionListDataSuccess,\n    permissionListData,\n    addRole,\n    roleAddLoading,\n  } = props;\n  const [addRoleForm] = Form.useForm();\n  // const [mockData, setMockData] = useState([]);\n  const [targetKeys, setTargetKeys] = useState([]);\n\n  useEffect(() => {\n    // const mockData = [];\n    // const targetKeys = [];\n    loadUserPermissionListDataSuccess();\n\n    // mockData.push(permissionListData);\n    // for (let i = 0; i < 20; i++) {\n    //   const data = {\n    //     permissionId: i.toString(),\n    //     title: `content${i + 1}`,\n    //     description: `description of content${i + 1}`,\n    //     // chosen: Math.random() * 2 > 1,\n    //   };\n    //   // if (data.chosen) {\n    //   //   targetKeys.push(data.key);\n    //   // }\n    //   mockData.push(data);\n    // }\n    // setMockData(mockData);\n    // setTargetKeys(targetKeys);\n  }, []);\n\n  const handleChange = (target) => {\n    setTargetKeys(target);\n  };\n\n  const onSubmit = () => {\n    addRoleForm.validateFields().then((values) => {\n      const { roleName, displayName } = values;\n\n      const pArr = [];\n      targetKeys.map((data) => {\n        permissionListData.map((pdata) => {\n          if (pdata.id == data) {\n            pArr.push({ permissionid: Number(pdata.id) });\n          }\n        });\n      });\n      console.log(pArr);\n\n      const role = {\n        name: roleName,\n        displayname: displayName,\n        created_by: 1,\n        permissionRoles: pArr,\n      };\n      addRole(role);\n      addRoleForm.resetFields();\n      console.log(role);\n      setTargetKeys([]);\n      setVisible(false);\n    });\n  };\n  return (\n    <Modal\n      visible={visible}\n      onCancel={onCancle}\n      title=\"Add new role\"\n      closable\n      centered\n      footer={[\n        <Button onClick={onCancle}>Cancel</Button>,\n        <Button\n          form={\"addRoleForm\"}\n          onClick={onSubmit}\n          type=\"primary\"\n          loading={roleAddLoading}\n        >\n          Add\n        </Button>,\n      ]}\n    >\n      <Form form={addRoleForm} layout=\"vertical\">\n        <Form.Item label=\"Role Name\" name=\"roleName\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Display Name\" name=\"displayName\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Select permission to assign\">\n          <Col xs={24}>\n            <Transfer\n              showSearch\n              dataSource={permissionListData}\n              render={(item) => item.name}\n              onChange={handleChange}\n              targetKeys={targetKeys}\n              rowKey={(record) => record.id}\n            />\n          </Col>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nAddRole.prototype = {\n  permissionListData: PropTypes.object.isRequired,\n  loadUserPermissionListDataSuccess: PropTypes.func.isRequired,\n  addRole: PropTypes.func.isRequired,\n  roleAddLoading: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  permissionListData: state.userPermissionList.userPermissionListData,\n  roleAddLoading: state.userRoleList.loading,\n});\n\nexport default connect(mapStateToProps, {\n  loadUserPermissionListDataSuccess,\n  addRole,\n})(AddRole);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\CustomerKanban.js",["2094","2095","2096","2097","2098"],"import React, { useContext } from 'react';\nimport { ScrumboardProvider, ScrumboardContext } from './ScrumboardContext';\nimport Board from './Board';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Avatar } from 'antd';\nimport reorder, { reorderQuoteMap } from './reoreder';\nimport { memberIds } from './ScrumboardData';\nimport ModalForm from './ModalForm';\nimport { modalModeTypes, createCardObject, AssigneeAvatar } from './utils';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nconst ScrumboardWrapper = (props) => {\n  const {\n    ordered,\n    columns,\n    modal,\n    cardData,\n    currentListId,\n    modalMode,\n    updateOrdered,\n    updateColumns,\n    updateModal,\n    updateCurrentListId,\n  } = useContext(ScrumboardContext);\n\n  const onDragEnd = (result) => {\n    if (result.combine) {\n      if (result.type === 'COLUMN') {\n        const shallow = [...ordered];\n        shallow.splice(result.source.index, 1);\n        updateOrdered(shallow);\n        return;\n      }\n\n      const column = columns[result.source.droppableId];\n      const withQuoteRemoved = [...column];\n      withQuoteRemoved.splice(result.source.index, 1);\n      const newColumns = {\n        ...columns,\n        [result.source.droppableId]: withQuoteRemoved,\n      };\n      updateColumns(newColumns);\n      return;\n    }\n\n    if (!result.destination) {\n      return;\n    }\n\n    const source = result.source;\n    const destination = result.destination;\n\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n\n    if (result.type === 'COLUMN') {\n      const newOrdered = reorder(ordered, source.index, destination.index);\n      updateOrdered(newOrdered);\n      return;\n    }\n    const data = reorderQuoteMap({\n      quoteMap: columns,\n      source,\n      destination,\n    });\n    updateColumns(data.quoteMap);\n  };\n\n  const onCloseModal = () => {\n    updateModal(false);\n  };\n\n  const onModalSubmit = (values, mode) => {\n    const data = columns;\n    if (mode === modalModeTypes(0)) {\n      let newCard = createCardObject();\n      newCard.name = values.cardTitle ? values.cardTitle : 'Untitled Card';\n      data[currentListId].push(newCard);\n      updateColumns(data);\n      updateModal(false);\n      updateCurrentListId('');\n    }\n\n    if (mode === modalModeTypes(1)) {\n      const updatadedCard = data[currentListId].map((elm) => {\n        if (values.id === elm.id) {\n          elm = values;\n        }\n        return elm;\n      });\n      data[currentListId] = updatadedCard;\n      updateColumns(data);\n      updateModal(false);\n    }\n\n    if (mode === modalModeTypes(2)) {\n      data[values.boardTitle ? values.boardTitle : 'Untitled Board'] = [];\n      const newOrdered = [\n        ...ordered,\n        ...[values.boardTitle ? values.boardTitle : 'Untitled Board'],\n      ];\n      let newColumns = {};\n      newOrdered.forEach((elm) => {\n        newColumns[elm] = data[elm];\n      });\n      updateColumns(newColumns);\n      updateOrdered(Object.keys(newColumns));\n      updateModal(false);\n    }\n  };\n  return (\n    <>\n      <DragDropContext onDragEnd={(result) => onDragEnd(result)}>\n        {props.containerHeight ? (\n          <div className='scrumboard'>\n            <BoardWrapper {...props} />\n          </div>\n        ) : (\n          <BoardWrapper {...props} />\n        )}\n      </DragDropContext>\n      <ModalForm\n        visible={modal}\n        onClose={() => onCloseModal()}\n        onModalSubmit={(values, modalMode) => onModalSubmit(values, modalMode)}\n        modalMode={modalMode}\n        cardData={cardData}\n        listId={currentListId}\n      />\n    </>\n  );\n};\nconst BoardWrapper = ({\n  containerHeight,\n  useClone,\n  isCombineEnabled,\n  withScrollableColumns,\n}) => {\n  const { ordered, columns, updateModal, updateModalMode } = useContext(\n    ScrumboardContext\n  );\n\n  const onAddBoardModal = () => {\n    updateModal(true);\n    updateModalMode(modalModeTypes(2));\n  };\n  return (\n    <Droppable\n      droppableId='board'\n      type='COLUMN'\n      direction='horizontal'\n      ignoreContainerClipping={containerHeight}\n      isCombineEnabled={isCombineEnabled}\n    >\n      {(provided) => (\n        <div\n          className='scrumboard'\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          <Scrollbars className='scrumboard-body'>\n            {ordered.map((key, index) => (\n              <Board\n                key={key}\n                index={index}\n                title={key}\n                contents={columns[key]}\n                isScrollable={withScrollableColumns}\n                isCombineEnabled={isCombineEnabled}\n                useClone={useClone}\n              />\n            ))}\n          </Scrollbars>\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nconst CustomerKanban = (props) => {\n  return (\n    <ScrumboardProvider>\n      <ScrumboardWrapper {...props} />\n    </ScrumboardProvider>\n  );\n};\n\nexport default CustomerKanban;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\utils.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\UserManagement\\UserList.js",["2099"],"import { Pagination, Row, Table, Avatar, Menu, Tag } from \"antd\";\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\nimport React, { Fragment, useEffect } from \"react\";\nimport utils from \"utils\";\nimport { UserDeleteOutlined } from \"@ant-design/icons\";\nimport { toUpper } from \"lodash\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { loadUserListDataSuccess } from \"../redux/actions/userListAction\";\n\nconst UserList = (props) => {\n  const {\n    userListData,\n    userListLoading,\n    loadUserListDataSuccess,\n    page,\n    total,\n  } = props;\n  useEffect(() => {\n    loadUserListDataSuccess(1);\n  }, []);\n\n  const onPageChange = (page) => {\n    loadUserListDataSuccess(page);\n  };\n\n  const tableDropdownMenu = (row) => {\n    return (\n      <Menu>\n        <Menu.Item key=\"1\">\n          <UserDeleteOutlined style={{ color: \"red\" }} />\n          <span style={{ color: \"red\" }}>De-Active</span>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n  const columns = [\n    {\n      title: \"#\",\n      dataIndex: \"index\",\n      render: (_, record, index) => {\n        return <p className=\"mb-0\"> {index + 1} </p>;\n      },\n    },\n    {\n      title: \"\",\n      dataIndex: \"name\",\n      render: (_, record) => (\n        <Avatar size=\"default\" className={`ml-1 ant-avatar-blue`}>\n          <span className=\"font-weight-semibold font-size-sm\">\n            {utils.getNameInitial(record.name ? record.name : \"Dummy Dummy\")}\n          </span>\n        </Avatar>\n      ),\n    },\n    {\n      title: \"Employee Name\",\n      dataIndex: \"name\",\n      render: (_, record) => <p className=\"mb-0\">{record.name}</p>,\n    },\n\n    {\n      title: \"Employee No\",\n      dataIndex: \"employeeno\",\n      render: (_, record) => <p className=\"mb-0\">{record.employeeno}</p>,\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      render: (_, record) => <p className=\"mb-0\">{record.email}</p>,\n    },\n\n    {\n      title: \"Current Status\",\n      dataIndex: \"currentStatus\",\n      render: (_, record) => (\n        <Tag color=\"cyan\">{toUpper(record.currentStatus)}</Tag>\n      ),\n    },\n    {\n      title: \"Created At\",\n      dataIndex: \"createdAt\",\n      render: (_, record) => (\n        <p className=\"mb-0\">{moment(record.createdAt).format(\"YYYY-MM-DD\")}</p>\n      ),\n    },\n\n    {\n      title: \"\",\n      dataIndex: \"\",\n      render: (_, record) => (\n        <div className=\"text-right\">\n          <EllipsisDropdown menu={tableDropdownMenu(record)} />\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <Fragment>\n      <Table\n        key=\"1\"\n        columns={columns}\n        dataSource={userListData}\n        pagination={false}\n        loading={userListLoading}\n      />\n      <Row justify=\"end\" className=\"mt-2\">\n        <Pagination\n          showSizeChanger={false}\n          showQuickJumper\n          defaultCurrent={page}\n          pageSize={150}\n          current={page}\n          total={total}\n          onChange={onPageChange}\n        />\n      </Row>\n    </Fragment>\n  );\n};\n\nUserList.prototype = {\n  userListData: PropTypes.object.isRequired,\n  userList: PropTypes.object.isRequired,\n  loadUserListDataSuccess: PropTypes.func.isRequired,\n  page: PropTypes.object.isRequired,\n  total: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userListData: state.userList.userListData,\n  userListLoading: state.userList.loading,\n  page: state.userList.page,\n  total: state.userList.total,\n});\n\nexport default connect(mapStateToProps, { loadUserListDataSuccess })(UserList);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-details\\customer-details-components\\SideCards.js",["2100","2101","2102"],"import React from 'react';\nimport { Avatar, Card, Badge, Row, Col } from 'antd';\nimport Flex from 'components/shared-components/Flex';\nimport utils from 'utils';\nimport { EnvironmentOutlined } from '@ant-design/icons';\n\nconst SideCards = (props) => {\n  const { current, customerCurrentData } = props;\n\n  return (\n    <div>\n      <Card>\n        <Row justify='space-between'>\n          <Col>\n            <h4>Address</h4>\n          </Col>\n        </Row>\n        <br></br>\n        <Flex>\n          <Avatar size={40} className='ant-avatar-blue'>\n            <span className='font-weight-bold font-size-md'>\n              <EnvironmentOutlined />\n            </span>\n          </Avatar>\n          <div className='ml-3'>\n            <h5>{customerCurrentData && customerCurrentData.customerName}</h5>\n            <h6>\n              <p>{customerCurrentData && customerCurrentData.address}</p>\n            </h6>\n          </div>\n        </Flex>\n      </Card>\n      <Card hidden>\n        <Row justify='space-between'>\n          <Col>\n            <h4>Geo Location</h4>\n          </Col>\n          <Col></Col>\n        </Row>\n      </Card>\n      <Card>\n        <Row>\n          <Col>\n            <h4>Remark</h4>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <p>{customerCurrentData && customerCurrentData.remark}</p>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default SideCards;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-details\\customer-details-components\\NavBar.js",["2103","2104","2105","2106","2107","2108"],"import React, { Component } from 'react';\nimport { useState } from 'react';\nimport { PageHeader, Button, Tag, Row, Avatar, Popconfirm, Col } from 'antd';\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\nimport Flex from 'components/shared-components/Flex';\nimport {\n  MailOutlined,\n  PhoneOutlined,\n  CalendarOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport utils from 'utils';\nimport { useHistory } from 'react-router-dom';\nimport CApprovalModal from './CApprovalModal';\nimport CRejectModal from './CRejectModal';\nimport moment from 'moment';\n\nconst getCatagoryTagColor = (status) => {\n  if (status === 'B2B') {\n    return 'blue';\n  }\n  if (status === 'B2G') {\n    return 'red';\n  }\n  if (status === 'B2C') {\n    return 'gold';\n  }\n  if (status === 'B2T') {\n    return 'lime';\n  }\n  if (status === 'B2E') {\n    return 'purple';\n  }\n  if (status === 'B2I') {\n    return 'magenta';\n  }\n  if (status === 'B2X') {\n    return 'geekblue';\n  }\n};\nconst getInnerCircleValue = (status) => {\n  if (status) {\n    return 'Yes';\n  } else {\n    return 'No';\n  }\n};\nconst getConditionColor = (status) => {\n  if (status === '1') {\n    return 'green';\n  } else if (status === '-1') {\n    return 'red';\n  } else {\n    return 'gold';\n  }\n};\nconst getConditionValue = (status) => {\n  if (status === '1') {\n    return 'Approved';\n  } else if (status === '-1') {\n    return 'Rejected';\n  } else if (status === '0') {\n    return 'Pending';\n  }\n};\nconst NavBar = (props) => {\n  let history = useHistory();\n  const { onApproval, onReject, customerCurrentData } = props;\n  const [creject, setcreject] = useState(false);\n  const [capproval, setcapproval] = useState(false);\n\n  const opencapproval = () => {\n    setcapproval(true);\n  };\n\n  const opencreject = () => {\n    setcreject(true);\n  };\n\n  return (\n    <div>\n      <div className='site-page-header-ghost-wrapper bg-white'>\n        <PageHeader\n          ghost={false}\n          subTitle={<AppBreadcrumb />}\n          onBack={() => window.history.back()}\n          extra={[\n            <Button\n              onClick={opencreject}\n              className='reject-btn'\n              size='small'\n              key='3'\n              style={{\n                width: 100,\n              }}\n            >\n              Reject\n            </Button>,\n            <Button\n              onClick={opencapproval}\n              className='approve-btn'\n              size='small'\n              key='2'\n              style={{\n                width: 100,\n              }}\n            >\n              Approve\n            </Button>,\n          ]}\n        >\n          <CApprovalModal\n            capproval={capproval}\n            setcapproval={setcapproval}\n            id={customerCurrentData && customerCurrentData.id}\n          />\n          <CRejectModal\n            creject={creject}\n            setcreject={setcreject}\n            id={customerCurrentData && customerCurrentData.id}\n          />\n          <Row>\n            <Col xs={24} sm={24} md={10} lg={10}>\n              <Row>\n                <Avatar shape='square' size={65} className='ant-avatar-blue'>\n                  <span className='font-weight-bold font-size-lg'>\n                    {utils.getNameInitial(\n                      customerCurrentData\n                        ? customerCurrentData.customerName\n                        : 'Dummy Dummy'\n                    )}\n                  </span>\n                </Avatar>\n\n                <div>\n                  <h4 className='ml-3'>\n                    {customerCurrentData && customerCurrentData.customerName}\n                  </h4>\n                </div>\n\n                <Tag\n                  className='ml-3'\n                  color={getConditionColor(\n                    customerCurrentData && customerCurrentData.condition\n                  )}\n                >\n                  {getConditionValue(\n                    customerCurrentData && customerCurrentData.condition\n                  )}\n                </Tag>\n                <Tag\n                  size='small'\n                  className='ml-2'\n                  color={getCatagoryTagColor(\n                    customerCurrentData && customerCurrentData.category\n                  )}\n                >\n                  {customerCurrentData && customerCurrentData.category}\n                </Tag>\n              </Row>\n            </Col>\n            <Col xs={24} sm={24} md={14} lg={14}>\n              <Row className='ml-3'>\n                <Col lg={8}>\n                  <span>\n                    <CalendarOutlined style={{ color: '#4E89FF' }} /> Created :{' '}\n                    {moment(\n                      customerCurrentData && customerCurrentData.created_at\n                    ).format('YYYY-MM-DD')}\n                  </span>\n                </Col>\n                <Col lg={8}>\n                  <span>\n                    <PhoneOutlined style={{ color: '#4E89FF' }} /> Phone :{' '}\n                    {customerCurrentData && customerCurrentData.contact}\n                  </span>\n                </Col>\n                {/* <Col lg={8}>\n                  <span>\n                    <InfoCircleOutlined style={{ color: '#4E89FF' }} />{' '}\n                    Todo Type : test\n                  </span>\n                </Col> */}\n              </Row>\n              <Row className='mt-2 ml-3'>\n                <Col lg={8}>\n                  <span>\n                    <InfoCircleOutlined style={{ color: '#4E89FF' }} /> Inner\n                    Circle :{' '}\n                    {getInnerCircleValue(\n                      customerCurrentData && customerCurrentData.innerCircle\n                    )}\n                  </span>\n                </Col>\n                <Col lg={10}>\n                  <span>\n                    <MailOutlined style={{ color: '#4E89FF' }} /> Email :{' '}\n                    {customerCurrentData && customerCurrentData.email}\n                  </span>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </PageHeader>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\ModalForm.js",["2109","2110","2111","2112","2113","2114","2115"],"import React, {useEffect, useState} from 'react'\nimport {Badge, Button, Col, DatePicker, Form, Modal, Row, Select} from 'antd';\nimport {modalModeTypes} from './utils';\nimport moment from 'moment';\nimport Avatar from \"antd/es/avatar/avatar\";\nimport utils from \"../../../../utils\";\n\nconst {Option} = Select;\nconst contributerOption = [\n    {con_name: 'Knight Rider', id: 1},\n    {con_name: 'Ben10', id: 2},\n];\n\n\nconst ModalForm = ({visible, modalMode, cardData, listId, onClose, onModalSubmit}) => {\n\n    const showClosable = modalMode === modalModeTypes(1) ? false : true\n    const modalWidth = modalMode === modalModeTypes(1) ? 800 : 425;\n\n\n    const [form] = Form.useForm();\n    const [data, setData] = useState({\n        id: null,\n        expected_closing_date: '',\n        contributorList: [],\n\n    });\n\n    useEffect(() => {\n        const conantri = [];\n        let date = '';\n        console.log(cardData)\n\n        if (cardData) {\n            cardData.contributorList.map((d) => {\n                conantri.push(d.id);\n            });\n\n            date = cardData.expected_closing_date\n                ? moment(cardData.expected_closing_date)\n                : '';\n            form.setFieldsValue({\n                id: cardData.id,\n                expected_closing_date: date,\n                contributorList: conantri,\n                tag: cardData.tag,\n            });\n        }\n        return () => {\n            setData({\n                id: null,\n                expected_closing_date: null,\n                contributorList: [],\n            });\n        };\n    }, [cardData])\n\n\n    const submitUpdate = values => {\n        form.validateFields().then((values) => {\n            const {contributorList, expected_closing_date, tag} = values;\n            const arr = [];\n            contributorList.map((c) => {\n                contributerOption.map((opt) => {\n                    if (opt.id == c) {\n                        arr.push(opt);\n                    }\n                });\n                // arr.push(contributerOption[c]);\n            });\n            const updatedValue = {\n                id: cardData.id,\n                projectName: cardData.projectName,\n                contributorList: arr,\n                expected_closing_date:\n                    expected_closing_date && expected_closing_date.format('YYYY-MM-DD'),\n                tag: tag,\n            };\n            console.log(updatedValue)\n\n            submit(updatedValue, 1)\n        });\n    }\n\n\n    const submit = (values, mode) => {\n        onModalSubmit(values, mode)\n        onClose()\n    };\n\n    return (\n        <Modal\n            centered={true}\n            title=\"Update Lead\"\n            visible={visible}\n            closable={showClosable}\n            footer={[<Button type='secondary' htmlType='button' onClick={() => {\n                 onClose()\n            }}>\n                Cancel\n            </Button>,\n                <Button\n                    type='primary'\n                    htmlType='button'\n                    form={'assignCon'}\n                    onClick={submitUpdate}\n                >\n                    Add\n                </Button>,]}\n            width={modalWidth}\n            style={modalMode === modalModeTypes(1) ? {top: 20} : null}\n            destroyOnClose\n            onCancel={() => onClose()}\n\n        >\n            <div style={modalMode === modalModeTypes(1) ? {\n                maxHeight: '85vh',\n                overflowY: 'auto',\n                overflowX: 'hidden'\n            } : null}>\n                <div className={modalMode === modalModeTypes(1) ? 'mr-2 ml-2' : null}>\n                    {\n                        (() => {\n                            return (\n                                <Form\n                                    form={form}\n                                    name={'assignCon'}\n                                    labelCol={{lg: 24}}\n                                    labelAlign='left'\n                                    onFinish={submitUpdate}\n                                >\n                                    <Form.Item\n                                        label='Assign Contributor'\n                                        labelAlign='left'\n                                        labelCol={{lg: 24}}\n                                        name='contributorList'\n                                    >\n                                        <Select mode='tags'>\n                                            {contributerOption.map((opt, index) => (\n                                                <Select.Option key={opt.id} value={opt.id}>\n                                                    <Avatar\n                                                        size='small'\n                                                        className={`ml-1 cursor-pointer ant-avatar-blue`}\n                                                    >\n                      <span className='font-weight-semibold font-size-sm'>\n                        {utils.getNameInitial(opt.con_name)}\n                      </span>\n                                                    </Avatar>\n                                                    {opt.con_name}\n                                                </Select.Option>\n                                            ))}\n                                        </Select>\n                                    </Form.Item>\n                                    <Row gutter={8}>\n                                        <Col xs={24} lg={12}>\n                                            <Form.Item\n                                                className='mb-2'\n                                                label='Expected Closing Date'\n                                                name='expected_closing_date'\n                                            >\n                                                <DatePicker\n                                                    style={{width: '100%'}}\n                                                    disabled={cardData?.expected_closing_date}\n                                                />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col xs={24} lg={12}>\n                                            <Form.Item className='mb-2' label='Lead Status' name='tag'>\n                                                <Select>\n                                                    <Select.Option value='cold'>\n                                                        <Badge color='blue'/> Cold\n                                                    </Select.Option>\n                                                    <Select.Option value='hot'>\n                                                        <Badge color='red'/> Hot\n                                                    </Select.Option>\n                                                </Select>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                                // <UpdateCardForm\n                                // \tcardData={cardData}\n                                // \tlistId={listId}\n                                // \tonSubmit={values => submit(values, modalModeTypes(1))}\n                                // />\n                            );\n\n                        })()\n                    }\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default ModalForm\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\reoreder.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\Board.js",["2116","2117"],"import React, {useContext, useState} from 'react';\nimport {ScrumboardContext} from './ScrumboardContext';\nimport {Draggable} from 'react-beautiful-dnd';\nimport BoardCard from './BoardCard';\nimport {modalModeTypes} from './utils';\n\n\nconst Board = ({\n                   title,\n                   contents,\n                   index,\n                   isScrollable,\n                   isCombineEnabled,\n                   useClone,\n               }) => {\n    const {\n        updateModal,\n        updateModalMode,\n        updateCurrentListId,\n        updateCardData,\n        columns,\n        updateColumns,\n        ordered,\n        updateOrdered,\n    } = useContext(ScrumboardContext);\n    const [renameActive, setRenameActive] = useState('');\n\n    const onUpdateCardModal = (obj, listId) => {\n        updateModal(true);\n        updateModalMode(modalModeTypes(1));\n        updateCurrentListId(listId);\n        updateCardData(obj);\n    };\n\n    const onFinish = (newTitle) => {\n        if (newTitle) {\n            const newColumns = {};\n            delete Object.assign(newColumns, columns, {[newTitle]: columns[title]})[\n                title\n                ];\n            const newOrder = ordered.map((elm) => {\n                if (elm === title) {\n                    return newTitle;\n                }\n                return elm;\n            });\n            updateColumns(newColumns);\n            updateOrdered(newOrder);\n        }\n        setRenameActive('');\n    };\n\n    return (\n        <Draggable draggableId={title} index={index}>\n            {(provided, snapshot) => (\n                <div\n                    className='board-column'\n                >\n                    <div className='board-title'>\n                                <h4 className='mb-0'>{title}</h4>\n                    </div>\n                    <BoardCard\n                        listId={title}\n                        listType='CONTENT'\n                        className={snapshot.isDragging ? 'is-dragging' : ''}\n                        contents={contents}\n                        internalScroll={isScrollable}\n                        isCombineEnabled={isCombineEnabled}\n                        useClone={useClone}\n                        cardData={onUpdateCardModal}\n                    />{' '}\n                </div>\n            )}\n        </Draggable>\n    );\n};\n\nexport default Board;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\ScrumboardContext.js",["2118"],"import React, {useEffect, useReducer} from \"react\";\nimport {scrumboardData} from './ScrumboardData';\n\n\nconst UPDATE_ORDERED = 'UPDATE_ORDERED'\nconst UPDATE_COLUMN = 'UPDATE_COLUMN'\nconst UPDATE_MODAL = 'UPDATE_MODAL'\nconst UPDATE_MODAL_MODE = 'UPDATE_MODAL_MODE'\nconst UPDATE_CURRENT_LIST_ID = 'UPDATE_CURRENT_LIST_ID'\nconst UPDATE_CARD_DATA = 'UPDATE_CARD_DATA'\nconst INITIALIZE = 'INITIALIZE'\n\nexport const scrumboardReducer = (state, action) => {\n    switch (action.type) {\n        case UPDATE_ORDERED:\n            return {\n                ...state,\n                ordered: action.payload\n            }\n        case UPDATE_COLUMN:\n            return {\n                ...state,\n                columns: action.payload\n            }\n        case UPDATE_MODAL:\n            return {\n                ...state,\n                modal: action.payload\n            }\n        case UPDATE_MODAL_MODE:\n            return {\n                ...state,\n                modalMode: action.payload\n            }\n        case UPDATE_CURRENT_LIST_ID:\n            return {\n                ...state,\n                currentListId: action.payload\n            }\n        case UPDATE_CARD_DATA:\n            return {\n                ...state,\n                cardData: action.payload\n            }\n        default:\n            return state;\n    }\n};\n\nexport const ScrumboardContext = React.createContext();\n\nexport const ScrumboardProvider = ({children}) => {\n    const updatedState = {\n        columns: children?.props.columns,\n        ordered: Object.keys(scrumboardData),\n        modal: false,\n        modalMode: '',\n        currentListId: '',\n        cardData: null\n    };\n    const [state, dispatch] = useReducer(scrumboardReducer, updatedState);\n\n    useEffect(() => {\n        dispatch({\n            type: UPDATE_COLUMN,\n            payload: children.props.columns\n        })\n    }, [children])\n    const dispatcher = {\n        updateOrdered: function (ordered) {\n            dispatch({\n                type: UPDATE_ORDERED,\n                payload: ordered\n            });\n        },\n        updateColumns: function (columns) {\n            dispatch({\n                type: UPDATE_COLUMN,\n                payload: columns\n            });\n        },\n        updateModal: function (modal) {\n            dispatch({\n                type: UPDATE_MODAL,\n                payload: modal\n            });\n        },\n        updateModalMode: function (modalMode) {\n            dispatch({\n                type: UPDATE_MODAL_MODE,\n                payload: modalMode\n            });\n        },\n        updateCurrentListId: function (currentListId) {\n            dispatch({\n                type: UPDATE_CURRENT_LIST_ID,\n                payload: currentListId\n            });\n        },\n        updateCardData: function (cardData) {\n            dispatch({\n                type: UPDATE_CARD_DATA,\n                payload: cardData\n            });\n        }\n    }\n\n    return (\n        <ScrumboardContext.Provider\n            value={{\n                ...state,\n                ...dispatcher\n            }}\n        >\n            {children}\n        </ScrumboardContext.Provider>\n    );\n};\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadComponents\\SideCards.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadComponents\\NavBar.js",["2119","2120","2121","2122"],"import React, { Component } from 'react';\nimport { PageHeader, Button, Tag, Row, Avatar, Popconfirm, Col } from 'antd';\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\nimport Flex from 'components/shared-components/Flex';\nimport {\n  MailOutlined,\n  PhoneOutlined,\n  MoneyCollectOutlined,\n  CalendarOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport utils from 'utils';\nimport PropTypes from 'prop-types';\n\nimport { toUpper } from 'lodash';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\n\nimport { updateButtonStatusChange } from '../../../redux/actions/leadListAction';\nimport { useHistory } from 'react-router-dom';\nimport { getStageNameColor, getTagColor } from './utils';\n\nconst NavBar = (props) => {\n  const { current, updateLoading, updateButtonStatusChange } = props;\n  let history = useHistory();\n\n  const onWin = () => {\n    const newStatus = {\n      id: current?.id,\n      status: 'win',\n      contributorList: current?.contributorList,\n    };\n    updateButtonStatusChange(newStatus);\n  };\n  const onLoss = () => {\n    const newStatus = {\n      id: current?.id,\n      status: 'loss',\n      contributorList: current?.contributorList,\n    };\n    updateButtonStatusChange(newStatus);\n  };\n  return (\n    <div>\n      <div className='site-page-header-ghost-wrapper bg-white'>\n        <PageHeader\n          ghost={false}\n          subTitle={<AppBreadcrumb />}\n          onBack={() => window.history.back()}\n          extra={[\n            <Button\n              id='loss'\n              className={\n                'loss-btn' +\n                ' ' +\n                (current?.status === 'loss' ? 'loss-btn-active' : '')\n              }\n              size='small'\n              key='3'\n              onClick={onLoss}\n              loading={updateLoading}\n            >\n              Loss\n            </Button>,\n            <Button\n              className={\n                'win-btn' +\n                ' ' +\n                (current?.status === 'win' ? 'win-btn-active' : '')\n              }\n              size='small'\n              key='2'\n              onClick={onWin}\n              loading={updateLoading}\n            >\n              Won\n            </Button>,\n          ]}\n        >\n          <Row>\n            <Col xs={24} sm={24} md={10} lg={10}>\n              <Row>\n                <Avatar shape='square' size={65} className='ant-avatar-blue'>\n                  <span className='font-weight-bold font-size-lg'>\n                    {utils.getNameInitial(\n                      current?.customer ? current?.customer : 'Dummy Dummy'\n                    )}\n                  </span>\n                </Avatar>\n\n                <div>\n                  <h4 className='ml-3'>\n                    {current?.customer && current?.customer}\n                  </h4>\n\n                  <p className='mb-4 ml-3'>\n                    {current?.projectName && current?.projectName}\n                  </p>\n                </div>\n                {current?.tag && (\n                  <Tag\n                    size='small'\n                    className='ml-2 btn-sm'\n                    color={getTagColor(current?.tag)}\n                  >\n                    {toUpper(current?.tag)}\n                  </Tag>\n                )}\n                <Tag size='small' color={getStageNameColor(current?.stagename)}>\n                  {current?.stagename}\n                </Tag>\n              </Row>\n            </Col>\n            <Col xs={24} sm={24} md={14} lg={14}>\n              <Row>\n                <Col lg={6}>\n                  {current?.project_value && (\n                    <span>\n                      <MoneyCollectOutlined style={{ color: '#4E89FF' }} />{' '}\n                      Value : {numeral(current?.project_value).format('0.0 a')}\n                    </span>\n                  )}\n                </Col>\n                <Col lg={10}>\n                  {current?.email && (\n                    <span>\n                      <MailOutlined style={{ color: '#4E89FF' }} /> Email :{' '}\n                      {current?.email}\n                    </span>\n                  )}\n                </Col>\n                <Col lg={8}>\n                  {current?.contact && (\n                    <span>\n                      <PhoneOutlined style={{ color: '#4E89FF' }} /> Phone :{' '}\n                      {current?.contact}\n                    </span>\n                  )}\n                </Col>\n              </Row>\n              <Row className='mt-2'>\n                <Col lg={6}>\n                  {current?.projecttypename && (\n                    <span>\n                      <InfoCircleOutlined style={{ color: '#4E89FF' }} /> Type :{' '}\n                      {current?.projecttypename}\n                    </span>\n                  )}\n                </Col>\n                <Col lg={10}>\n                  {current?.expected_closing_date && (\n                    <span>\n                      <CalendarOutlined style={{ color: '#4E89FF' }} /> Expected\n                      Date : {current?.expected_closing_date}\n                    </span>\n                  )}\n                </Col>\n                <Col lg={8}>\n                  {current?.megabit && (\n                    <span>\n                      <CalendarOutlined style={{ color: '#4E89FF' }} /> Megabit\n                      : {current?.megabit}\n                    </span>\n                  )}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </PageHeader>\n      </div>\n    </div>\n  );\n};\nNavBar.prototype = {\n  updateLoading: PropTypes.object.isRequired,\n  updateButtonStatusChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  updateLoading: state.leadList.loading,\n});\n\nexport default connect(mapStateToProps, { updateButtonStatusChange })(NavBar);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\layout-components\\NavSearch\\SearchInput.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\admin-panel\\admin-panel.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\admin-panel\\areachart.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListItem.js",["2123","2124"],"import React, { useState } from \"react\";\nimport { Row, Col, Menu } from \"antd\";\nimport {\n  PlusOutlined,\n  EyeOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  StepForwardOutlined,\n} from \"@ant-design/icons\";\nimport { ItemHeader, ItemInfo, ItemMember, ItemProgress } from \"./LeadListInfo\";\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\nimport LeadUpdateModal from \"./LeadListDetails/LeadUpdateModal\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { deleteLead, setCurrent } from \"../redux/actions/leadListAction\";\nimport { useHistory } from \"react-router-dom\";\nimport LeadTranferModal from \"./LeadListDetails/LeadTranferModal\";\nimport moment from \"moment\";\n\nconst ItemAction = ({ data, id, deleteLead, setCurrent }) => {\n  const [showAssingModel, setShowAssingModal] = useState(false);\n\n  const [showTransferModel, setShowTransferModel] = useState(false);\n\n  let history = useHistory();\n\n  const showAModal = (e) => {\n    const conantri = [];\n    data.contributorList.map((d) => {\n      conantri.push(d.id);\n    });\n\n    data.contributorList = conantri;\n    data.expected_closing_date = data.expected_closing_date\n      ? moment(data.expected_closing_date)\n      : \"\";\n    setCurrent(data);\n    setShowAssingModal(true);\n  };\n\n  const showTModal = (e) => {\n    setShowTransferModel(true);\n  };\n\n  const onDelete = () => {\n    deleteLead(id);\n    console.log(id, \"dete\");\n  };\n\n  const onEdit = () => {\n    setCurrent(data);\n    history.push(`/app/lead/list/edit/${id}`);\n  };\n  const onView = (e) => {\n    history.push(`/app/lead/list/details/${id}`);\n  };\n\n  return (\n    <>\n      <EllipsisDropdown\n        menu={\n          <Menu>\n            <Menu.Item key=\"0\" onClick={onView}>\n              <EyeOutlined />\n              <span>View</span>\n            </Menu.Item>\n            <Menu.Item key=\"1\" onClick={showAModal}>\n              <PlusOutlined />\n              <span>Update Lead</span>\n            </Menu.Item>\n            <Menu.Item key=\"2\" onClick={showTModal}>\n              <StepForwardOutlined />\n              <span>Transfer</span>\n            </Menu.Item>\n            <Menu.Item key=\"3\" onClick={onEdit}>\n              <EditOutlined />\n              <span>Edit</span>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item key=\"4\" onClick={onDelete}>\n              <DeleteOutlined />\n              <span>Delete Project</span>\n            </Menu.Item>\n          </Menu>\n        }\n      />\n\n      <LeadUpdateModal\n        key={1}\n        setShowAssingModal={setShowAssingModal}\n        showAssingModel={showAssingModel}\n      />\n      <LeadTranferModal\n        key={2}\n        id={id}\n        showTransferModel={showTransferModel}\n        setShowTransferModel={setShowTransferModel}\n      />\n    </>\n  );\n};\n\nconst LeadListItem = (props) => {\n  const { data, deleteLead, setCurrent } = props;\n\n  const {\n    id,\n    attachments,\n    contributorList,\n    customer,\n    expected_closing_date,\n    projectName,\n    followups,\n    project_value,\n    progressbar,\n  } = data;\n\n  return (\n    <>\n      <div className=\"bg-white rounded p-3 mb-3 border\">\n        <Row align=\"middle\">\n          <Col xs={24} sm={24} md={8}>\n            <ItemHeader\n              customer={customer && customer}\n              projectName={projectName && projectName}\n            />\n          </Col>\n          <Col xs={24} sm={24} md={6}>\n            <ItemInfo\n              attachmentCount={attachments && attachments}\n              completedTask={attachments && followups}\n              expected_closing_date={\n                expected_closing_date && expected_closing_date\n              }\n            />\n          </Col>\n          <Col xs={24} sm={24} md={5}>\n            <ItemProgress progression={progressbar && progressbar} />\n          </Col>\n          <Col xs={24} sm={24} md={3}>\n            <div className=\"ml-0 ml-md-3\">\n              {contributorList && (\n                <ItemMember contributorList={contributorList} />\n              )}\n            </div>\n          </Col>\n          <Col xs={24} sm={24} md={2}>\n            <div className=\"text-right\">\n              <ItemAction\n                data={data}\n                id={id}\n                deleteLead={deleteLead}\n                setCurrent={setCurrent}\n              />\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\nLeadListItem.prototype = {\n  leadListLoading: PropTypes.object.isRequired,\n  deleteLead: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  leadListLoading: state.leadList.loading,\n});\nexport default connect(mapStateToProps, { deleteLead, setCurrent })(\n  LeadListItem\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\map\\map.js",["2125"],"import React, { Component } from 'react';\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  InfoWindow,\n  Marker,\n} from 'react-google-maps';\nimport Geocode from 'react-geocode';\nimport Autocomplete from 'react-google-autocomplete';\n\nconst GoogleMapsAPI = 'AIzaSyAvZ9AHO5_4Q4E9hyv8g6m0j82UVRNPFD4';\n\nGeocode.setApiKey(GoogleMapsAPI);\nGeocode.enableDebug();\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng,\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng,\n      },\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.state.markerPosition.lat !== this.props.center.lat ||\n      this.state.address !== nextState.address\n    ) {\n      return true;\n    } else if (this.props.center.lat === nextProps.center.lat) {\n      return false;\n    }\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onMarkerDragEnd = (event) => {\n    let newLat = event.latLng.lat(),\n      newLng = event.latLng.lng();\n    this.props.onLocation({\n      lat: newLat,\n      lng: newLng,\n    });\n  };\n\n  onPlaceSelected = (place) => {\n    console.log('plc', place);\n    const address = place.formatted_address,\n      addressArray = place.address_components,\n      latValue = place.geometry.location.lat(),\n      lngValue = place.geometry.location.lng();\n    // Set these values in the state.\n    this.setState({\n      address: address ? address : '',\n      markerPosition: {\n        lat: latValue,\n        lng: lngValue,\n      },\n      mapPosition: {\n        lat: latValue,\n        lng: lngValue,\n      },\n    });\n  };\n\n  onInfoWindowClose = (event) => {};\n  render() {\n    const AsyncMap = withScriptjs(\n      withGoogleMap((props) => (\n        <>\n          <GoogleMap\n            google={this.props.google}\n            defaultZoom={this.props.zoom}\n            defaultCenter={{\n              lat: this.state.mapPosition.lat,\n              lng: this.state.mapPosition.lng,\n            }}\n          >\n            {/* InfoWindow on top of marker */}\n            <InfoWindow\n              onClose={this.onInfoWindowClose}\n              position={{\n                lat: this.state.markerPosition.lat + 0.0018,\n                lng: this.state.markerPosition.lng,\n              }}\n            >\n              <div>\n                <span style={{ padding: 0, margin: 0 }}>\n                  {this.state.address}\n                </span>\n              </div>\n            </InfoWindow>\n            {/*Marker*/}\n            <Marker\n              google={this.props.google}\n              name={'Dolores park'}\n              draggable={true}\n              onDragEnd={this.onMarkerDragEnd}\n              position={{\n                lat: this.state.markerPosition.lat,\n                lng: this.state.markerPosition.lng,\n              }}\n            />\n            <Marker />\n            <Autocomplete\n              style={{\n                width: '100%',\n                height: '40px',\n                paddingLeft: '16px',\n                marginTop: '2px',\n              }}\n              onPlaceSelected={this.onPlaceSelected}\n              types={['(regions)']}\n            />\n            {/* For Auto complete Search Box */}\n          </GoogleMap>\n        </>\n      ))\n    );\n\n    let map;\n    if (this.props.center.lat !== undefined) {\n      map = (\n        <div>\n          <AsyncMap\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${GoogleMapsAPI}&libraries=places`}\n            loadingElement={<div style={{ height: '100%' }} />}\n            containerElement={\n              <div className='test' style={{ height: this.props.height }} />\n            }\n            mapElement={<div className='text' style={{ height: '164px' }} />}\n          />\n        </div>\n      );\n    } else {\n      map = <div style={{ height: this.props.height }} />;\n    }\n    return map;\n  }\n}\nexport default Map;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\utils.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\user-management\\RoleManagement\\EditRole.js",["2126"],"import { Button, Col, Form, Input, Modal, Radio, Transfer } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\nconst EditRole = ({ visible, onCancle, id }) => {\n  const [addRoleForm] = Form.useForm();\n  const [mockData, setMockData] = useState([]);\n  const [targetKeys, setTargetKeys] = useState([]);\n\n  useEffect(() => {\n    const mockData = [];\n    const targetKeys = [];\n    for (let i = 0; i < 20; i++) {\n      const data = {\n        key: i.toString(),\n        title: `content${i + 1}`,\n        description: `description of content${i + 1}`,\n        // chosen: Math.random() * 2 > 1,\n      };\n      //   if (data.chosen) {\n      //     targetKeys.push(data.key);\n      //   }\n      mockData.push(data);\n    }\n    setMockData(mockData);\n    setTargetKeys(targetKeys);\n  }, []);\n\n  const handleChange = (targetKeys) => {\n    setTargetKeys(targetKeys);\n  };\n\n  const onSubmit = () => {\n    addRoleForm.validateFields().then((values) => {\n      const { roleName, displayName } = values;\n      const role = {\n        roleName: roleName,\n        displayName: displayName,\n        permission: targetKeys,\n      };\n      console.log(role);\n    });\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={onCancle}\n      title='Add new role'\n      closable\n      centered\n      footer={[\n        <Button onClick={onCancle}>Cancel</Button>,\n        <Button form={\"addRoleForm\"} onClick={onSubmit} type='primary'>\n          Add\n        </Button>,\n      ]}\n    >\n      <Form form={addRoleForm} layout='vertical'>\n        <Form.Item label='Role Name' name='roleName'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Display Name' name='displayName'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Select permission to assign'>\n          <Col xs={24}>\n            <Transfer\n              showSearch\n              dataSource={mockData}\n              render={(item) => item.title}\n              onChange={handleChange}\n              targetKeys={targetKeys}\n              rowKey={(record) => record.title}\n            />\n          </Col>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default EditRole;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\ScrumboardData.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\ModalForm.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\reoreder.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\ScrumboardContext.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\Board.js",["2127"],"import React, { useContext, useState } from 'react';\nimport { ScrumboardContext } from './ScrumboardContext';\nimport { Draggable } from 'react-beautiful-dnd';\nimport BoardCard from './BoardCard';\nimport { modalModeTypes } from './utils';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport { Menu, Form, Input, Modal } from 'antd';\nimport {\n  CloseOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  ExclamationCircleOutlined,\n} from '@ant-design/icons';\n\nconst RenameForm = ({ title, finish }) => {\n  const [form] = Form.useForm();\n\n  const onRenameSubmit = (values) => {\n    finish(values.title);\n  };\n\n  const onClose = () => {\n    form.submit();\n  };\n\n  return (\n    <Form\n      form={form}\n      name='renameField'\n      onFinish={onRenameSubmit}\n      layout='vertical'\n      autoComplete='off'\n      className='w-100'\n      initialValues={{\n        title: title,\n      }}\n    >\n      <Form.Item name='title' className='mb-0'>\n        <Input\n          autoFocus\n          value={title}\n          suffix={\n            <div className='cursor-pointer' onClick={() => onClose()}>\n              <CloseOutlined />\n            </div>\n          }\n        />\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst Board = ({\n  title,\n  contents,\n  index,\n  isScrollable,\n  isCombineEnabled,\n  useClone,\n}) => {\n  const {\n    updateModal,\n    updateModalMode,\n    updateCurrentListId,\n    updateCardData,\n    columns,\n    updateColumns,\n    ordered,\n    updateOrdered,\n  } = useContext(ScrumboardContext);\n  const [renameActive, setRenameActive] = useState('');\n\n  const newCard = (listId) => {\n    updateModal(true);\n    updateModalMode(modalModeTypes(0));\n    updateCurrentListId(listId);\n  };\n\n  const onUpdateCardModal = (obj, listId) => {\n    updateModal(true);\n    updateModalMode(modalModeTypes(1));\n    updateCurrentListId(listId);\n    updateCardData(obj);\n  };\n\n  const onTitleClick = (title) => {\n    setRenameActive(title);\n  };\n\n  const onFinish = (newTitle) => {\n    if (newTitle) {\n      const newColumns = {};\n      delete Object.assign(newColumns, columns, { [newTitle]: columns[title] })[\n        title\n      ];\n      const newOrder = ordered.map((elm) => {\n        if (elm === title) {\n          return newTitle;\n        }\n        return elm;\n      });\n      updateColumns(newColumns);\n      updateOrdered(newOrder);\n    }\n    setRenameActive('');\n  };\n\n  const onBoardDelete = (title) => {\n    Modal.confirm({\n      title: 'Do you want to delete this board?',\n      icon: <ExclamationCircleOutlined />,\n      okText: 'Yes',\n      cancelText: 'Cancel',\n      onOk() {\n        const newOrder = ordered.filter((elm) => elm !== title);\n        const newColumns = {};\n        Object.assign(newColumns, columns);\n        delete newColumns[title];\n        updateColumns(newColumns);\n        updateOrdered(newOrder);\n      },\n    });\n  };\n\n  return (\n    <Draggable draggableId={title} index={index}>\n      {(provided, snapshot) => (\n        <div\n          className='board-column'\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n        >\n          <div className='board-title' {...provided.dragHandleProps}>\n            {renameActive === title ? (\n              <RenameForm title={title} finish={onFinish} />\n            ) : (\n              <>\n                <h4 className='mb-0'>{title}</h4>\n                <EllipsisDropdown\n                  menu={\n                    <Menu>\n                      <Menu.Item onClick={() => onTitleClick(title)}>\n                        <EditOutlined />\n                        <span>Rename Board</span>\n                      </Menu.Item>\n                      <Menu.Item onClick={() => onBoardDelete(title)}>\n                        <DeleteOutlined />\n                        <span>Delete Board</span>\n                      </Menu.Item>\n                    </Menu>\n                  }\n                />\n              </>\n            )}\n          </div>\n          <BoardCard\n            listId={title}\n            listType='CONTENT'\n            className={snapshot.isDragging ? 'is-dragging' : ''}\n            contents={contents}\n            internalScroll={isScrollable}\n            isCombineEnabled={isCombineEnabled}\n            useClone={useClone}\n            cardData={onUpdateCardModal}\n          />\n          {/*\t<div className=\"board-add\" onClick={() => newCard(title)}>\n\t\t\t\t\t\t\t<div>Add task</div>\n\t\t\t\t\t\t</div> */}\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Board;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-details\\customer-details-components\\CRejectModal.js",["2128"],"import React from 'react';\nimport { Button, Col, Modal, Row, Image } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Approve from '../../../../../../assets/images/reject.png';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { customerReject } from '../../../redux/actions/customerAction';\n\nconst CRejectModal = ({\n  creject,\n  setcreject,\n  customerReject,\n  cusRejectLoading,\n  id,\n}) => {\n  let history = useHistory();\n  const onCancel = () => {\n    setcreject(false);\n  };\n\n  const onRejectApproval = () => {\n    customerReject(id);\n    setcreject(false);\n    // history.push(`/app/quotation/approvallist`);\n  };\n  return (\n    <Modal\n      centered\n      visible={creject}\n      onCancel={onCancel}\n      footer={[\n        <Row justify='center'>\n          <Col className='mr-3'>\n            <Button\n              className='r-btn'\n              style={{ borderColor: '#ff4d4f' }}\n              onClick={onCancel}\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              className='reject-btn'\n              onClick={onRejectApproval}\n              loading={cusRejectLoading}\n            >\n              Reject\n            </Button>\n          </Col>\n        </Row>,\n      ]}\n    >\n      <Row justify='center' className='mt-4'>\n        <Col xs={24} className='justify-content-center d-flex mb-2'>\n          <Image src={Approve} width='75px' />\n        </Col>\n\n        <Col xs={24} className=''>\n          <p className='text-center pl-3 pr-3'>\n            Are you sure you want to Reject?\n          </p>\n        </Col>\n      </Row>\n    </Modal>\n  );\n};\n\nCRejectModal.prototype = {\n  cusRejectLoading: PropTypes.object.isRequired,\n  customerReject: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  cusRejectLoading: state.customer.loading,\n});\n\nexport default connect(mapStateToProps, { customerReject })(CRejectModal);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-details\\customer-details-components\\CApprovalModal.js",["2129"],"import { Button, Col, Modal, Row, Image } from 'antd';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Approve from '../../../../../../assets/images/approve.png';\nimport PropTypes from 'prop-types';\nimport { customerApprove } from '../../../redux/actions/customerAction';\n\nconst CApprovalModal = ({\n  capproval,\n  setcapproval,\n  id,\n  customerApprove,\n  cusApprovalLoading,\n}) => {\n  let history = useHistory();\n\n  const onCancel = () => {\n    setcapproval(false);\n  };\n  const onApproveAdditional = () => {\n    customerApprove(id);\n    setcapproval(false);\n    // history.push(`/app/quotation/approvallist`);\n  };\n  return (\n    <Modal\n      centered\n      visible={capproval}\n      onCancel={onCancel}\n      footer={[\n        <Row justify='center'>\n          <Col>\n            <Button\n              className='mr-3'\n              style={{ borderColor: '#1890ff', color: '#1890ff' }}\n              onClick={onCancel}\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type='primary'\n              onClick={onApproveAdditional}\n              loading={cusApprovalLoading}\n            >\n              Approve\n            </Button>\n          </Col>\n        </Row>,\n      ]}\n    >\n      <Row justify='center' className='mt-4'>\n        <Col xs={24} className='justify-content-center d-flex mb-2'>\n          <Image src={Approve} width='75px' />\n        </Col>\n        <Col xs={24} className=''>\n          <p className='text-center pl-3 pr-3'>\n            Are you sure you want to approve?\n          </p>\n        </Col>\n      </Row>\n    </Modal>\n  );\n};\nCApprovalModal.prototype = {\n  cusApprovalLoading: PropTypes.object.isRequired,\n  customerApprove: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  cusApprovalLoading: state.customer.loading,\n});\n\nexport default connect(mapStateToProps, { customerApprove })(CApprovalModal);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\BoardCard.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\LeadBoard\\ScrumboardData.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\components\\shared-components\\StatisticWidget\\index.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\customer\\customer-list\\customer-kanban\\BoardCard.js",["2130","2131","2132","2133"],"import React from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { Card, Tooltip, Tag } from 'antd';\nimport { getLabelsColor, AssigneeAvatar } from './utils';\nimport {\n  CalendarOutlined,\n  CommentOutlined,\n  PaperClipOutlined,\n} from '@ant-design/icons';\nimport moment from 'moment';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nconst InnerCardList = React.memo(function InnerCardList(props) {\n  return props.contents?.map((item, index) => (\n    <Draggable key={item.id} draggableId={item.id} index={index}>\n      {(dragProvided, dragSnapshot) => (\n        <div\n          className='mb-3'\n          key={item.id}\n          ref={dragProvided.innerRef}\n          {...dragProvided.draggableProps}\n          {...dragProvided.dragHandleProps}\n        >\n          <Card\n            hoverable\n            className='board-card'\n            cover={null}\n            onClick={() => props.cardData(item, props.listId)}\n          >\n            {item.labels.map((label) => (\n              <Tooltip title={label} key={label}>\n                <div className={`board-label ${getLabelsColor(label)}`}></div>\n              </Tooltip>\n            ))}\n            <h4 className='mb-2'>{item.name}</h4>\n            <div className='d-flex justify-content-between align-items-center'>\n              <div className='d-flex align-items-center'>\n                {item.dueDate ? (\n                  <Tag className='bg-gray-lightest'>\n                    <span className='ml-1 font-weight-semibold'>\n                      Architecture\n                    </span>\n                  </Tag>\n                ) : null}\n                <div className='d-flex align-self-end'>\n                  <SubIndicator\n                    counts={item.comments.length}\n                    icon={<CommentOutlined />}\n                  />\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n      )}\n    </Draggable>\n  ));\n});\n\nfunction InnerList(props) {\n  const { contents, dropProvided, cardData, listId } = props;\n\n  return (\n    <div className='board-dropzone' ref={dropProvided.innerRef}>\n      <InnerCardList cardData={cardData} contents={contents} listId={listId} />\n      {dropProvided.placeholder}\n    </div>\n  );\n}\n\nfunction SubIndicator(props) {\n  if (props.counts) {\n    return (\n      <p className='mb-0 mr-2'>\n        {props.icon}\n        <span className='ml-1'>{props.counts}</span>\n      </p>\n    );\n  }\n  return null;\n}\n\nexport default function BoardCard(props) {\n  const {\n    ignoreContainerClipping,\n    internalScroll,\n    scrollContainerStyle,\n    isDropDisabled,\n    isCombineEnabled,\n    listId = 'LIST',\n    listType,\n    style,\n    contents,\n    useClone,\n    cardData,\n  } = props;\n  return (\n    <>\n      <Droppable\n        droppableId={listId}\n        type={listType}\n        ignoreContainerClipping={ignoreContainerClipping}\n        isDropDisabled={isDropDisabled}\n        isCombineEnabled={isCombineEnabled}\n        renderClone={useClone}\n      >\n        {(dropProvided, dropSnapshot) => (\n          <Scrollbars\n            style={style}\n            className='board-wrapper'\n            autoHide\n            {...dropProvided.droppableProps}\n          >\n            {internalScroll ? (\n              <div\n                className='board-scrollContainer'\n                style={scrollContainerStyle}\n              >\n                <InnerList\n                  contents={contents}\n                  listId={listId}\n                  cardData={cardData}\n                  dropProvided={dropProvided}\n                />\n              </div>\n            ) : (\n              <InnerList\n                contents={contents}\n                listId={listId}\n                cardData={cardData}\n                dropProvided={dropProvided}\n              />\n            )}\n          </Scrollbars>\n        )}\n      </Droppable>\n    </>\n  );\n}\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\constants\\DateConstant.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadTranferModal.js",["2134","2135"],"import React, { useEffect } from \"react\";\nimport { Modal, Row, Form, Col, Button, Select } from \"antd\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  getMegabitDataSuccess,\n  transferLeadSuccess,\n} from \"../../redux/actions/leadListAction\";\n\nconst LeadTranferModal = (props) => {\n  const {\n    setShowTransferModel,\n    showTransferModel,\n    id,\n    getMegabitDataSuccess,\n    megabitData,\n    transferLeadSuccess,\n    transferLoading,\n    megabitLoading,\n  } = props;\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (showTransferModel) {\n      getMegabitDataSuccess();\n    }\n  }, [showTransferModel]);\n\n  const onCancel = (e) => {\n    setShowTransferModel(false);\n  };\n\n  const handleOk = (e) => {\n    form.validateFields().then((values) => {\n      const { megabit } = values;\n      // const newu = {\n      //   megabit: megabit,\n      // };\n      console.log(id, megabit);\n      transferLeadSuccess(id, megabit);\n      // setShowTransferModel(false);\n      form.resetFields();\n    });\n  };\n\n  return (\n    <Modal\n      key=\"1\"\n      title=\"Transfer Lead\"\n      centered\n      onCancel={onCancel}\n      visible={showTransferModel}\n      footer={[\n        <Button type=\"secondary\" htmlType=\"button\" onClick={onCancel}>\n          Cancel\n        </Button>,\n        <Button\n          type=\"primary\"\n          htmlType=\"button\"\n          form={\"assignTrans\"}\n          onClick={handleOk}\n        >\n          Transfer\n        </Button>,\n      ]}\n    >\n      <Row>\n        <Col lg={24}>\n          <Form\n            form={form}\n            name={\"assignTrans\"}\n            labelCol={{ lg: 24 }}\n            labelAlign=\"left\"\n          >\n            <Form.Item\n              label=\"Chooese Where To Transfer\"\n              labelAlign=\"left\"\n              labelCol={{ lg: 24 }}\n              name=\"megabit\"\n            >\n              <Select showSearch loading={megabitLoading}>\n                {megabitData?.map((data) => {\n                  return (\n                    <Select.Option value={data.code}>{data.code}</Select.Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </Modal>\n  );\n};\n\nLeadTranferModal.prototype = {\n  getMegabitDataSuccess: PropTypes.func.isRequired,\n  megabitData: PropTypes.object.isRequired,\n  transferLeadSuccess: PropTypes.func.isRequired,\n  transferLoading: PropTypes.object.isRequired,\n  megabitLoading: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  megabitData: state.leadList.megabitData,\n  megabitLoading: state.leadList.megabitLoading,\n  transferLoading: state.leadList.transferLoading,\n});\nexport default connect(mapStateToProps, {\n  getMegabitDataSuccess,\n  transferLeadSuccess,\n})(LeadTranferModal);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListInfo.js",["2136"],"import React from 'react';\nimport Flex from 'components/shared-components/Flex';\nimport { Tooltip, Tag, Progress, Avatar, Menu, Popover } from 'antd';\nimport {\n  PaperClipOutlined,\n  ClockCircleOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport utils from 'utils';\nimport { COLORS } from 'constants/ChartConstant';\nimport moment from 'moment';\n\nconst ItemHeader = ({ customer, projectName }) => (\n  <div>\n    <h4 className='mb-0'>{projectName}</h4>\n    <span className='text-muted'>{customer}</span>\n  </div>\n);\nconst ItemInfo = ({\n  attachmentCount,\n  expected_closing_date,\n  completedTask,\n}) => (\n  <Flex alignItems='center'>\n    <div className='mr-3'>\n      <Tooltip title='Attachment'>\n        <PaperClipOutlined className='text-muted font-size-md' />\n        <span className='ml-1 text-muted'>{attachmentCount}</span>\n      </Tooltip>\n    </div>\n\n    <div className='mr-3'>\n      <Tooltip title='Follow up count'>\n        <CheckCircleOutlined className='text-muted font-size-md' />\n        <span className='ml-1 text-muted'>{completedTask}</span>\n      </Tooltip>\n    </div>\n\n    {expected_closing_date && (\n      <div>\n        <Tag className='bg-red' color='red'>\n          <ClockCircleOutlined />\n          <span className='ml-2 font-weight-semibold'>\n            {moment(expected_closing_date).diff(moment(), 'days')} days left\n          </span>\n        </Tag>\n      </div>\n    )}\n  </Flex>\n);\n\nconst getProgressStatusColor = (progress) => {\n  if (progress >= 80) {\n    return COLORS[1];\n  }\n  if (progress < 60 && progress > 30) {\n    return COLORS[3];\n  }\n  if (progress < 30) {\n    return COLORS[2];\n  }\n  return COLORS[0];\n};\n\nconst ItemProgress = ({ progression }) => (\n  <Progress\n    percent={progression}\n    strokeColor={getProgressStatusColor(progression)}\n    size='small'\n  />\n);\n\nconst ItemMember = ({ contributorList }) => {\n  return (\n    <>\n      {contributorList &&\n        contributorList?.map((list, i) =>\n          i <= 2 ? (\n            <Tooltip title={list?.con_name} key={`avatar-${i}`}>\n              <Avatar\n                size='small'\n                className={`ml-1 cursor-pointer ant-avatar-blue`}\n              >\n                <span className='font-weight-semibold font-size-sm'>\n                  {utils.getNameInitial(\n                    list.con_name ? list.con_name : 'Dummy Dummy'\n                  )}\n                </span>\n              </Avatar>\n            </Tooltip>\n          ) : null\n        )}\n      {contributorList.length > 3 ? (\n        <Popover\n          content={\n            contributorList &&\n            contributorList.map((list) => (\n              <Avatar\n                key={list.id}\n                className={`ml-1 cursor-pointer ant-avatar-blue`}\n              >\n                <span className='font-weight-semibold font-size-sm'>\n                  {utils.getNameInitial(\n                    list.con_name ? list.con_name : 'Dummy Dummy'\n                  )}\n                </span>\n              </Avatar>\n            ))\n          }\n          trigger='hover'\n        >\n          <Avatar\n            size={25}\n            className='ml-1 cursor-pointer bg-white border font-size-sm'\n          >\n            <span className='text-gray-light font-weight-semibold'>\n              +{contributorList.length - 3}\n            </span>\n          </Avatar>\n        </Popover>\n      ) : null}\n    </>\n  );\n};\n\nexport { ItemHeader, ItemInfo, ItemProgress, ItemMember };\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadUpdateModal.js",["2137","2138","2139","2140","2141"],"import React, { useState } from 'react';\nimport utils from 'utils';\nimport {\n  Avatar,\n  Modal,\n  Row,\n  Form,\n  Col,\n  Button,\n  Select,\n  DatePicker,\n  Badge,\n  message,\n  Input,\n} from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { updateAssignLead } from '../../redux/actions/leadListAction';\n\nfunction LeadUpdateModal(props) {\n  const {\n    setShowAssingModal,\n    showAssingModel,\n    currentData,\n    updateAssignLead,\n  } = props;\n\n  const [form] = Form.useForm();\n\n  const [data, setData] = useState({\n    id: null,\n    expected_closing_date: null,\n    contributorList: [],\n  });\n\n  useEffect(() => {\n    if (currentData) {\n      setData({\n        id: currentData.id,\n        expected_closing_date: currentData.expected_closing_date,\n        contributorList: currentData.contributorList,\n      });\n      form.setFieldsValue(currentData);\n    }\n  }, [currentData, setData]);\n\n  const onCancel = (e) => {\n    setShowAssingModal(false);\n  };\n\n  // const [set, setSet] = useState([]);\n\n  const contributerOption = [\n    { con_name: 'Knight Rider', id: 1 },\n    { con_name: 'Ben10', id: 2 },\n    { con_name: 'Superman', id: 3 },\n  ];\n\n  // const handleChange = (value) => {\n  //   setSet(value);\n  // };\n\n  const handleOk = (e) => {\n    form.validateFields().then((values) => {\n      const { contributorList, expected_closing_date, tag } = values;\n\n      const arr = [];\n      contributorList.map((c) => {\n        contributerOption.map((opt) => {\n          if (opt.id == c) {\n            arr.push(opt);\n          }\n        });\n        // arr.push(contributerOption[c]);\n      });\n      const newU = {\n        id: data.id,\n        contributorList: arr,\n        expected_closing_date:\n          expected_closing_date && expected_closing_date.format('YYYY-MM-DD'),\n        tag: tag,\n      };\n      updateAssignLead(newU);\n      message.success('Updated');\n      setShowAssingModal(false);\n    });\n  };\n\n  return (\n    <Modal\n      key={2}\n      title='Update Lead'\n      centered\n      onCancel={onCancel}\n      visible={showAssingModel}\n      footer={[\n        <Button type='secondary' htmlType='button' onClick={onCancel}>\n          Cancel\n        </Button>,\n        <Button\n          type='primary'\n          htmlType='button'\n          form={'assignCon'}\n          onClick={handleOk}\n        >\n          Add\n        </Button>,\n      ]}\n    >\n      <Row>\n        <Col lg={24}>\n          <Form\n            form={form}\n            name={'assignCon'}\n            labelCol={{ lg: 24 }}\n            labelAlign='left'\n          >\n            <Form.Item\n              label='Assign Contributor'\n              labelAlign='left'\n              labelCol={{ lg: 24 }}\n              name='contributorList'\n            >\n              <Select mode='tags'>\n                {contributerOption.map((opt, index) => (\n                  <Select.Option key={opt.id} value={opt.id}>\n                    <Avatar\n                      size='small'\n                      className={`ml-1 cursor-pointer ant-avatar-blue`}\n                    >\n                      <span className='font-weight-semibold font-size-sm'>\n                        {utils.getNameInitial(opt.con_name)}\n                      </span>\n                    </Avatar>\n                    {opt.con_name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n            <Row gutter={8}>\n              <Col xs={24} lg={12}>\n                <Form.Item\n                  className='mb-2'\n                  label='Expected Closing Date'\n                  name='expected_closing_date'\n                >\n                  <DatePicker\n                    style={{ width: '100%' }}\n                    disabled={data.expected_closing_date}\n                  />\n                </Form.Item>\n              </Col>\n              <Col xs={24} lg={12}>\n                <Form.Item className='mb-2' label='Lead Status' name='tag'>\n                  <Select>\n                    <Select.Option value='cold'>\n                      <Badge color='blue' /> Cold\n                    </Select.Option>\n                    <Select.Option value='hot'>\n                      <Badge color='red' /> Hot\n                    </Select.Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n\nLeadUpdateModal.prototype = {\n  currentData: PropTypes.object.isRequired,\n  updateAssignLead: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  currentData: state.leadList.current,\n});\n\nexport default connect(mapStateToProps, { updateAssignLead })(LeadUpdateModal);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\LeadListDetails\\LeadComponents\\utils.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\constants\\ChartConstant.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\leadList\\utils.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\map\\LocationPicker.js",["2142","2143","2144"],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationDetails\\NavBar.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\QuotationDetails\\SideCards.js",["2145","2146","2147"],"import React, { Component } from 'react';\nimport { Avatar, Card, Badge, Row, Col, Image } from 'antd';\nimport Flex from 'components/shared-components/Flex';\nimport utils from 'utils';\nimport OrelLogo from '../../../../../assets/images/Orel Logo.png';\n\nconst SideCards = (props) => {\n  const { quotationCurrentData } = props;\n  return (\n    <div>\n      <Card>\n        <Row>\n          <Image src={OrelLogo} width='40%' />\n        </Row>\n        <br></br>\n        <div>\n          <h5>Orel Corporation (Pvt) Ltd,</h5>\n          <h6>\n            <p>No: 76, Kandahena Estate, Artigala Road, Watareka, Padukka.</p>\n            <p>+94 114 792 100</p>\n          </h6>\n        </div>\n      </Card>\n\n      <Card>\n        <Flex>\n          <Avatar shape='square' size={65} className='ant-avatar-blue'>\n            <span className='font-weight-bold font-size-lg'>\n              {utils.getNameInitial(\n                quotationCurrentData.customerDetail\n                  ? quotationCurrentData.customerDetail.customerName\n                  : 'Dummy Dummy'\n              )}\n            </span>\n          </Avatar>\n        </Flex>\n        <br></br>\n        <div>\n          <h5>\n            {quotationCurrentData.customerDetail &&\n              quotationCurrentData.customerDetail.customerName}\n          </h5>\n          <h6>\n            <p>\n              {quotationCurrentData.customerDetail &&\n                quotationCurrentData.customerDetail.address}\n            </p>\n            <p>\n              {quotationCurrentData.customerDetail &&\n                quotationCurrentData.customerDetail.contact}\n            </p>\n          </h6>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default SideCards;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\POUpload\\SideCards.js",[],"E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationAppovalList\\QuotationApprovalList\\QuotaionApprovalList.js",["2148","2149"],"import React from \"react\";\nimport { Menu, Pagination, Row, Table, Avatar } from \"antd\";\nimport utils from \"utils\";\nimport { EyeOutlined } from \"@ant-design/icons\";\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\nimport numeral from \"numeral\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { loadQuotationApprovalListData } from \"../../QuotationList/redux/actions/quotationApprovalListAction\";\nimport { useEffect } from \"react\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { toUpper } from \"lodash\";\n\nconst QuotaionApprovalList = (props) => {\n  const {\n    loadQuotationApprovalListData,\n    quotationApprovalData: { quotationApprovalData, page, loading, total },\n  } = props;\n\n  useEffect(() => {\n    loadQuotationApprovalListData(1);\n  }, []);\n\n  const onChangePage = (page) => {\n    loadQuotationApprovalListData(page);\n  };\n  let history = useHistory();\n\n  const tableDropdownMenu = (row) => {\n    const onView = () => {\n      history.push(`/app/quotation/list/quotationapprovaldetails/${row.id}`);\n    };\n    return (\n      <Menu>\n        <Menu.Item key=\"0\" onClick={onView}>\n          <EyeOutlined />\n          <span>View Details</span>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n  const columns = [\n    {\n      title: \"#\",\n      dataIndex: \"index\",\n      render: (_, record, index) => {\n        return <p className=\"mb-0\"> {index + 1} </p>;\n      },\n    },\n    {\n      title: \"Action By\",\n      dataIndex: \"actionBy\",\n      render: (_, record) => (\n        <Avatar\n          size=\"default\"\n          className={`ml-1 cursor-pointer ant-avatar-blue`}\n          // src={record.img}\n        >\n          <span className=\"font-weight-semibold font-size-sm\">\n            {utils.getNameInitial(\n              record.actionBy ? record.actionBy : \"Dummy Dummy\"\n            )}\n          </span>\n          {/*\n        i <= i++ ? (\n           {record.img ? (\n             ''\n           ) : (\n             <span className='font-weight-semibold font-size-sm'>\n               {utils.getNameInitial(record.name)}\n             </span>\n           )}\n         </Avatar>\n       ) : null,\n       */}\n        </Avatar>\n      ),\n    },\n    {\n      title: \"Quotation No\",\n      dataIndex: \"quotationNo\",\n      render: (_, record) => {\n        return (\n          <div>\n            <p className=\"mb-0\">{record.quotationNo}</p>\n            <p className=\"mb-0\">\n              {moment(record.createdAt).format(\"YYYY-MM-DD\")}\n            </p>\n          </div>\n        );\n      },\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customerDetail\",\n      render: (_, record) => {\n        return (\n          <div>\n            <p className=\"mb-0\">\n              {record.customerDetail.customerName\n                ? record.customerDetail.customerName\n                : \"Dummy Dummy\"}\n            </p>\n            <p className=\"mb-0\">\n              {record.customerDetail.code\n                ? record.customerDetail.code\n                : \"Dummy Dummy\"}\n            </p>\n          </div>\n        );\n      },\n    },\n    {\n      title: \"Note\",\n      dataIndex: \"note\",\n      render: (_, record) => <p className=\"mb-0\">{record.note}</p>,\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"date\",\n      render: (_, record) => (\n        <p className=\"mb-0\">{moment(record.date).format(\"YYYY-MM-DD\")}</p>\n      ),\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"totalAmount\",\n      render: (_, record) => (\n        <p className=\"mb-0\">{numeral(record.totalAmount).format(\"0,0.00\")}</p>\n      ),\n    },\n\n    {\n      title: \"Type\",\n      dataIndex: \"taxType\",\n      render: (_, record) => <p className=\"mb-0\">{record.taxType}</p>,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: (_, record) => <p className=\"mb-0\">{toUpper(record.status)}</p>,\n    },\n    {\n      title: \"\",\n      dataIndex: \"\",\n      render: (_, quotationApprovalData) => (\n        <div className=\"text-right\">\n          <EllipsisDropdown menu={tableDropdownMenu(quotationApprovalData)} />\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Table\n        rowKey=\"id\"\n        columns={columns}\n        dataSource={quotationApprovalData}\n        pagination={false}\n        loading={loading}\n      />\n      <Row justify=\"end\" className=\"mt-2\">\n        <Pagination\n          pageSize={20}\n          defaultCurrent={page}\n          current={page}\n          total={total}\n          onChange={onChangePage}\n        />\n      </Row>\n    </>\n  );\n};\n\nQuotaionApprovalList.prototype = {\n  quotationApprovalData: PropTypes.object.isRequired,\n  loadQuotationApprovalListData: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  quotationApprovalData: state.quotationApprovalList,\n});\nexport default connect(mapStateToProps, { loadQuotationApprovalListData })(\n  QuotaionApprovalList\n);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\POUpload\\Header.js",["2150","2151"],"import React from 'react';\nimport { PageHeader, Button, Tag, Row, Avatar, Col } from 'antd';\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\nimport {\n  MailOutlined,\n  PhoneOutlined,\n  MoneyCollectOutlined,\n} from '@ant-design/icons';\nimport utils from 'utils';\nimport numeral from 'numeral';\n\nimport { getStatusType } from '../quotationUtil';\n\nconst Header = (props) => {\n  const { quotationCurrentData } = props;\n\n  return (\n    <>\n      <PageHeader\n        ghost={false}\n        subTitle={<AppBreadcrumb />}\n        onBack={() => window.history.back()}\n      >\n        <Row>\n          <Col xs={24} sm={24} md={10} lg={10}>\n            <Row>\n              <Avatar shape='square' size={65} className='ant-avatar-blue'>\n                <span className='font-weight-bold font-size-lg'>\n                  {utils.getNameInitial(\n                    quotationCurrentData.customerDetail\n                      ? quotationCurrentData.customerDetail.customerName\n                      : 'Dummy Dummy'\n                  )}\n                </span>\n              </Avatar>\n\n              <Col>\n                <h4 className='ml-3'>\n                  {quotationCurrentData.customerDetail &&\n                    quotationCurrentData.customerDetail.customerName}\n                </h4>\n                <p className='mb-4 ml-3'>\n                  {quotationCurrentData.quotationNo &&\n                    quotationCurrentData.quotationNo}\n                </p>\n              </Col>\n              <Col className='ml-2'>\n                {getStatusType(\n                  quotationCurrentData.status\n                    ? quotationCurrentData.status\n                    : 'pending'\n                )}\n              </Col>\n            </Row>\n          </Col>\n          <Col xs={24} sm={24} md={14} lg={14}>\n            <Row>\n              <Col lg={6}>\n                {quotationCurrentData.totalAmount && (\n                  <span>\n                    <MoneyCollectOutlined style={{ color: '#4E89FF' }} /> Value\n                    :{' '}\n                    {numeral(quotationCurrentData.totalAmount).format('0.0 a')}\n                  </span>\n                )}\n              </Col>\n              <Col lg={10}>\n                <span>\n                  <MailOutlined style={{ color: '#4E89FF' }} /> Email :\n                  {quotationCurrentData.customerDetail &&\n                    quotationCurrentData.customerDetail.email}\n                </span>\n              </Col>\n              <Col lg={8}>\n                <span>\n                  <PhoneOutlined style={{ color: '#4E89FF' }} /> Phone :\n                  {quotationCurrentData.customerDetail &&\n                    quotationCurrentData.customerDetail.contact}\n                </span>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </PageHeader>\n    </>\n  );\n};\n\nexport default Header;\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\quotation\\QuotationList\\POUpload\\POUploadForm.js",["2152","2153","2154"],"import {\n  Card,\n  PageHeader,\n  Row,\n  Form,\n  Input,\n  Col,\n  DatePicker,\n  Select,\n  Upload,\n  message,\n  Button,\n  Modal,\n  Image,\n} from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport CustomerBlockIcon from '../../../../../assets/images/customer block.png';\nimport { connect } from 'react-redux';\nimport { addPORequest } from '../redux/actions/quotationListAction';\nimport $ from 'jquery';\nimport { useHistory } from 'react-router-dom';\nimport { isEmpty } from 'lodash';\nconst { Dragger } = Upload;\n\nconst rules = {\n  note: [\n    {\n      required: false,\n      message: 'Please enter note.',\n    },\n  ],\n};\n\nconst POUploadForm = ({\n  customerValidationLoading,\n  customerValidationData,\n  quotationCurrentData,\n  addPORequest,\n  customerUnblockSendLoading,\n}) => {\n  const [showBlockModel, setBlockModal] = useState(false);\n\n  const [formModal] = Form.useForm();\n  const [formPO] = Form.useForm();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (customerValidationData.is_inactive === 1) {\n      setBlockModal(true);\n    }\n    return () => {\n      setBlockModal(false);\n    };\n  }, [customerValidationData.is_inactive]);\n\n  useEffect(() => {\n    (function (window, document, undefined) {\n      $('.inputfile').each(function () {\n        var $input = $(this),\n          $label = $input.next('label'),\n          labelVal = $label.html();\n\n        $input.on('change', function (e) {\n          var fileName = '';\n\n          if (e.target.value) fileName = e.target.value.split('\\\\').pop();\n\n          if (fileName) $label.find('span').html(fileName);\n          else $label.html(labelVal);\n        });\n\n        // Firefox bug fix\n        $input\n          .on('focus', function () {\n            $input.addClass('has-focus');\n          })\n          .on('blur', function () {\n            $input.removeClass('has-focus');\n          });\n      });\n    })(window, document);\n  }, []);\n\n  const onCancel = (e) => {\n    setBlockModal(false);\n  };\n\n  const handleOk = (e) => {\n    formModal.validateFields().then((values) => {\n      const { note } = values;\n      formPO.validateFields().then((values) => {\n        const { referenceNo, expectedDate, warehouse } = values;\n        const fiIp = document.querySelector('#file-6');\n        const po = new FormData();\n        po.append('file', fiIp.files[0]);\n        po.append(\n          'creditlim',\n          customerValidationData && customerValidationData.is_credit_limit\n        );\n        po.append(\n          'creditperiod',\n          customerValidationData && customerValidationData.is_credit_period\n        );\n        po.append(\n          'qtamount',\n          quotationCurrentData && quotationCurrentData.totalAmount\n        );\n        po.append(\n          'quotationno',\n          quotationCurrentData && quotationCurrentData.quotationNo\n        );\n        po.append(\n          'comcode',\n          quotationCurrentData.customerDetail &&\n            quotationCurrentData.customerDetail.code\n        );\n        po.append(\n          'comname',\n          quotationCurrentData.customerDetail &&\n            quotationCurrentData.customerDetail.customerName\n        );\n        po.append('requestedby', 1);\n        po.append('note', note === '' ? 'No Note' : note);\n        po.append(\n          'expectedDeliveryDate',\n          moment(expectedDate).format('YYYY-MM-DD')\n        );\n        po.append('warehouse', warehouse);\n        po.append('referenceNo', referenceNo);\n\n        try {\n          addPORequest(po, quotationCurrentData && quotationCurrentData.id);\n          console.log(...po);\n          setBlockModal(false);\n          message.success('Unblock Request Created');\n          formPO.resetFields();\n          history.push(`/app/quotation/list`);\n        } catch (error) {\n          message.error('request error');\n        }\n      });\n    });\n  };\n\n  const onSubmit = () => {\n    if (\n      customerValidationData.is_inactive === 1 ||\n      customerValidationData.is_credit_limit === 1 ||\n      customerValidationData.is_credit_period === 1\n    ) {\n      setBlockModal(true);\n    } else {\n      formPO.validateFields().then((values) => {\n        const { referenceNo, expectedDate, warehouse } = values;\n        const fiIp = document.querySelector('#file-6');\n        const po = new FormData();\n        po.append('file', fiIp.files[0]);\n        po.append(\n          'creditlim',\n          customerValidationData && customerValidationData.is_credit_limit\n        );\n        po.append(\n          'creditperiod',\n          customerValidationData && customerValidationData.is_credit_period\n        );\n        po.append(\n          'qtamount',\n          quotationCurrentData && quotationCurrentData.totalAmount\n        );\n        po.append(\n          'quotationno',\n          quotationCurrentData && quotationCurrentData.quotationNo\n        );\n        po.append(\n          'comcode',\n          quotationCurrentData.customerDetail &&\n            quotationCurrentData.customerDetail.code\n        );\n        po.append(\n          'comname',\n          quotationCurrentData.customerDetail &&\n            quotationCurrentData.customerDetail.customerName\n        );\n        po.append('requestedby', 1);\n        po.append(\n          'expectedDeliveryDate',\n          moment(expectedDate).format('YYYY-MM-DD')\n        );\n        po.append('warehouse', warehouse);\n        po.append('referenceNo', referenceNo);\n        try {\n          addPORequest(po, quotationCurrentData && quotationCurrentData.id);\n          console.log(...po);\n          message.success('Purchase Order');\n          formPO.resetFields();\n          history.push(`/app/quotation/list`);\n        } catch (error) {\n          message.error('request error');\n        }\n      });\n    }\n  };\n  const onCanclePOForm = () => {\n    formPO.resetFields();\n    history.push(`/app/quotation/list`);\n  };\n\n  return (\n    <>\n      <PageHeader title='PO Upload' className='pt-0' />\n      <Card loading={customerValidationLoading}>\n        <Form labelAlign='left' labelCol={{ lg: 24 }} form={formPO}>\n          <Row gutter={8}>\n            <Col lg={8}>\n              <Form.Item label='Reference No' name='referenceNo'>\n                <Input size='small' />\n              </Form.Item>\n            </Col>\n            <Col lg={8}>\n              <Form.Item label='Expected Delivery Date' name='expectedDate'>\n                <DatePicker size='small' style={{ width: '100% ' }} />\n              </Form.Item>\n            </Col>\n            <Col lg={8}>\n              <Form.Item label='Warehouse' name='warehouse'>\n                <Select size='small' placeholder='--Select Warehouse--'>\n                  <Select.Option value='Meegoda'>Meegoda</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={24}>\n              <div\n                className='box-input'\n                style={{ display: 'flex', justifyContent: 'center' }}\n              >\n                <input\n                  type='file'\n                  id='file-6'\n                  name='file-6'\n                  className='inputfile inputfile-5'\n                />\n                <label for='file-6'>\n                  <figure>\n                    <svg\n                      xmlns='http://www.w3.org/2000/svg'\n                      width='20'\n                      height='17'\n                      viewBox='0 0 20 17'\n                    >\n                      <path d='M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z' />\n                    </svg>\n                  </figure>{' '}\n                  <span></span>\n                </label>\n              </div>\n            </Col>\n          </Row>\n          <Row className='mt-3' justify='end' gutter={10}>\n            <Col>\n              <Button onClick={onCanclePOForm}>Cancel</Button>\n            </Col>\n            <Col>\n              <Button\n                onClick={onSubmit}\n                type='primary'\n                disabled={\n                  customerValidationData.is_inactive === 1 ? true : false\n                }\n              >\n                Upload\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Card>\n\n      <Modal\n        // onCancel={onCancel}\n        centered\n        visible={showBlockModel}\n        footer={[\n          <Button type='secondary' htmlType='button' onClick={onCancel}>\n            Cancel\n          </Button>,\n          <Button\n            type='primary'\n            htmlType='button'\n            form={'formModal'}\n            onClick={handleOk}\n            loading={customerUnblockSendLoading}\n          >\n            Send\n          </Button>,\n        ]}\n      >\n        <Row justify='center' className='mt-4'>\n          <Col xs={24} className='justify-content-center d-flex mb-2'>\n            <Image src={CustomerBlockIcon} width='75px' />\n          </Col>\n          <Col xs={24}>\n            <h3 className='text-center'>Customer Unblock Request Send</h3>\n          </Col>\n          <Col xs={24} className=''>\n            <p className='text-center pl-3 pr-3'>\n              {customerValidationData && customerValidationData.message}\n            </p>\n          </Col>\n        </Row>\n        <Form form={formModal} name={'formModal'}>\n          <Form.Item\n            label='Note'\n            labelCol={{ lg: 24 }}\n            labelAlign='left'\n            className='pl-3 pr-3'\n            name='note'\n            rules={rules.note}\n          >\n            <Input.TextArea />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nPOUploadForm.prototype = {\n  customerUnblockSendLoading: PropTypes.object.isRequired,\n  addPORequest: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  customerUnblockSendLoading: state.quotationList.loading,\n});\n\nexport default connect(mapStateToProps, { addPORequest })(POUploadForm);\n","E:\\NSBM\\PLDC\\assignment\\c2c-front-ui-dev\\src\\views\\app-views\\lead\\map\\map.js",["2155"],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\index.js",[],["2156","2157"],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\serviceWorker.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\App.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\store\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\reducers\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\sagas\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\configs\\AppConfig.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\reducers\\Auth.js",["2158"],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\reducers\\Theme.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\sagas\\Auth.js",["2159","2160","2161","2162"],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\home\\redux\\reducers\\userPermissionReducer.js",["2163"],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\home\\redux\\sagas\\userPermissionSaga.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\lang\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\layouts\\app-layout\\index.js",["2164"],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\layouts\\auth-layout\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\configs\\EnvironmentConfig.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\constants\\Auth.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\constants\\Theme.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\session\\Session.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\actions\\Auth.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\home\\redux\\userPermissionApi.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\home\\redux\\actions\\userPermissionAction.js",[],["2165","2166"],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\home\\redux\\types\\userPermissionTypes.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\lang\\entries\\si_LK.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\constants\\ThemeConstant.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\lang\\entries\\en_US.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\configs\\NavigationConfig.js",["2167","2168","2169","2170","2171","2172","2173"],"import {\r\n  DashboardOutlined,\r\n  ShoppingOutlined,\r\n  DropboxOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  UnorderedListOutlined,\r\n  FileOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\nimport navigationAdminConfig from './NavigationAdminConfig';\r\n\r\n// const dashBoardNavTree = [\r\n//   {\r\n//     key: 'home',\r\n//     title: 'main_menu',\r\n//     icon: DashboardOutlined,\r\n//     breadcrumb: false,\r\n//     submenu: [\r\n//       {\r\n//         key: 'home',\r\n//         path: `${APP_PREFIX_PATH}/admin`,\r\n//         title: 'home',\r\n//         icon: DashboardOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\nconst productNavTree = [\r\n  {\r\n    key: 'quadrants',\r\n    title: 'quadrants',\r\n    breadcrumb: true,\r\n    submenu: [\r\n\r\n\r\n      {\r\n        key: 'todo',\r\n        title: 'Todo',\r\n        icon: UserOutlined,\r\n        breadcrum: true,\r\n        submenu: [\r\n          {\r\n            key: 'todo_list',\r\n            path: `${APP_PREFIX_PATH}/todo/list`,\r\n            title: 'List',\r\n            breadcrum: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n \r\n    ],\r\n  },\r\n];\r\n\r\nconst navigationConfig = [...productNavTree];\r\n// ..dashBoardNavTree\r\n\r\nexport default navigationConfig;\r\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\HeaderNav.js",["2174","2175","2176"],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\PageHeader.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\Footer.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\MobileNav.js",["2177","2178","2179","2180","2181","2182"],"import React from 'react';\r\nimport { Drawer, Tabs } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent';\r\nimport MenuContentAdmin from './MenuContentAdmin';\r\nimport { onMobileNavToggle } from 'redux/actions/Theme';\r\nimport Logo from './Logo';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport navigationAdminConfig from 'configs/NavigationAdminConfig';\r\nimport {\r\n  UserOutlined,\r\n  UserAddOutlined,\r\n  AppleOutlined,\r\n  AndroidOutlined,\r\n  UserSwitchOutlined\r\n} from '@ant-design/icons';\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement='left'\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection='column' className='h-100'>\r\n        <Flex justifyContent='between' alignItems='center'>\r\n          <Logo mobileLogo={true} />\r\n          <div className='nav-close' onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className='mobile-nav-menu'>\r\n          <Scrollbars autoHide>\r\n            <Tabs defaultActiveKey='2'>\r\n              <Tabs.TabPane\r\n                tab={\r\n                  <span>\r\n                    <UserSwitchOutlined />\r\n                    Task{' '}\r\n                  </span>\r\n                }\r\n                key='1'\r\n              >\r\n                <MenuContent\r\n                  type={NAV_TYPE_SIDE}\r\n                  data={navigationConfig}\r\n                  {...props}\r\n                />\r\n              </Tabs.TabPane>\r\n\r\n            </Tabs>\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\TopNav.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\SideNav.js",["2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2193","2194"],"import React from \"react\";\r\nimport { Avatar, Button, Col, Layout, Space, Tabs } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_DARK,\r\n  NAV_TYPE_SIDE,\r\n} from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport MenuContentAdmin from \"./MenuContentAdmin\";\r\nimport {\r\n  HomeOutlined,\r\n  PieChartOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport AvatarStatus from \"../shared-components/AvatarStatus\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport navigationAdminConfig from \"configs/NavigationAdminConfig\";\r\n\r\nconst { Sider } = Layout;\r\nconst profileImg = \"/img/avatars/thumb-11.jpg\";\r\n\r\nexport const SideNav = ({\r\n  navCollapsed,\r\n  sideNavTheme,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n  return (\r\n    <Sider\r\n      className={`side-nav ${\r\n        sideNavTheme === SIDE_NAV_DARK ? \"side-nav-dark\" : \"\"\r\n      }`}\r\n      width={SIDE_NAV_WIDTH}\r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n\r\n        <div className={\"ml-2\"}>\r\n        \r\n              <MenuContent\r\n                type={NAV_TYPE_SIDE}\r\n                data={navigationConfig}\r\n                {...props}\r\n              />\r\n           \r\n        </div>\r\n      </Scrollbars>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } = theme;\r\n  return { navCollapsed, sideNavTheme };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\auth-views\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\utils\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\configs\\NavigationAdminConfig.js",["2195"],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\http\\axiosHttp.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\Logo.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\MenuContent.js",["2196","2197","2198","2199","2200","2201","2202","2203"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from \"utils\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport {\r\n  DashboardOutlined,\r\n  ShoppingOutlined,\r\n  DropboxOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  UnorderedListOutlined,\r\n  FileOutlined,\r\n  ShareAltOutlined\r\n} from \"@ant-design/icons\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n  const {\r\n    sideNavTheme,\r\n    routeInfo,\r\n    hideGroupTitle,\r\n    localization,\r\n    onMobileNavToggle,\r\n  } = props;\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\r\n  const closeMobileNav = () => {\r\n    if (isMobile) {\r\n      onMobileNavToggle(false);\r\n    }\r\n  };\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      <Menu.ItemGroup key=\"lead_generation\" title=\"Task Board\">\r\n        \r\n        <Menu.Item key=\"todo\" icon={<ShareAltOutlined />}>\r\n          <span>To-Do</span>\r\n          <Link\r\n            onClick={() => closeMobileNav()}\r\n            to={`${APP_PREFIX_PATH}/todo/list`}\r\n          />\r\n        </Menu.Item>\r\n      </Menu.ItemGroup>\r\n\r\n     \r\n     \r\n\r\n      {/* <Menu.ItemGroup key='invoice' title='Invoice'>\r\n        <Menu.Item key='runner invoice' icon={<FileOutlined />}>\r\n          <span>Runner Invoice</span>\r\n          <Link onClick={() => closeMobileNav()} to={`${APP_PREFIX_PATH}`} />\r\n        </Menu.Item>\r\n        <Menu.Item key='repeater invoice' icon={<FileOutlined />}>\r\n          <span>Repeater Invoice</span>\r\n          <Link onClick={() => closeMobileNav()} to={`${APP_PREFIX_PATH}`} />\r\n        </Menu.Item>\r\n      </Menu.ItemGroup>\r\n\r\n      <Menu.ItemGroup key='collection' title='Collection'>\r\n        <Menu.Item key='new collection' icon={<FileOutlined />}>\r\n          <span>New Collection</span>\r\n          <Link onClick={() => closeMobileNav()} to={`${APP_PREFIX_PATH}`} />\r\n        </Menu.Item>\r\n        <Menu.Item key='reconciliation' icon={<FileOutlined />}>\r\n          <span>Reconciliation</span>\r\n          <Link onClick={() => closeMobileNav()} to={`${APP_PREFIX_PATH}`} />\r\n        </Menu.Item>\r\n      </Menu.ItemGroup> */}\r\n\r\n      {/* {props.data.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link\r\n                        onClick={() => closeMobileNav()}\r\n                        to={subMenuSecond.path}\r\n                      />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link\r\n                    onClick={() => closeMobileNav()}\r\n                    to={subMenuFirst.path}\r\n                  />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? (\r\n              <Link onClick={() => closeMobileNav()} to={menu.path} />\r\n            ) : null}\r\n          </Menu.Item>\r\n        )\r\n      )} */}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {props.data.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\redux\\actions\\Theme.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\auth-views\\authentication\\login\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\shared-components\\Flex\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\util-components\\Icon\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\AppBreadcrumb.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\shared-components\\Loading\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\PageHeaderAlt.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\auth-views\\authentication\\login-2\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\shared-components\\EllipsisDropdown\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\auth-views\\components\\LoginForm.js",["2204","2205","2206","2207","2208","2209"],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\util-components\\IntlMessage\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\services\\JwtAuthService.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\assets\\svg\\icon.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\util-components\\CustomIcon\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\auth\\FetchInterceptor.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\history.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\MenuContentAdmin.js",["2210","2211","2212","2213","2214","2215","2216","2217","2218","2219"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu, Grid } from 'antd';\nimport IntlMessage from '../util-components/IntlMessage';\nimport Icon from '../util-components/Icon';\nimport { connect } from 'react-redux';\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\nimport utils from 'utils';\nimport { onMobileNavToggle } from 'redux/actions/Theme';\nimport {\n  DashboardOutlined,\n  ShoppingOutlined,\n  DropboxOutlined,\n  TeamOutlined,\n  UserOutlined,\n  UnorderedListOutlined,\n  FileOutlined,\n} from '@ant-design/icons';\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\n\nconst { SubMenu } = Menu;\nconst { useBreakpoint } = Grid;\n\nconst setLocale = (isLocaleOn, localeKey) =>\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\n\nconst setDefaultOpen = (key) => {\n  let keyList = [];\n  let keyString = '';\n  if (key) {\n    const arr = key.split('-');\n    for (let index = 0; index < arr.length; index++) {\n      const elm = arr[index];\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\n      keyList.push(keyString);\n    }\n  }\n  return keyList;\n};\n\nconst SideNavContentAdmin = (props) => {\n  const {\n    sideNavTheme,\n    routeInfo,\n    hideGroupTitle,\n    localization,\n    onMobileNavToggle,\n  } = props;\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\n  const closeMobileNav = () => {\n    if (isMobile) {\n      onMobileNavToggle(false);\n    }\n  };\n  return (\n    <Menu\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? 'light' : 'dark'}\n      mode='inline'\n      style={{ height: '100%', borderRight: 0 }}\n      defaultSelectedKeys={[routeInfo?.key]}\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\n      className={hideGroupTitle ? 'hide-group-title' : ''}\n    >\n     \n    </Menu>\n  );\n};\n\nconst TopNavContent = (props) => {\n  const { topNavColor, localization } = props;\n  return (\n    <Menu mode='horizontal' style={{ backgroundColor: topNavColor }}>\n      {props.data.map((menu) =>\n        menu.submenu.length > 0 ? (\n          <SubMenu\n            key={menu.key}\n            popupClassName='top-nav-menu'\n            title={\n              <span>\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\n                <span>{setLocale(localization, menu.title)}</span>\n              </span>\n            }\n          >\n            {menu.submenu.map((subMenuFirst) =>\n              subMenuFirst.submenu.length > 0 ? (\n                <SubMenu\n                  key={subMenuFirst.key}\n                  icon={\n                    subMenuFirst.icon ? (\n                      <Icon type={subMenuFirst?.icon} />\n                    ) : null\n                  }\n                  title={setLocale(localization, subMenuFirst.title)}\n                >\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\n                    <Menu.Item key={subMenuSecond.key}>\n                      <span>\n                        {setLocale(localization, subMenuSecond.title)}\n                      </span>\n                      <Link to={subMenuSecond.path} />\n                    </Menu.Item>\n                  ))}\n                </SubMenu>\n              ) : (\n                <Menu.Item key={subMenuFirst.key}>\n                  {subMenuFirst.icon ? (\n                    <Icon type={subMenuFirst?.icon} />\n                  ) : null}\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\n                  <Link to={subMenuFirst.path} />\n                </Menu.Item>\n              )\n            )}\n          </SubMenu>\n        ) : (\n          <Menu.Item key={menu.key}>\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\n            <span>{setLocale(localization, menu?.title)}</span>\n            {menu.path ? <Link to={menu.path} /> : null}\n          </Menu.Item>\n        )\n      )}\n    </Menu>\n  );\n};\n\nconst MenuContentAdmin = (props) => {\n  return props.type === NAV_TYPE_SIDE ? (\n    <SideNavContentAdmin {...props} />\n  ) : (\n    <TopNavContent {...props} />\n  );\n};\n\nconst mapStateToProps = ({ theme }) => {\n  const { sideNavTheme, topNavColor } = theme;\n  return { sideNavTheme, topNavColor };\n};\n\nexport default connect(mapStateToProps, { onMobileNavToggle })(\n  MenuContentAdmin\n);\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\home\\index.js",["2220","2221"],"import React, {useEffect} from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\n// import {getUserPermissionSuccess} from \"./redux/actions/userPermissionAction\";\r\n\r\nconst Home = (props) => {\r\n    // const {getUserPermissionSuccess,userPermission,loading} = props;\r\n\t// useEffect(()=>{\r\n\t// \tgetUserPermissionSuccess(\"000000\");\r\n\t// \tlocalStorage.setItem(\"UserPermissiom\",userPermission);\r\n\t// },[])\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tHome component works!\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nHome.prototype = {\r\n\t// userPermission: PropTypes.object.isRequired,\r\n\t// getUserPermissionSuccess:PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = (state) => {\r\n\tconsole.log(state)\r\n\treturn {\r\n\t\t// userPermission: state.userPermission.userPermission,\r\n\t\t// loading:state.userPermission.loading,\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n",["2222","2223"],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\shared-components\\AvatarStatus\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\shared-components\\StatisticWidget\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\constants\\ChartConstant.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\constants\\DateConstant.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\NavLanguage.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\NavNotification.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\NavProfile.js",["2224"],"import React from \"react\";\r\nimport { Menu, Dropdown, Avatar } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  EditOutlined,\r\n  SettingOutlined,\r\n  ShopOutlined,\r\n  QuestionCircleOutlined,\r\n  LogoutOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Icon from \"components/util-components/Icon\";\r\nimport { signOut } from \"redux/actions/Auth\";\r\n\r\nconst menuItem = [\r\n  {\r\n    title: \"Edit Profile\",\r\n    icon: EditOutlined,\r\n    path: \"/\",\r\n  },\r\n\r\n  {\r\n    title: \"Account Setting\",\r\n    icon: SettingOutlined,\r\n    path: \"/\",\r\n  },\r\n  {\r\n    title: \"Billing\",\r\n    icon: ShopOutlined,\r\n    path: \"/\",\r\n  },\r\n  {\r\n    title: \"Help Center\",\r\n    icon: QuestionCircleOutlined,\r\n    path: \"/\",\r\n  },\r\n];\r\n\r\nexport const NavProfile = (props) => {\r\n  const { signOut } = props;\r\n\r\n  const logout = () => {\r\n    console.log(\"asd\");\r\n    signOut();\r\n  };\r\n\r\n  const profileImg = \"/img/avatars/thumb-11.jpg\";\r\n\r\n  const profileMenu = (\r\n    <div className=\"nav-profile nav-dropdown\">\r\n      <div className=\"nav-profile-header\">\r\n        <div className=\"d-flex\">\r\n          <Avatar size={45} src={profileImg} />\r\n          <div className=\"pl-3\">\r\n            <h4 className=\"mb-0\">Admin</h4>\r\n            <span className=\"text-muted\">Super Admin</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"nav-profile-body\">\r\n        <Menu>\r\n          {/* {menuItem.map((el, i) => {\r\n            return (\r\n              <Menu.Item key={i}>\r\n                <a href={el.path}>\r\n                  <Icon className=\"mr-3\" type={el.icon} />\r\n                  <span className=\"font-weight-normal\">{el.title}</span>\r\n                </a>\r\n              </Menu.Item>\r\n            );\r\n          })} */}\r\n          <Menu.Item key={menuItem.legth + 1} onClick={logout}>\r\n            <span>\r\n              <LogoutOutlined className=\"mr-3\" />\r\n              <span className=\"font-weight-normal\">Sign Out</span>\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Dropdown placement=\"bottomRight\" overlay={profileMenu} trigger={[\"click\"]}>\r\n      <Menu className=\"d-flex align-item-center\" mode=\"horizontal\">\r\n        <Menu.Item>\r\n          <Avatar src={profileImg} />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => {};\r\n\r\nconst mapDispatchToProps = {\r\n  signOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavProfile);\r\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\NavPanel.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\NavSearch\\index.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\components\\layout-components\\NavSearch\\SearchInput.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\redux\\sagas\\todoSagas.js",["2225","2226","2227"],"import {\n  TODO_LIST_LOADDATA,\n  ADD_TODO,\n  DELETE_TODO,\n  SET_CURRENT,\n  UPDATE_TODO,\n  TODO_LIST_LOADDATA_ALL, GET_KANBAN_TODO_SUCCESS, UPDATE_TODO_STAGE,TODO_FILTER_LIST,TODO_FILTER_LIST_SUCCESS\n} from '../types/todoTypes';\nimport {\n  getInflencer,\n  setLoading,\n  todoError,\n  addTodoSuccess,\n  deleteTodoSuccess,\n  setCurrentSuccess,\n  updateTodoSuccess,\n  getTodoDataAll,\n  loaddata, getKanbanTodoData, updateTodoStageSuccess, getFilteredData,\n} from '../action/todoAction';\n\nimport { put, all, fork, call, takeEvery } from 'redux-saga/effects';\nimport {\n  fetchData,\n  createData,\n  deleteData,\n  updateData,\n  fetchDataAll,\n  fetchTODOTodos,\n  fetchRESEARCHTodos,\n  fetchINPROGRESSTodos,\n  fetchREVIEWTodos,\n  fetchCOMPLETEDTodos, \n  // fetch5MTodos,\n  updateStageData,\n  fetchFilteredData\n} from '../api';\n\n\n// import {\n//   getKanbanLeadData,\n//   leadError,\n//   leadloaddata,\n//   updateLeadSuccess\n// } from \"../../../lead/redux/actions/leadListAction\";\n\nexport function* getTodoList() {\n  yield takeEvery(TODO_LIST_LOADDATA, function* (payload) {\n    try {\n      setLoading();\n    \n      const data = yield call(fetchData, payload.page);\n      console.log(data,\"data sage list\")\n      yield put(getInflencer(data.data, data.data.total));\n    } catch (err) {\n      yield put(todoError(err));\n    }\n  });\n}\nexport function* getFilteredTodoList() {\n  yield takeEvery(TODO_FILTER_LIST_SUCCESS, function* (payload) {\n    try {\n      setLoading();\n      const data = yield call(fetchFilteredData, payload.page, payload.category, payload.todoType, payload.todoName);\n      yield put(getFilteredData(data.data));\n      console.log(data.data)\n    } catch (err) {\n      yield put(todoError(err));\n    }\n  });\n}\nexport function* getTodoListDataAll() {\n  yield takeEvery(TODO_LIST_LOADDATA_ALL, function* () {\n    try {\n      const data = yield call(fetchDataAll);\n  \n      yield put(getInflencer(data));\n    } catch (err) {\n      yield put(todoError(err));\n    }\n  });\n}\nexport function* createTodo() {\n  yield takeEvery(ADD_TODO, function* (payload) {\n    try {\n      const data = payload.data;\n      // data.status = 'active';\n      yield call(createData, data);\n      yield put(addTodoSuccess());\n      yield put(loaddata(1));\n    } catch (err) {\n      console.log(err);\n      yield put(todoError(err));\n    }\n  });\n}\nexport function* removeTodo() {\n  yield takeEvery(DELETE_TODO, function* (payload) {\n    console.log(payload,\"deleee\")\n    try {\n      const projectId = payload.projectId;\n      yield call(deleteData, projectId);\n      yield put(deleteTodoSuccess());\n      yield put(loaddata(1));\n    } catch (err) {\n      console.log(err, 'Error remove');\n      yield put(todoError(err));\n    }\n  });\n}\n\nexport function* updateTodoStageData() {\n  yield takeEvery(UPDATE_TODO_STAGE, function* (payload) {\n    console.log(payload)\n    try {\n      const data = payload.data;\n      yield call(updateStageData, data);\n      yield put(updateTodoStageSuccess());\n      yield put(loaddata(1));\n    } catch (err) {\n      // yield put(leadError(err));\n    }\n  });\n}\n\n\nexport function* loadTodoKanbanData() {\n  yield takeEvery(GET_KANBAN_TODO_SUCCESS, function* () {\n    try {\n      const [stage1,stage2,stage3,stage4,stage5,stage6] = yield all([\n        call(fetchTODOTodos),\n        call(fetchRESEARCHTodos),\n        call(fetchINPROGRESSTodos),\n        call(fetchREVIEWTodos),\n        call(fetchCOMPLETEDTodos),\n        // call(fetch5MTodos)\n      ])\n\n      const columns = {\n        \"Todo\": stage1,\n        \"Research\":stage2,\n        \"Inprogress\": stage3,\n        \"Review\": stage4,\n        \"Completed\":stage5,\n        // \"5M Purchases\":stage6,\n      }\n      yield put(getKanbanTodoData(columns));\n    } catch (err) {\n      // yield put(leadError(err));\n    }\n  });\n}\n\nexport function* setCurrentTodoList() {\n  yield takeEvery(SET_CURRENT, function* (payload) {\n    try {\n      yield put(setCurrentSuccess(payload.data));\n    } catch (err) {\n      yield put(todoError(err));\n    }\n  });\n}\n\nexport function* updateInfluncerData() {\n  yield takeEvery(UPDATE_TODO, function* (payload) {\n    try {\n      const data = payload.data;\n      // data.status = 'active';\n      yield call(updateData, data);\n      yield put(updateTodoSuccess());\n      yield put(loaddata(1));\n    } catch (err) {\n      yield put(todoError(err));\n    }\n  });\n}\nexport default function* rootSaga() {\n  yield all([\n    fork(getTodoList),\n    fork(createTodo),\n    fork(removeTodo),\n    fork(setCurrentTodoList),\n    fork(updateInfluncerData),\n    fork(getTodoListDataAll),\n    fork(loadTodoKanbanData),\n    fork(updateTodoStageData),\n    fork(getFilteredTodoList)\n  ]);\n}\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\redux\\reducers\\todoReducer.js",["2228"],"import {\n  TODO_LIST_LOADDATA,\n  ADD_TODO,\n  ADD_TODO_SUCCESS,\n  GET_TODO,\n  DELETE_TODO,\n  DELETE_TODO_SUCCESS,\n  UPDATE_TODO,\n  UPDATE_TODO_SUCCESS,\n  SET_CURRENT,\n  SET_CURRENT_SUCCESS,\n  CLEAR_CURRENT,\n  TODO_ERROR,\n  SET_LOADING,\n  GET_TODO_LIST_ALL,\n  TODO_LIST_LOADDATA_ALL,\n  GET_KANBAN_TODO_LIST_DATA,\n  GET_KANBAN_TODO_SUCCESS,\n  GET_KANBAN_TODO_ERROR,\n  TODO_FILTER_LIST,\n  TODO_FILTER_LIST_SUCCESS,\n} from \"../types/todoTypes\";\n\n\nconst initialState = {\n  data: [],\n  message: \"\",\n  showMessage: false,\n  page: 1,\n  total: 0,\n  loading: false,\n  current: null,\n  error: null,\n  columns: {},\n  kanbanLoading: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TODO:\n      console.log(action.data,\"reducer data\")\n      return {\n        ...state,\n        data: action.data,\n        total: action.total,\n        loading: false,\n      };\n    case TODO_LIST_LOADDATA:\n      return {\n        ...state,\n        page: action.page,\n        loading: true,\n      };\n    case GET_TODO_LIST_ALL:\n      return {\n        ...state,\n        data: action.data,\n        loading: false,\n      };\n    case GET_KANBAN_TODO_SUCCESS:\n      return {\n        ...state,\n        kanbanLoading: true,\n      };\n    case GET_KANBAN_TODO_LIST_DATA:\n      console.log(action.data);\n      return {\n        ...state,\n        columns: action.data,\n        kanbanLoading: false,\n      };\n    case GET_KANBAN_TODO_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case TODO_LIST_LOADDATA_ALL:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ADD_TODO:\n      return {\n        ...state,\n        data: [action.data, ...state.data],\n        loading: true,\n      };\n    case ADD_TODO_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        data: state.data.filter((todo) => todo.projectId !== action.projectId),\n        loading: true,\n      };\n    case DELETE_TODO_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case UPDATE_TODO:\n      console.log(\"influ update\");\n      return {\n        ...state,\n        // data : state.data,\n        data: state.data.map((d) =>\n          d.id === action.data.id ? action.data : d\n        ),\n        lodaing: true,\n      };\n    case UPDATE_TODO_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case SET_CURRENT:\n      console.log(action.data,\"current reducer\")\n      return {\n        ...state,\n        current: action.data,\n        loading: true,\n      };\n    case SET_CURRENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case TODO_ERROR:\n      console.log(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case TODO_FILTER_LIST:\n      console.log(action)\n      return {\n        ...state,\n        data: action.data,\n        loading: false,\n      };\n    case TODO_FILTER_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todoMain.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-listTable\\todoList.js",["2229","2230","2231","2232","2233"],"import { Menu, Pagination, Row, Table, Tag,Tooltip } from \"antd\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport { EyeOutlined, EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\nimport React, { useState } from \"react\";\nimport utils from \"utils\";\nimport Moment from \"react-moment\";\nimport { toUpper } from \"lodash\";\n\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\nimport {\n  deleteTodo,\n  setCurrent,\n} from \"../../redux/action/todoAction\";\nimport { useHistory } from \"react-router-dom\";\n\nconst getStatusTagColor = (status) => {\n  if (status === \"Todo\") {\n    return \"red\";\n  }\n  if (status === \"Research\") {\n    return \"cyan\";\n  }\n  if (status === \"Inprogress\") {\n    return \"green\";\n  } \n  if (status === \"Review\") {\n    return \"blue\";\n  } \n   else {\n    return \"gold\";\n  }\n};\n\nconst getInnerCircleValue = (status) => {\n  if (status) {\n    return \"Yes\";\n  } else {\n    return \"No\";\n  }\n};\n\nconst InfluenceList = (props) => {\n  const {\n    todosList,\n    deleteTodo,\n    setCurrent,\n    data,\n    page,\n    total,\n    loading,\n    onChangePage,\n  } = props;\n  let history = useHistory();\n\n  const tableDropdownMenu = (row) => {\n    const onDelete = () => {\n      deleteTodo(row.projectId);\n      console.log(`deleted row ${row.projectId}`);\n    };\n    const onEdit = () => {\n      setCurrent(row);\n      history.push(`/app/todo/list/edit/${row.projectId}`);\n    };\n    return (\n      <Menu>\n        {/* <Menu.Item key=''>\n          <EyeOutlined />\n          <span>View</span>\n        </Menu.Item> */}\n        <Menu.Item key=\"1\" onClick={onEdit}>\n          <EditOutlined />\n          <span>Edit</span>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item key=\"2\" onClick={onDelete}>\n          <DeleteOutlined />\n          <span>Delete</span>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  const columns = [\n    {\n      title: \"\",\n      dataIndex: \"image\",\n      render: (_, record, i) => {\n        return i <= i++ ? (\n          <Avatar size=\"default\" className={`ml-1 ant-avatar-cyan`}>\n            <span className=\"font-weight-semibold font-size-sm\">\n              {utils.getNameInitial(record?.title)}\n            </span>\n          </Avatar>\n        ) : null;\n      },\n    },\n\n\n    {\n      key: \"ProjectName\",\n      title: \"Project Name\",\n      dataIndex: \"pname\",\n      render: (_, record) => {\n        return <p className=\"mb-0\">{record.title && record.title}</p>;\n      },\n    },\n    {\n      key: \"status\",\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: (_, record) => (\n            <Tag color={getStatusTagColor(record.status && record.status)}>\n              {record.status}\n            </Tag>\n          ),\n    },\n    {\n      key: \"name\",\n      title: \"Assignee Name\",\n      dataIndex: \"name\",\n      render: (_, record) => <p className=\"mb-0\">{record?.owner}</p>,\n    },\n\n\n    {\n      key: \"description\",\n      title: \"Description\",\n      dataIndex: \"des\",\n      render: (_, record) => {\n        return (\n        <Tooltip placement=\"bottom\" title={record.description}>\n          <p className=\"mb-0\">{record.description && record.description}</p>\n          </Tooltip>);\n      },\n    },\n \n    {\n      key: \"created_at\",\n      title: \"Created Date\",\n      dataIndex: \"created_at\",\n      render: (_, record) => (\n        <p className=\"mb-0\">\n          <span>\n            <Moment format=\"YYYY/MM/DD\">\n              {record.startDate && record.startDate}\n            </Moment>\n          </span>\n        </p>\n      ),\n    },\n    {\n      key: \"endDate\",\n      title: \"End Date\",\n      dataIndex: \"endDate\",\n      render: (_, record) => (\n        <p className=\"mb-0\">\n          <span>\n            <Moment format=\"YYYY/MM/DD\">\n              {record.endDate && record.endDate}\n            </Moment>\n          </span>\n        </p>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"\",\n      render: (_, todosList) => (\n        <div className=\"text-right\">\n          <EllipsisDropdown\n            menu={tableDropdownMenu(todosList && todosList)}\n          />\n        </div>\n      ),\n    },\n  ];\n  console.log(data.data,\"data list\")\n  return (\n    <>\n      <Table\n        columns={columns}\n        dataSource={data.data}\n        loading={loading}\n        pagination={false}\n      />\n      <Row justify=\"end\" className=\"mt-2\">\n        <Pagination\n          defaultCurrent={page}\n          current={page}\n          total={total}\n          onChange={onChangePage}\n        />\n      </Row>\n    </>\n  );\n};\n\nInfluenceList.prototype = {\n  data: PropTypes.object.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.todo,\n});\n\nexport default connect(mapStateToProps, {\n  deleteTodo,\n  setCurrent,\n})(InfluenceList);\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\redux\\action\\todoAction.js",["2234"],"import {\n  TODO_LIST_LOADDATA,\n  ADD_TODO,\n  ADD_TODO_SUCCESS,\n  GET_TODO,\n  DELETE_TODO,\n  DELETE_TODO_SUCCESS,\n  UPDATE_TODO,\n  UPDATE_TODO_SUCCESS,\n  SET_CURRENT,\n  SET_CURRENT_SUCCESS,\n  GET_KANBAN_TODO_SUCCESS,\n  GET_KANBAN_TODO_ERROR,\n  GET_KANBAN_TODO_LIST_DATA,\n  TODO_ERROR,\n  SET_LOADING,\n  TODO_LIST_LOADDATA_ALL,\n  GET_TODO_LIST_ALL,\n  UPDATE_TODO_STAGE,\n  UPDATE_TODO_STAGE_SUCCESS,\n  TODO_FILTER_LIST,\n  TODO_FILTER_LIST_SUCCESS,\n  TODO_FILTER_LIST_ERROR,\n} from \"../types/todoTypes\";\n\n\n//requestTodo data\n\nexport const loadTodoDataAll = () => {\n  return {\n    type: TODO_LIST_LOADDATA_ALL,\n  };\n};\n\nexport const getTodoDataAll = (data) => {\n  return {\n    type: GET_TODO_LIST_ALL,\n    data,\n  };\n};\nexport const loaddata = (page) => {\n  return {\n    type: TODO_LIST_LOADDATA,\n    page,\n  };\n};\n\nexport const loadFilteredData = (\n  page,\n  category,\n  todoType,\n  todoName\n) => {\n  return {\n    type: TODO_FILTER_LIST_SUCCESS,\n    page,\n    category,\n    todoType,\n    todoName,\n  };\n};\n\nexport const getFilteredData = (data) => {\n  return {\n    type: TODO_FILTER_LIST,\n    data,\n  };\n};\n\n//getData\nexport const getInflencer = (data, total) => {\n  console.log(data,\"action list\")\n  return{\n  type: GET_TODO,\n  data,\n  total,\n}};\n\nexport const addTodo = (data) => {\n  return {\n    type: ADD_TODO,\n    data,\n  };\n};\nexport const addTodoSuccess = () => {\n  return {\n    type: ADD_TODO_SUCCESS,\n  };\n};\n\nexport const deleteTodo = (projectId) => {\n  return {\n    type: DELETE_TODO,\n    projectId,\n  };\n};\n\nexport const getKanbanTodoLoading = () => {\n  return {\n    type: GET_KANBAN_TODO_SUCCESS,\n  };\n};\n\nexport const getKanbanTodoData = (data) => {\n  return {\n    type: GET_KANBAN_TODO_LIST_DATA,\n    data,\n  };\n};\n\nexport const updateTodoStage = (data) => {\n  console.log(data);\n  return {\n    type: UPDATE_TODO_STAGE,\n    data,\n  };\n};\nexport const updateTodoStageSuccess = () => {\n  return {\n    type: UPDATE_TODO_STAGE_SUCCESS,\n  };\n};\n\nexport const kanbanDataError = (err) => ({\n  type: GET_KANBAN_TODO_ERROR,\n  payload: err.message,\n});\n\nexport const deleteTodoSuccess = () => {\n  return {\n    type: DELETE_TODO_SUCCESS,\n  };\n};\n\nexport const updateTodo = (data) => {\n  return {\n    type: UPDATE_TODO,\n    data,\n  };\n};\nexport const updateTodoSuccess = () => {\n  return {\n    type: UPDATE_TODO_SUCCESS,\n  };\n};\n\nexport const setCurrent = (data) => {\n  return {\n    type: SET_CURRENT,\n    data,\n  };\n};\n\nexport const setCurrentSuccess = () => {\n  return {\n    type: SET_CURRENT_SUCCESS,\n  };\n};\n\nexport const todoError = (err) => ({\n  type: TODO_ERROR,\n  payload: err.message,\n});\n\nexport const setLoading = () => ({\n  type: SET_LOADING,\n});\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\redux\\types\\todoTypes.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\redux\\api.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-listTable\\addTodo.js",["2235","2236","2237","2238"],"import React, { Fragment, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n  Select,\n  Switch,\n  PageHeader,\n  DatePicker,\n} from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport FormItem from \"antd/lib/form/FormItem\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport AppBreadcrumb from \"components/layout-components/AppBreadcrumb\";\nimport moment from \"moment\";\nimport { addTodo } from \"../../redux/action/todoAction\";\n\nimport BgImg from \"../../../../../assets/images/img-11.png\";\n\n\n// const phoneNumSelect = (\n//   <Form.Item name='prefix' noStyle>\n//     <Select style={{ width: 70 }}>\n//       <Select.Option value='+94'>+94</Select.Option>\n//     </Select>\n//   </Form.Item>\n// );\n\nconst AddTodo = (props) => {\n  const {\n    addTodo,\n    todo: { loading },\n\n    // todoTypeData: { todoTypeData },\n    // todoTypeLoading,\n  } = props;\n\n  let history = useHistory();\n  const [form] = Form.useForm();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    form.validateFields().then((values) => {\n      const {\n        owner,\n        title,\n        status,\n        description,\n        startDate,\n        endDate,\n        \n      } = values;\n      const newTodo = {\n        owner: owner,\n        title : title,\n        status: status,\n        description:description,\n        startDate:startDate,\n        endDate: endDate,\n      \n      };\n      console.log(newTodo,\"add data\");\n      addTodo(newTodo);\n      history.push(\"/app/todo/list\");\n    });\n  };\n  const onCancle = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"Add Todo\"\n        subTitle={<AppBreadcrumb />}\n        onBack={() => history.goBack()}\n        display\n      />\n      <div className=\"container\">\n        <Card bordered={false} style={{ width: \"100%\" }}>\n          <Row justify=\"center\" align=\"middle\">\n            <Col xs={24} sm={24} md={24} lg={14}>\n              {/* Form */}\n              <Form form={form} labelCol={{ lg: 6, md: 6 }} >\n                <Form.Item label=\"Project Name\" name=\"title\"   required={true}>\n                  <Input />\n                </Form.Item>\n                <Form.Item label=\"Assignee Name\" name=\"owner\"   required={true}>\n                  <Input />\n                </Form.Item>\n\n                <Form.Item label=\"Status\" name=\"status\"   required={true}>\n                  <Select placeholder=\"-Select Status-\" value>\n                    <Select.Option value=\"Todo\">To-Do</Select.Option>\n                    <Select.Option value=\"Research\">Research</Select.Option>\n                    <Select.Option value=\"Inprogress\">Inprogress</Select.Option>\n                    <Select.Option value=\"Review\">Review</Select.Option>\n                    <Select.Option value=\"completed\">Completed</Select.Option>\n                  </Select>\n                </Form.Item>\n                <Form.Item>\n                  <Row gutter={16}>\n                    <Col xs={24} md={24} lg={12}>\n                      <Form.Item label=\"Start Date\" name=\"startDate\"  labelCol={{ lg: 12, md: 6 }}   required={true}>\n                        <DatePicker\n                          defaultValue={moment(\"2022-01-01\", \"YYYY-MM-DD\")}\n                        />\n                      </Form.Item>\n                    </Col>\n                    <Col xs={24} md={24} lg={12}>\n                      <Form.Item label=\"End Date\" name=\"endDate\" labelCol={{ lg: 12, md: 6 }}   required={true}>\n                        <DatePicker\n                          defaultValue={moment(\"2022-01-01\", \"YYYY-MM-DD\")}\n                        />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Description\"\n                  name=\"description\"\n                  required={true}\n                >\n                  <TextArea />\n                </Form.Item>\n                <Form.Item>\n                  <Row gutter={16} justify=\"end\">\n                    <Col>\n                      <Button htmlType=\"button\" onClick={onCancle}>\n                        Cancel\n                      </Button>\n                    </Col>\n                    <Col>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        onClick={onSubmit}\n                      >\n                        Add\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Form>\n            </Col>\n\n            <Col\n              className=\"bgImgOfForm\"\n              md={12}\n              lg={10}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <img src={BgImg} alt=\"bgimg\" width=\"400\" className=\"img\" />\n            </Col>\n          </Row>\n        </Card>\n      </div>\n    </Fragment>\n  );\n};\n\nAddTodo.prototype = {\n  todo: PropTypes.object.isRequired,\n  addTodo: PropTypes.func.isRequired,\n  // todoTypeData: PropTypes.object.isRequired,\n  // todoTypeLoading: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  todo: state.todo,\n  // todoTypeData: state.todoType,\n  // todoTypeLoading: state.todoType.todoTypeLoading,\n});\nexport default connect(mapStateToProps, { addTodo })(AddTodo);\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-listTable\\editTodo.js",["2239","2240","2241"],"import React, { Fragment, useEffect } from 'react';\nimport {\n  Button,\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n  Select,\n  Switch,\n  PageHeader,\n  DatePicker\n} from 'antd';\nimport FormItem from 'antd/lib/form/FormItem';\nimport TextArea from 'antd/lib/input/TextArea';\nimport moment from \"moment\";\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport BgImg from '../../../../../assets/images/addcustomerbg.png';\n\nimport { updateTodo } from '../../redux/action/todoAction';\n\n\n\n\nconst EditTodo = (props) => {\n  const {\n    current,\n    updateTodo,\n    loading,\n   \n   \n  } = props;\n  console.log(current,\"current\");\n\n  let history = useHistory();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    form.setFieldsValue({\n      owner: current.owner,\n      title : current.title,\n      status: current.status,\n      description:current.description,\n      startDate:moment(current.startDate),\n      endDate: moment(current.endDate),\n    });\n  }, [form, current]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    form.validateFields().then((values) => {\n      const {\n        owner,\n        title,\n        status,\n        description,\n        startDate,\n        endDate,\n      } = values;\n      const updateTodoNewData = {\n        projectId: current.projectId,\n        owner: owner,\n        title : title,\n        status: status,\n        description:description,\n        startDate: startDate,\n        endDate: endDate,\n      };\n      console.log(updateTodoNewData,\"update data\");\n      updateTodo(updateTodoNewData);\n      history.push('/app/todo/list');\n    });\n  };\n  const onCancle = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n  return (\n    <Fragment>\n      <PageHeader title='Edit Todo' display />\n      <div className='container'>\n        <Card bordered={false} style={{ width: '100%' }}>\n        <Row justify=\"center\" align=\"middle\">\n            <Col xs={24} sm={24} md={24} lg={14}>\n              {/* Form */}\n              <Form form={form} labelCol={{ lg: 6, md: 6 }}>\n                <Form.Item label=\"Project Name\" name=\"title\"   required={true}>\n                  <Input />\n                </Form.Item>\n                <Form.Item label=\"Assignee Name\" name=\"owner\"   required={true}>\n                  <Input />\n                </Form.Item>\n\n                <Form.Item label=\"Status\" name=\"status\"   required={true}>\n                <Select placeholder=\"-Select Status-\" value>\n                    <Select.Option value=\"Todo\">To-Do</Select.Option>\n                    <Select.Option value=\"Research\">Research</Select.Option>\n                    <Select.Option value=\"Inprogress\">Inprogress</Select.Option>\n                    <Select.Option value=\"Review\">Review</Select.Option>\n                    <Select.Option value=\"completed\">Completed</Select.Option>\n                  </Select>\n                </Form.Item>\n                <Form.Item>\n                  <Row gutter={16}>\n                    <Col xs={24} md={24} lg={12}>\n                      <Form.Item label=\"Start Date\" name=\"startDate\"  labelCol={{ lg: 12, md: 6 }}   required={true}>\n                        <DatePicker\n                          // defaultValue={moment(\"2022-01-01\", \"YYYY-MM-DD\")}\n                        />\n                      </Form.Item>\n                    </Col>\n                    <Col xs={24} md={24} lg={12}>\n                      <Form.Item label=\"End Date\" name=\"endDate\" labelCol={{ lg: 12, md: 6 }}   required={true}>\n                        <DatePicker\n                          // defaultValue={moment(\"2022-01-01\", \"YYYY-MM-DD\")}\n                        />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Description\"\n                  name=\"description\"\n                  required={true}\n                \n                >\n                  <TextArea />\n                </Form.Item>\n                <Form.Item>\n                  <Row gutter={16} justify=\"end\">\n                    <Col>\n                      <Button htmlType=\"button\" onClick={onCancle}>\n                        Cancel\n                      </Button>\n                    </Col>\n                    <Col>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        onClick={onSubmit}\n                      >\n                        Add\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Form>\n            </Col>\n\n            <Col\n              className='bgImgOfForm'\n              md={12}\n              lg={10}\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              <img src={BgImg} alt='bgimg' width='300' className='img' />\n            </Col>\n          </Row>\n        </Card>\n      </div>\n    </Fragment>\n  );\n};\n\nEditTodo.prototype = {\n  current: PropTypes.object.isRequired,\n  updateTodo: PropTypes.func.isRequired,\n  loading: PropTypes.object.isRequired,\n  // todoTypeData: PropTypes.object.isRequired,\n  // todoTypeLoading: PropTypes.object.isRequired,\n\n};\nconst mapStateToProps = (state) => ({\n  current: state.todo.current,\n  loading: state.todo.loading,\n  // todoTypeData: state.todoType,\n  // todoTypeLoading: state.todoType.todoTypeLoading,\n});\nexport default connect(mapStateToProps, {\n  updateTodo,\n\n})(EditTodo);\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\todoKanban.js",["2242","2243","2244","2245","2246","2247","2248","2249"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { ScrumboardContext, ScrumboardProvider } from \"./ScrumboardContext\";\nimport Board from \"./Board\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport reorder, { reorderQuoteMap } from \"./reoreder\";\nimport { createCardObject, modalModeTypes } from \"./utils\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getKanbanTodoLoading,\n  updateTodoStage,\n} from \"../../redux/action/todoAction\";\nimport { Row, Spin } from \"antd\";\n\nconst ScrumboardWrapper = (props) => {\n  const {\n    ordered,\n    columns,\n    cardData,\n    currentListId,\n    updateOrdered,\n    updateColumns,\n    updateModal,\n    updateCurrentListId,\n  } = useContext(ScrumboardContext);\n  const onDragEnd = async (result) => {\n    if (result.combine) {\n      // if (result.type === 'COLUMN') {\n      //     const shallow = [...ordered];\n      //     shallow.splice(result.source.index, 1);\n      //     updateOrdered(shallow);\n      //     return;\n      // }\n\n      const column = columns[result.source.droppableId];\n      const withQuoteRemoved = [...column];\n      withQuoteRemoved.splice(result.source.index, 1);\n      const newColumns = {\n        ...columns,\n        [result.source.droppableId]: withQuoteRemoved,\n      };\n      updateColumns(newColumns);\n      return;\n    }\n\n    if (!result.destination) {\n      return;\n    }\n\n    const source = result.source;\n    const destination = result.destination;\n\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n\n    // if (result.type === 'COLUMN') {\n    //     const newOrdered = reorder(ordered, source.index, destination.index);\n    //     updateOrdered(newOrdered);\n    //     return;\n    // }\n    const data = reorderQuoteMap({\n      quoteMap: columns,\n      source,\n      destination,\n    });\n    updateColumns(data.quoteMap);\n    let updatedTodo;\n    if (result.destination.droppableId === \"Todo\") {\n      updatedTodo = data.quoteMap[\"Todo\"][result.destination.index];\n    } else if (result.destination.droppableId === \"Research\") {\n      updatedTodo = data.quoteMap[\"Research\"][result.destination.index];\n    } else if (result.destination.droppableId === \"Inprogress\") {\n      updatedTodo =\n        data.quoteMap[\"Inprogress\"][result.destination.index];\n    } else if (result.destination.droppableId === \"Review\") {\n      updatedTodo =\n        data.quoteMap[\"Review\"][result.destination.index];\n    } else {\n      updatedTodo =\n        data.quoteMap[\"Completed\"][result.destination.index];\n    } \n    // else {\n    //   updatedTodo =\n    //     data.quoteMap[\"5M Purchases\"][result.destination.index];\n    // }\n    let stageId = 1;\n    let stageName = \"\";\n    switch (result.destination.droppableId) {\n      case \"Todo\":\n        stageId = 1;\n        stageName = \"Todo\";\n        break;\n      case \"Research\":\n        stageId = 2;\n        stageName = \"Research\";\n        break;\n      case \"Inprogress\":\n        stageId = 3;\n        stageName = \"Inprogress\";\n        break;\n      case \"Review\":\n        stageId = 4;\n        stageName = \"Review\";\n        break;\n      case \"Completed\":\n        stageId = 5;\n        stageName = \"Completed\";\n        break;\n      // case \"5M Purchases\":\n      //   stageId = 6;\n      //   stageName = \"5M Purchases\";\n        break;\n    }\n    updatedTodo.stageid = stageId;\n    updatedTodo.stagename = stageName;\n    try {\n      await props.updateTodoStage({\n        id: updatedTodo.id,\n        stageid: stageId,\n        name: stageName,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onCloseModal = () => {\n    updateModal(false);\n  };\n\n  const onModalSubmit = (values, mode) => {\n    const data = columns;\n    if (mode === modalModeTypes(0)) {\n      let newCard = createCardObject();\n      newCard.name = values.cardTitle ? values.cardTitle : \"Untitled Card\";\n      data[currentListId].push(newCard);\n      updateColumns(data);\n      updateModal(false);\n      updateCurrentListId(\"\");\n    }\n\n    if (mode === modalModeTypes(1)) {\n      const updatadedCard = data[currentListId].map((elm) => {\n        if (values.id === elm.id) {\n          elm = values;\n        }\n        return elm;\n      });\n      data[currentListId] = updatadedCard;\n      updateColumns(data);\n      updateModal(false);\n    }\n\n    if (mode === modalModeTypes(2)) {\n      data[values.boardTitle ? values.boardTitle : \"Untitled Board\"] = [];\n      const newOrdered = [\n        ...ordered,\n        ...[values.boardTitle ? values.boardTitle : \"Untitled Board\"],\n      ];\n      let newColumns = {};\n      newOrdered.forEach((elm) => {\n        newColumns[elm] = data[elm];\n      });\n      updateColumns(newColumns);\n      updateOrdered(Object.keys(newColumns));\n      updateModal(false);\n    }\n  };\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 1000);\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Row justify='center' align='middle' style={{ height: \"70vh\" }}>\n          <Spin spinning={loading} style={{ opacity: 1 }} size={\"large\"}>\n            <div></div>\n          </Spin>\n        </Row>\n      ) : (\n        <DragDropContext onDragEnd={(result) => onDragEnd(result)}>\n          {props.containerHeight ? (\n            <div className='scrumboard'>\n              <BoardWrapper {...props} />\n            </div>\n          ) : (\n            <BoardWrapper {...props} />\n          )}\n        </DragDropContext>\n      )}\n    </>\n  );\n};\nconst BoardWrapper = ({\n  containerHeight,\n  useClone,\n  isCombineEnabled,\n  withScrollableColumns,\n}) => {\n  const { ordered, columns, updateModal, updateModalMode } = useContext(\n    ScrumboardContext\n  );\n\n  const onAddBoardModal = () => {\n    updateModal(true);\n    updateModalMode(modalModeTypes(2));\n  };\n  return (\n    <Droppable\n      droppableId='board'\n      type='COLUMN'\n      direction='horizontal'\n      ignoreContainerClipping={containerHeight}\n      isCombineEnabled={isCombineEnabled}\n    >\n      {(provided) => (\n        <div\n          className='scrumboard'\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          <Scrollbars className='scrumboard-body'>\n            {ordered.map((key, index) => (\n              <Board\n                key={key}\n                index={index}\n                title={key}\n                contents={columns[key]}\n                isScrollable={withScrollableColumns}\n                isCombineEnabled={isCombineEnabled}\n                useClone={useClone}\n              />\n            ))}\n          </Scrollbars>\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nconst TodoKanban = (props) => {\n  const { getKanbanTodoLoading } = props;\n  useEffect(() => {\n    getKanbanTodoLoading();\n  }, []);\n\n  return (\n    <ScrumboardProvider>\n      <ScrumboardWrapper {...props} />\n    </ScrumboardProvider>\n  );\n};\n\nTodoKanban.prototype = {\n  columns: PropTypes.object.isRequired,\n  columnLoading: PropTypes.object.isRequired,\n  updateTodoStage: PropTypes.func.isRequired,\n  getKanbanTodoLoading: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => {\n  return {\n    columns: state.todo.columns,\n    columnLoading: state.todo.kanbanLoading,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getKanbanTodoLoading,\n  updateTodoStage,\n})(TodoKanban);\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\Board.js",["2250","2251"],"import React, {useContext, useState} from 'react';\nimport {ScrumboardContext} from './ScrumboardContext';\nimport {Draggable} from 'react-beautiful-dnd';\nimport BoardCard from './BoardCard';\nimport {modalModeTypes} from './utils';\n\n\nconst Board = ({\n                   title,\n                   contents,\n                   index,\n                   isScrollable,\n                   isCombineEnabled,\n                   useClone,\n               }) => {\n    const {\n        updateModal,\n        updateModalMode,\n        updateCurrentListId,\n        updateCardData,\n        columns,\n        updateColumns,\n        ordered,\n        updateOrdered,\n    } = useContext(ScrumboardContext);\n    const [renameActive, setRenameActive] = useState('');\n\n    const onUpdateCardModal = (obj, listId) => {\n        updateModal(true);\n        updateModalMode(modalModeTypes(1));\n        updateCurrentListId(listId);\n        updateCardData(obj);\n    };\n\n    const onFinish = (newTitle) => {\n        if (newTitle) {\n            const newColumns = {};\n            delete Object.assign(newColumns, columns, {[newTitle]: columns[title]})[\n                title\n                ];\n            const newOrder = ordered.map((elm) => {\n                if (elm === title) {\n                    return newTitle;\n                }\n                return elm;\n            });\n            updateColumns(newColumns);\n            updateOrdered(newOrder);\n        }\n        setRenameActive('');\n    };\n\n    return (\n        <Draggable draggableId={title} index={index}>\n            {(provided, snapshot) => (\n                <div\n                    className='board-column'\n                >\n                    <div className='board-title'>\n                                <h4 className='mb-0'>{title}</h4>\n\n                    </div>\n                    <BoardCard\n                        listId={title}\n                        listType='CONTENT'\n                        className={snapshot.isDragging ? 'is-dragging' : ''}\n                        contents={contents}\n                        internalScroll={isScrollable}\n                        isCombineEnabled={isCombineEnabled}\n                        useClone={useClone}\n                        cardData={onUpdateCardModal}\n                    />\n                </div>\n            )}\n        </Draggable>\n    );\n};\n\nexport default Board;\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\ScrumboardContext.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\reoreder.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\utils.js",[],"E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\BoardCard.js",["2252","2253","2254","2255","2256","2257"],"import React from 'react';\nimport {Draggable, Droppable} from 'react-beautiful-dnd';\nimport {Card, Tooltip, Tag} from 'antd';\nimport {getLabelsColor, AssigneeAvatar} from './utils';\nimport {\n    CalendarOutlined,\n    CommentOutlined,\n    PaperClipOutlined,\n} from '@ant-design/icons';\nimport moment from 'moment';\nimport {Scrollbars} from 'react-custom-scrollbars';\n\nconst InnerCardList = React.memo(function InnerCardList(props) {\n    return props.contents?.map((item, index) => (\n        <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\n            {(dragProvided, dragSnapshot) => (\n                <div\n                    className='mb-3'\n                    key={item.id}\n                    ref={dragProvided.innerRef}\n                    {...dragProvided.draggableProps}\n                    {...dragProvided.dragHandleProps}\n                >\n                    <Card\n                        hoverable\n                        className='board-card'\n                        cover={null}\n                        onClick={() => props.cardData(item, props.listId)}\n                    >\n                        <Tooltip title={item.status} key={item.status}>\n                            <div className={`board-label ${getLabelsColor(item.status)}`}></div>\n                        </Tooltip>\n                        <h4 className='mb-2'>{item.todoname}</h4>\n                        <div className='d-flex justify-content-between align-items-center'>\n                            <div className='d-flex align-items-center'>\n                                {\n                                    <Tag className='bg-gray-lightest'>\n                                        <span className='ml-1 font-weight-semibold'>{item.type}</span>\n                                    </Tag>\n                                }\n                                <div className='d-flex align-self-end'>\n                                    {/*<SubIndicator*/}\n                                    {/*  counts={item.comments.length}*/}\n                                    {/*  icon={<CommentOutlined />}*/}\n                                    {/*/>*/}\n                                </div>\n                            </div>\n                        </div>\n                    </Card>\n                </div>\n            )}\n        </Draggable>\n    ));\n});\n\nfunction InnerList(props) {\n    const {contents, dropProvided, cardData, listId} = props;\n\n    return (\n        <div className='board-dropzone' ref={dropProvided.innerRef}>\n            <InnerCardList cardData={cardData} contents={contents} listId={listId}/>\n            {dropProvided.placeholder}\n        </div>\n    );\n}\n\nfunction SubIndicator(props) {\n    if (props.counts) {\n        return (\n            <p className='mb-0 mr-2'>\n                {props.icon}\n                <span className='ml-1'>{props.counts}</span>\n            </p>\n        );\n    }\n    return null;\n}\n\nexport default function BoardCard(props) {\n    const {\n        ignoreContainerClipping,\n        internalScroll,\n        scrollContainerStyle,\n        isDropDisabled,\n        isCombineEnabled,\n        listId = 'LIST',\n        listType,\n        style,\n        contents,\n        useClone,\n        cardData,\n    } = props;\n    return (\n        <>\n            <Droppable\n                droppableId={listId}\n                type={listType}\n                ignoreContainerClipping={ignoreContainerClipping}\n                isDropDisabled={isDropDisabled}\n                isCombineEnabled={isCombineEnabled}\n                renderClone={useClone}\n            >\n                {(dropProvided, dropSnapshot) => (\n                    <Scrollbars\n                        style={style}\n                        className='board-wrapper'\n                        autoHide\n                        {...dropProvided.droppableProps}\n                    >\n                        {internalScroll ? (\n                            <div\n                                className='board-scrollContainer'\n                                style={scrollContainerStyle}\n                            >\n                                <InnerList\n                                    contents={contents}\n                                    listId={listId}\n                                    cardData={cardData}\n                                    dropProvided={dropProvided}\n                                />\n                            </div>\n                        ) : (\n                            <InnerList\n                                contents={contents}\n                                listId={listId}\n                                cardData={cardData}\n                                dropProvided={dropProvided}\n                            />\n                        )}\n                    </Scrollbars>\n                )}\n            </Droppable>\n        </>\n    );\n}\n","E:\\NSBM\\PLDC\\project\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\ScrumboardData.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\App.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\serviceWorker.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\store\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\sagas\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\reducers\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\configs\\AppConfig.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\sagas\\Auth.js",["2258","2259","2260","2261"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\redux\\sagas\\todoSagas.js",["2262","2263","2264"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\lang\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\layouts\\auth-layout\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\layouts\\app-layout\\index.js",["2265"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\reducers\\Theme.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\reducers\\Auth.js",["2266"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\configs\\EnvironmentConfig.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\redux\\reducers\\todoReducer.js",["2267"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\lang\\entries\\en_US.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\lang\\entries\\si_LK.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\redux\\api.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\constants\\ThemeConstant.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\redux\\types\\todoTypes.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\redux\\action\\todoAction.js",["2268"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\actions\\Auth.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\session\\Session.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\constants\\Auth.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\constants\\Theme.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\http\\axiosHttp.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\auth-views\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\utils\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\auth-views\\authentication\\login\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\shared-components\\Loading\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\auth-views\\authentication\\login-2\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\auth-views\\components\\LoginForm.js",["2269","2270","2271","2272","2273","2274"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\services\\JwtAuthService.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\util-components\\CustomIcon\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\auth\\FetchInterceptor.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\history.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\assets\\svg\\icon.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\configs\\NavigationConfig.js",["2275","2276","2277","2278","2279","2280","2281"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\PageHeader.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\Footer.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\TopNav.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\SideNav.js",["2282","2283","2284","2285","2286","2287","2288","2289","2290","2291","2292","2293"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\HeaderNav.js",["2294","2295","2296"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\MobileNav.js",["2297","2298","2299","2300","2301","2302"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\configs\\NavigationAdminConfig.js",["2303"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\MenuContentAdmin.js",["2304","2305","2306","2307","2308","2309","2310","2311","2312","2313"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\MenuContent.js",["2314","2315","2316","2317","2318","2319","2320","2321"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\Logo.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\NavProfile.js",["2322"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\NavNotification.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\NavLanguage.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\NavPanel.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\util-components\\IntlMessage\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\AppBreadcrumb.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\shared-components\\AvatarStatus\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\NavSearch\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-listTable\\editTodo.js",["2323","2324","2325"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todoMain.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-listTable\\addTodo.js",["2326","2327","2328","2329"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\redux\\actions\\Theme.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\shared-components\\Flex\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\util-components\\Icon\\index.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\layout-components\\NavSearch\\SearchInput.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-listTable\\todoList.js",["2330","2331","2332","2333","2334"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\todoKanban.js",["2335","2336","2337","2338","2339","2340","2341","2342"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\utils.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\ScrumboardContext.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\Board.js",["2343","2344"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\reoreder.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\ScrumboardData.js",[],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\views\\app-views\\todo\\todo-list\\todo-kanban\\BoardCard.js",["2345","2346","2347","2348","2349","2350"],"E:\\NSBM\\PLDC\\project\\New folder\\my-todo\\src\\components\\shared-components\\EllipsisDropdown\\index.js",[],{"ruleId":"2351","severity":1,"message":"2352","line":10,"column":41,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":47},{"ruleId":"2351","severity":1,"message":"2355","line":3,"column":2,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2356","line":10,"column":2,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2357","line":36,"column":7,"nodeType":"2353","messageId":"2354","endLine":36,"endColumn":20},{"ruleId":"2358","severity":1,"message":"2359","line":56,"column":28,"nodeType":"2360","messageId":"2361","endLine":63,"endColumn":3},{"ruleId":"2351","severity":1,"message":"2362","line":22,"column":3,"nodeType":"2353","messageId":"2354","endLine":22,"endColumn":21},{"ruleId":"2363","severity":1,"message":"2364","line":53,"column":1,"nodeType":"2365","endLine":245,"endColumn":3},{"ruleId":"2363","severity":1,"message":"2364","line":13,"column":1,"nodeType":"2365","endLine":34,"endColumn":3},{"ruleId":"2363","severity":1,"message":"2364","line":20,"column":1,"nodeType":"2365","endLine":52,"endColumn":3},{"ruleId":"2363","severity":1,"message":"2364","line":40,"column":1,"nodeType":"2365","endLine":184,"endColumn":3},{"ruleId":"2363","severity":1,"message":"2364","line":17,"column":1,"nodeType":"2365","endLine":39,"endColumn":3},{"ruleId":"2351","severity":1,"message":"2366","line":10,"column":10,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":29},{"ruleId":"2363","severity":1,"message":"2364","line":21,"column":1,"nodeType":"2365","endLine":70,"endColumn":3},{"ruleId":"2363","severity":1,"message":"2364","line":25,"column":1,"nodeType":"2365","endLine":91,"endColumn":3},{"ruleId":"2363","severity":1,"message":"2364","line":22,"column":1,"nodeType":"2365","endLine":68,"endColumn":3},{"ruleId":"2363","severity":1,"message":"2364","line":22,"column":1,"nodeType":"2365","endLine":68,"endColumn":3},{"ruleId":"2363","severity":1,"message":"2364","line":18,"column":1,"nodeType":"2365","endLine":42,"endColumn":3},{"ruleId":"2363","severity":1,"message":"2364","line":14,"column":1,"nodeType":"2365","endLine":37,"endColumn":3},{"ruleId":"2363","severity":1,"message":"2364","line":28,"column":1,"nodeType":"2365","endLine":89,"endColumn":3},{"ruleId":"2363","severity":1,"message":"2364","line":24,"column":1,"nodeType":"2365","endLine":77,"endColumn":3},{"ruleId":"2367","severity":1,"message":"2368","line":51,"column":41,"nodeType":"2369","messageId":"2370","endLine":51,"endColumn":43},{"ruleId":"2351","severity":1,"message":"2371","line":9,"column":8,"nodeType":"2353","messageId":"2354","endLine":9,"endColumn":14},{"ruleId":"2363","severity":1,"message":"2364","line":17,"column":1,"nodeType":"2365","endLine":49,"endColumn":3},{"ruleId":"2351","severity":1,"message":"2372","line":2,"column":3,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2373","line":3,"column":3,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2374","line":4,"column":3,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2375","line":7,"column":3,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2376","line":8,"column":3,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2377","line":12,"column":8,"nodeType":"2353","messageId":"2354","endLine":12,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2378","line":6,"column":8,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2379","line":16,"column":8,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":23},{"ruleId":"2351","severity":1,"message":"2380","line":17,"column":8,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2381","line":2,"column":10,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2382","line":2,"column":18,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2383","line":2,"column":26,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2384","line":2,"column":39,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":44},{"ruleId":"2351","severity":1,"message":"2385","line":14,"column":3,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2377","line":19,"column":8,"nodeType":"2353","messageId":"2354","endLine":19,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2377","line":13,"column":8,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2386","line":15,"column":3,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2387","line":16,"column":3,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2373","line":2,"column":21,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":37},{"ruleId":"2351","severity":1,"message":"2372","line":11,"column":3,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2373","line":12,"column":3,"nodeType":"2353","messageId":"2354","endLine":12,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2374","line":13,"column":3,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2388","line":14,"column":3,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2375","line":16,"column":3,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2376","line":17,"column":3,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2389","line":46,"column":5,"nodeType":"2353","messageId":"2354","endLine":46,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2372","line":11,"column":3,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2374","line":13,"column":3,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2375","line":16,"column":3,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2389","line":46,"column":5,"nodeType":"2353","messageId":"2354","endLine":46,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2390","line":11,"column":8,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2391","line":4,"column":10,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2392","line":15,"column":5,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":26},{"ruleId":"2393","severity":1,"message":"2394","line":23,"column":6,"nodeType":"2395","endLine":23,"endColumn":8,"suggestions":"2396"},{"ruleId":"2351","severity":1,"message":"2397","line":8,"column":3,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":8},{"ruleId":"2351","severity":1,"message":"2398","line":27,"column":9,"nodeType":"2353","messageId":"2354","endLine":27,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2399","line":14,"column":24,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":34},{"ruleId":"2351","severity":1,"message":"2399","line":14,"column":24,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":34},{"ruleId":"2351","severity":1,"message":"2399","line":14,"column":24,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":34},{"ruleId":"2351","severity":1,"message":"2400","line":14,"column":36,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":47},{"ruleId":"2351","severity":1,"message":"2401","line":14,"column":49,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":56},{"ruleId":"2351","severity":1,"message":"2399","line":14,"column":24,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":34},{"ruleId":"2351","severity":1,"message":"2400","line":14,"column":36,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":47},{"ruleId":"2351","severity":1,"message":"2401","line":14,"column":49,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":56},{"ruleId":"2351","severity":1,"message":"2402","line":1,"column":17,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2399","line":14,"column":24,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":34},{"ruleId":"2351","severity":1,"message":"2400","line":14,"column":36,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":47},{"ruleId":"2351","severity":1,"message":"2401","line":14,"column":49,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":56},{"ruleId":"2351","severity":1,"message":"2403","line":12,"column":3,"nodeType":"2353","messageId":"2354","endLine":12,"endColumn":10},{"ruleId":"2351","severity":1,"message":"2391","line":18,"column":10,"nodeType":"2353","messageId":"2354","endLine":18,"endColumn":20},{"ruleId":"2393","severity":1,"message":"2404","line":41,"column":6,"nodeType":"2395","endLine":41,"endColumn":8,"suggestions":"2405"},{"ruleId":"2393","severity":1,"message":"2406","line":49,"column":6,"nodeType":"2395","endLine":49,"endColumn":24,"suggestions":"2407"},{"ruleId":"2351","severity":1,"message":"2399","line":14,"column":24,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":34},{"ruleId":"2351","severity":1,"message":"2400","line":14,"column":36,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":47},{"ruleId":"2351","severity":1,"message":"2401","line":14,"column":49,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":56},{"ruleId":"2351","severity":1,"message":"2399","line":13,"column":24,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":34},{"ruleId":"2351","severity":1,"message":"2399","line":13,"column":24,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":34},{"ruleId":"2351","severity":1,"message":"2400","line":13,"column":36,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":47},{"ruleId":"2351","severity":1,"message":"2401","line":13,"column":49,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":56},{"ruleId":"2351","severity":1,"message":"2399","line":13,"column":24,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":34},{"ruleId":"2351","severity":1,"message":"2399","line":14,"column":24,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":34},{"ruleId":"2351","severity":1,"message":"2408","line":13,"column":7,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2409","line":2,"column":22,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":27},{"ruleId":"2351","severity":1,"message":"2410","line":7,"column":10,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":33},{"ruleId":"2351","severity":1,"message":"2411","line":11,"column":10,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2400","line":16,"column":36,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":47},{"ruleId":"2351","severity":1,"message":"2401","line":16,"column":49,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":56},{"ruleId":"2351","severity":1,"message":"2381","line":1,"column":38,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":44},{"ruleId":"2351","severity":1,"message":"2412","line":1,"column":46,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":51},{"ruleId":"2351","severity":1,"message":"2413","line":1,"column":53,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":56},{"ruleId":"2351","severity":1,"message":"2384","line":1,"column":58,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":63},{"ruleId":"2351","severity":1,"message":"2414","line":14,"column":7,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":14},{"ruleId":"2393","severity":1,"message":"2415","line":57,"column":6,"nodeType":"2395","endLine":57,"endColumn":8,"suggestions":"2416"},{"ruleId":"2351","severity":1,"message":"2417","line":1,"column":26,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":31},{"ruleId":"2351","severity":1,"message":"2418","line":16,"column":8,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":12},{"ruleId":"2419","severity":1,"message":"2420","line":22,"column":9,"nodeType":"2421","endLine":32,"endColumn":11},{"ruleId":"2351","severity":1,"message":"2422","line":12,"column":3,"nodeType":"2353","messageId":"2354","endLine":12,"endColumn":11},{"ruleId":"2351","severity":1,"message":"2423","line":13,"column":3,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":7},{"ruleId":"2351","severity":1,"message":"2424","line":20,"column":8,"nodeType":"2353","messageId":"2354","endLine":20,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2398","line":30,"column":9,"nodeType":"2353","messageId":"2354","endLine":30,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2425","line":33,"column":5,"nodeType":"2353","messageId":"2354","endLine":33,"endColumn":24},{"ruleId":"2393","severity":1,"message":"2404","line":44,"column":6,"nodeType":"2395","endLine":44,"endColumn":8,"suggestions":"2426"},{"ruleId":"2393","severity":1,"message":"2427","line":240,"column":6,"nodeType":"2395","endLine":240,"endColumn":72,"suggestions":"2428"},{"ruleId":"2351","severity":1,"message":"2391","line":14,"column":10,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":20},{"ruleId":"2429","severity":1,"message":"2430","line":32,"column":3,"nodeType":"2431","messageId":"2432","endLine":38,"endColumn":4},{"ruleId":"2367","severity":1,"message":"2368","line":34,"column":68,"nodeType":"2369","messageId":"2370","endLine":34,"endColumn":70},{"ruleId":"2351","severity":1,"message":"2433","line":92,"column":10,"nodeType":"2353","messageId":"2354","endLine":92,"endColumn":16},{"ruleId":"2393","severity":1,"message":"2434","line":100,"column":6,"nodeType":"2395","endLine":100,"endColumn":8,"suggestions":"2435"},{"ruleId":"2351","severity":1,"message":"2436","line":102,"column":10,"nodeType":"2353","messageId":"2354","endLine":102,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2437","line":102,"column":21,"nodeType":"2353","messageId":"2354","endLine":102,"endColumn":33},{"ruleId":"2351","severity":1,"message":"2438","line":8,"column":3,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2439","line":9,"column":3,"nodeType":"2353","messageId":"2354","endLine":9,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2381","line":2,"column":10,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2440","line":3,"column":8,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":13},{"ruleId":"2351","severity":1,"message":"2441","line":4,"column":10,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":26},{"ruleId":"2351","severity":1,"message":"2442","line":4,"column":28,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":44},{"ruleId":"2351","severity":1,"message":"2443","line":5,"column":8,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2444","line":6,"column":8,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2391","line":11,"column":10,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":20},{"ruleId":"2393","severity":1,"message":"2445","line":36,"column":6,"nodeType":"2395","endLine":36,"endColumn":8,"suggestions":"2446"},{"ruleId":"2351","severity":1,"message":"2447","line":2,"column":48,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":56},{"ruleId":"2351","severity":1,"message":"2448","line":4,"column":9,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2449","line":6,"column":7,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2449","line":6,"column":7,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2450","line":25,"column":10,"nodeType":"2353","messageId":"2354","endLine":25,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2451","line":25,"column":16,"nodeType":"2353","messageId":"2354","endLine":25,"endColumn":23},{"ruleId":"2393","severity":1,"message":"2452","line":30,"column":6,"nodeType":"2395","endLine":30,"endColumn":8,"suggestions":"2453"},{"ruleId":"2351","severity":1,"message":"2454","line":1,"column":17,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":26},{"ruleId":"2351","severity":1,"message":"2455","line":2,"column":32,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":42},{"ruleId":"2351","severity":1,"message":"2456","line":38,"column":7,"nodeType":"2353","messageId":"2354","endLine":38,"endColumn":15},{"ruleId":"2457","severity":1,"message":"2458","line":269,"column":42,"nodeType":"2459","messageId":"2460","endLine":269,"endColumn":52},{"ruleId":"2351","severity":1,"message":"2461","line":2,"column":24,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2462","line":5,"column":10,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2381","line":2,"column":10,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2463","line":2,"column":18,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2461","line":2,"column":24,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2464","line":2,"column":31,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":34},{"ruleId":"2351","severity":1,"message":"2383","line":2,"column":36,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":39},{"ruleId":"2351","severity":1,"message":"2465","line":2,"column":41,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":45},{"ruleId":"2351","severity":1,"message":"2418","line":3,"column":8,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2440","line":4,"column":8,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":13},{"ruleId":"2351","severity":1,"message":"2462","line":5,"column":10,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":29},{"ruleId":"2393","severity":1,"message":"2466","line":34,"column":8,"nodeType":"2395","endLine":34,"endColumn":14,"suggestions":"2467"},{"ruleId":"2351","severity":1,"message":"2414","line":7,"column":7,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2414","line":7,"column":7,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2413","line":2,"column":30,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":33},{"ruleId":"2429","severity":1,"message":"2430","line":9,"column":3,"nodeType":"2431","messageId":"2432","endLine":24,"endColumn":4},{"ruleId":"2367","severity":1,"message":"2368","line":11,"column":66,"nodeType":"2369","messageId":"2370","endLine":11,"endColumn":68},{"ruleId":"2468","severity":1,"message":"2469","line":23,"column":3,"nodeType":"2470","messageId":"2471","endLine":38,"endColumn":4},{"ruleId":"2468","severity":1,"message":"2469","line":42,"column":3,"nodeType":"2470","messageId":"2471","endLine":67,"endColumn":4},{"ruleId":"2351","severity":1,"message":"2454","line":1,"column":16,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2382","line":3,"column":22,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":28},{"ruleId":"2351","severity":1,"message":"2381","line":3,"column":40,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":46},{"ruleId":"2351","severity":1,"message":"2455","line":3,"column":48,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":58},{"ruleId":"2351","severity":1,"message":"2418","line":5,"column":8,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2440","line":11,"column":8,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":13},{"ruleId":"2351","severity":1,"message":"2414","line":17,"column":7,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":14},{"ruleId":"2393","severity":1,"message":"2472","line":47,"column":5,"nodeType":"2395","endLine":47,"endColumn":7,"suggestions":"2473"},{"ruleId":"2351","severity":1,"message":"2474","line":15,"column":8,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2475","line":26,"column":3,"nodeType":"2353","messageId":"2354","endLine":26,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2476","line":34,"column":3,"nodeType":"2353","messageId":"2354","endLine":34,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2477","line":35,"column":3,"nodeType":"2353","messageId":"2354","endLine":35,"endColumn":8},{"ruleId":"2351","severity":1,"message":"2478","line":37,"column":3,"nodeType":"2353","messageId":"2354","endLine":37,"endColumn":16},{"ruleId":"2393","severity":1,"message":"2479","line":58,"column":4,"nodeType":"2395","endLine":58,"endColumn":19,"suggestions":"2480"},{"ruleId":"2351","severity":1,"message":"2448","line":4,"column":9,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2449","line":6,"column":7,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2448","line":4,"column":9,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2449","line":6,"column":7,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2447","line":2,"column":48,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":56},{"ruleId":"2351","severity":1,"message":"2391","line":3,"column":9,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2448","line":4,"column":9,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2448","line":4,"column":9,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2449","line":6,"column":7,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2481","line":5,"column":9,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2449","line":6,"column":7,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2447","line":2,"column":48,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":56},{"ruleId":"2351","severity":1,"message":"2449","line":6,"column":7,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2449","line":6,"column":7,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2449","line":6,"column":7,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2482","line":3,"column":20,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":30},{"ruleId":"2351","severity":1,"message":"2382","line":3,"column":32,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":38},{"ruleId":"2351","severity":1,"message":"2391","line":4,"column":10,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2443","line":9,"column":8,"nodeType":"2353","messageId":"2354","endLine":9,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2483","line":12,"column":3,"nodeType":"2353","messageId":"2354","endLine":12,"endColumn":25},{"ruleId":"2393","severity":1,"message":"2484","line":26,"column":6,"nodeType":"2395","endLine":26,"endColumn":8,"suggestions":"2485"},{"ruleId":"2351","severity":1,"message":"2398","line":26,"column":9,"nodeType":"2353","messageId":"2354","endLine":26,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2402","line":2,"column":17,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2414","line":15,"column":7,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":14},{"ruleId":"2393","severity":1,"message":"2484","line":20,"column":6,"nodeType":"2395","endLine":20,"endColumn":8,"suggestions":"2486"},{"ruleId":"2351","severity":1,"message":"2398","line":28,"column":9,"nodeType":"2353","messageId":"2354","endLine":28,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2487","line":14,"column":8,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2488","line":18,"column":8,"nodeType":"2353","messageId":"2354","endLine":18,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2489","line":25,"column":10,"nodeType":"2353","messageId":"2354","endLine":25,"endColumn":22},{"ruleId":"2393","severity":1,"message":"2490","line":85,"column":6,"nodeType":"2395","endLine":85,"endColumn":8,"suggestions":"2491"},{"ruleId":"2351","severity":1,"message":"2492","line":91,"column":10,"nodeType":"2353","messageId":"2354","endLine":91,"endColumn":13},{"ruleId":"2393","severity":1,"message":"2493","line":106,"column":6,"nodeType":"2395","endLine":106,"endColumn":25,"suggestions":"2494"},{"ruleId":"2351","severity":1,"message":"2488","line":18,"column":8,"nodeType":"2353","messageId":"2354","endLine":18,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2495","line":30,"column":19,"nodeType":"2353","messageId":"2354","endLine":30,"endColumn":28},{"ruleId":"2351","severity":1,"message":"2496","line":31,"column":10,"nodeType":"2353","messageId":"2354","endLine":31,"endColumn":15},{"ruleId":"2393","severity":1,"message":"2490","line":90,"column":6,"nodeType":"2395","endLine":90,"endColumn":8,"suggestions":"2497"},{"ruleId":"2393","severity":1,"message":"2406","line":114,"column":6,"nodeType":"2395","endLine":114,"endColumn":11,"suggestions":"2498"},{"ruleId":"2351","severity":1,"message":"2499","line":129,"column":9,"nodeType":"2353","messageId":"2354","endLine":129,"endColumn":23},{"ruleId":"2351","severity":1,"message":"2500","line":162,"column":10,"nodeType":"2353","messageId":"2354","endLine":162,"endColumn":13},{"ruleId":"2351","severity":1,"message":"2501","line":162,"column":15,"nodeType":"2353","messageId":"2354","endLine":162,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2502","line":8,"column":3,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":13},{"ruleId":"2351","severity":1,"message":"2461","line":15,"column":3,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":8},{"ruleId":"2351","severity":1,"message":"2503","line":39,"column":10,"nodeType":"2353","messageId":"2354","endLine":39,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2504","line":47,"column":10,"nodeType":"2353","messageId":"2354","endLine":47,"endColumn":15},{"ruleId":"2393","severity":1,"message":"2505","line":202,"column":6,"nodeType":"2395","endLine":202,"endColumn":8,"suggestions":"2506"},{"ruleId":"2351","severity":1,"message":"2414","line":23,"column":7,"nodeType":"2353","messageId":"2354","endLine":23,"endColumn":14},{"ruleId":"2393","severity":1,"message":"2507","line":37,"column":6,"nodeType":"2395","endLine":37,"endColumn":8,"suggestions":"2508"},{"ruleId":"2468","severity":1,"message":"2469","line":98,"column":5,"nodeType":"2470","messageId":"2471","endLine":115,"endColumn":6},{"ruleId":"2351","severity":1,"message":"2509","line":199,"column":9,"nodeType":"2353","messageId":"2354","endLine":199,"endColumn":24},{"ruleId":"2393","severity":1,"message":"2510","line":277,"column":6,"nodeType":"2395","endLine":277,"endColumn":8,"suggestions":"2511"},{"ruleId":"2351","severity":1,"message":"2492","line":78,"column":10,"nodeType":"2353","messageId":"2354","endLine":78,"endColumn":13},{"ruleId":"2351","severity":1,"message":"2512","line":1,"column":17,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2513","line":14,"column":3,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":9},{"ruleId":"2351","severity":1,"message":"2514","line":16,"column":24,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":38},{"ruleId":"2351","severity":1,"message":"2515","line":20,"column":10,"nodeType":"2353","messageId":"2354","endLine":20,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2516","line":24,"column":8,"nodeType":"2353","messageId":"2354","endLine":24,"endColumn":13},{"ruleId":"2517","severity":1,"message":"2518","line":73,"column":34,"nodeType":"2353","messageId":"2519","endLine":73,"endColumn":43},{"ruleId":"2351","severity":1,"message":"2520","line":130,"column":5,"nodeType":"2353","messageId":"2354","endLine":130,"endColumn":23},{"ruleId":"2351","severity":1,"message":"2521","line":131,"column":5,"nodeType":"2353","messageId":"2354","endLine":131,"endColumn":26},{"ruleId":"2351","severity":1,"message":"2400","line":132,"column":5,"nodeType":"2353","messageId":"2354","endLine":132,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2522","line":133,"column":5,"nodeType":"2353","messageId":"2354","endLine":133,"endColumn":13},{"ruleId":"2393","severity":1,"message":"2523","line":141,"column":6,"nodeType":"2395","endLine":141,"endColumn":8,"suggestions":"2524"},{"ruleId":"2351","severity":1,"message":"2525","line":155,"column":9,"nodeType":"2353","messageId":"2354","endLine":155,"endColumn":23},{"ruleId":"2393","severity":1,"message":"2406","line":207,"column":6,"nodeType":"2395","endLine":207,"endColumn":11,"suggestions":"2526"},{"ruleId":"2527","severity":1,"message":"2528","line":229,"column":15,"nodeType":"2421","messageId":"2529","endLine":229,"endColumn":53,"fix":"2530"},{"ruleId":"2351","severity":1,"message":"2418","line":16,"column":8,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2381","line":1,"column":38,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":44},{"ruleId":"2351","severity":1,"message":"2402","line":2,"column":28,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":36},{"ruleId":"2351","severity":1,"message":"2418","line":7,"column":8,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2531","line":8,"column":10,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":27},{"ruleId":"2351","severity":1,"message":"2532","line":9,"column":8,"nodeType":"2353","messageId":"2354","endLine":9,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2533","line":15,"column":34,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":49},{"ruleId":"2351","severity":1,"message":"2414","line":16,"column":7,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":14},{"ruleId":"2393","severity":1,"message":"2534","line":22,"column":6,"nodeType":"2395","endLine":22,"endColumn":8,"suggestions":"2535"},{"ruleId":"2527","severity":1,"message":"2528","line":31,"column":11,"nodeType":"2421","messageId":"2529","endLine":31,"endColumn":42,"fix":"2536"},{"ruleId":"2351","severity":1,"message":"2537","line":1,"column":16,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2538","line":7,"column":12,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":36},{"ruleId":"2351","severity":1,"message":"2539","line":7,"column":37,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":51},{"ruleId":"2351","severity":1,"message":"2540","line":7,"column":52,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":59},{"ruleId":"2351","severity":1,"message":"2541","line":6,"column":3,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2542","line":9,"column":3,"nodeType":"2353","messageId":"2354","endLine":9,"endColumn":19},{"ruleId":"2393","severity":1,"message":"2543","line":31,"column":6,"nodeType":"2395","endLine":31,"endColumn":8,"suggestions":"2544"},{"ruleId":"2351","severity":1,"message":"2545","line":37,"column":11,"nodeType":"2353","messageId":"2354","endLine":37,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2546","line":38,"column":11,"nodeType":"2353","messageId":"2354","endLine":38,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2402","line":1,"column":17,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2537","line":1,"column":27,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":36},{"ruleId":"2351","severity":1,"message":"2547","line":4,"column":8,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2548","line":5,"column":10,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2549","line":6,"column":10,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2550","line":5,"column":3,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":9},{"ruleId":"2351","severity":1,"message":"2551","line":33,"column":5,"nodeType":"2353","messageId":"2354","endLine":33,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2414","line":37,"column":7,"nodeType":"2353","messageId":"2354","endLine":37,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2552","line":48,"column":47,"nodeType":"2353","messageId":"2354","endLine":48,"endColumn":53},{"ruleId":"2351","severity":1,"message":"2403","line":7,"column":3,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":10},{"ruleId":"2351","severity":1,"message":"2553","line":17,"column":10,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2554","line":18,"column":8,"nodeType":"2353","messageId":"2354","endLine":18,"endColumn":17},{"ruleId":"2393","severity":1,"message":"2555","line":28,"column":6,"nodeType":"2395","endLine":28,"endColumn":15,"suggestions":"2556"},{"ruleId":"2367","severity":1,"message":"2557","line":51,"column":31,"nodeType":"2369","messageId":"2558","endLine":51,"endColumn":33},{"ruleId":"2351","severity":1,"message":"2402","line":2,"column":17,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2559","line":3,"column":10,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2560","line":4,"column":8,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2448","line":10,"column":9,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2402","line":1,"column":17,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2561","line":4,"column":7,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2562","line":5,"column":7,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2383","line":2,"column":18,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2563","line":2,"column":43,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":48},{"ruleId":"2351","severity":1,"message":"2564","line":2,"column":50,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":58},{"ruleId":"2351","severity":1,"message":"2413","line":1,"column":48,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":51},{"ruleId":"2351","severity":1,"message":"2565","line":3,"column":10,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2566","line":5,"column":10,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":17},{"ruleId":"2393","severity":1,"message":"2567","line":24,"column":6,"nodeType":"2395","endLine":24,"endColumn":8,"suggestions":"2568"},{"ruleId":"2351","severity":1,"message":"2450","line":101,"column":9,"nodeType":"2353","messageId":"2354","endLine":101,"endColumn":13},{"ruleId":"2351","severity":1,"message":"2413","line":1,"column":48,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":51},{"ruleId":"2351","severity":1,"message":"2566","line":5,"column":10,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":17},{"ruleId":"2393","severity":1,"message":"2569","line":28,"column":6,"nodeType":"2395","endLine":28,"endColumn":8,"suggestions":"2570"},{"ruleId":"2351","severity":1,"message":"2450","line":114,"column":9,"nodeType":"2353","messageId":"2354","endLine":114,"endColumn":13},{"ruleId":"2351","severity":1,"message":"2563","line":1,"column":43,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":48},{"ruleId":"2393","severity":1,"message":"2567","line":42,"column":6,"nodeType":"2395","endLine":42,"endColumn":8,"suggestions":"2571"},{"ruleId":"2367","severity":1,"message":"2368","line":53,"column":29,"nodeType":"2369","messageId":"2370","endLine":53,"endColumn":31},{"ruleId":"2367","severity":1,"message":"2368","line":54,"column":40,"nodeType":"2369","messageId":"2370","endLine":54,"endColumn":42},{"ruleId":"2572","severity":1,"message":"2573","line":55,"column":24,"nodeType":"2574","messageId":"2575","endLine":55,"endColumn":26},{"ruleId":"2351","severity":1,"message":"2576","line":5,"column":10,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2381","line":6,"column":10,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2577","line":8,"column":10,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2578","line":10,"column":44,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":58},{"ruleId":"2351","severity":1,"message":"2509","line":148,"column":9,"nodeType":"2353","messageId":"2354","endLine":148,"endColumn":24},{"ruleId":"2393","severity":1,"message":"2579","line":22,"column":6,"nodeType":"2395","endLine":22,"endColumn":8,"suggestions":"2580"},{"ruleId":"2351","severity":1,"message":"2461","line":2,"column":24,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2440","line":4,"column":8,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":13},{"ruleId":"2351","severity":1,"message":"2581","line":8,"column":11,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2454","line":1,"column":17,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":26},{"ruleId":"2351","severity":1,"message":"2455","line":3,"column":48,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":58},{"ruleId":"2351","severity":1,"message":"2418","line":5,"column":8,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2414","line":67,"column":7,"nodeType":"2353","messageId":"2354","endLine":67,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2582","line":68,"column":11,"nodeType":"2353","messageId":"2354","endLine":68,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2583","line":68,"column":23,"nodeType":"2353","messageId":"2354","endLine":68,"endColumn":31},{"ruleId":"2351","severity":1,"message":"2448","line":8,"column":8,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2450","line":22,"column":12,"nodeType":"2353","messageId":"2354","endLine":22,"endColumn":16},{"ruleId":"2367","severity":1,"message":"2368","line":35,"column":46,"nodeType":"2369","messageId":"2370","endLine":35,"endColumn":48},{"ruleId":"2393","severity":1,"message":"2406","line":56,"column":8,"nodeType":"2395","endLine":56,"endColumn":18,"suggestions":"2584"},{"ruleId":"2367","severity":1,"message":"2368","line":63,"column":37,"nodeType":"2369","messageId":"2370","endLine":63,"endColumn":39},{"ruleId":"2367","severity":1,"message":"2368","line":64,"column":45,"nodeType":"2369","messageId":"2370","endLine":64,"endColumn":47},{"ruleId":"2572","severity":1,"message":"2573","line":65,"column":32,"nodeType":"2574","messageId":"2575","endLine":65,"endColumn":34},{"ruleId":"2351","severity":1,"message":"2585","line":26,"column":12,"nodeType":"2353","messageId":"2354","endLine":26,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2586","line":35,"column":11,"nodeType":"2353","messageId":"2354","endLine":35,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2587","line":11,"column":7,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2454","line":1,"column":17,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":26},{"ruleId":"2351","severity":1,"message":"2455","line":2,"column":48,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":58},{"ruleId":"2351","severity":1,"message":"2418","line":4,"column":8,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2414","line":25,"column":7,"nodeType":"2353","messageId":"2354","endLine":25,"endColumn":14},{"ruleId":"2367","severity":1,"message":"2368","line":29,"column":34,"nodeType":"2369","messageId":"2370","endLine":29,"endColumn":36},{"ruleId":"2351","severity":1,"message":"2588","line":114,"column":5,"nodeType":"2353","messageId":"2354","endLine":114,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2589","line":60,"column":7,"nodeType":"2353","messageId":"2354","endLine":60,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2563","line":1,"column":43,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":48},{"ruleId":"2351","severity":1,"message":"2590","line":73,"column":9,"nodeType":"2353","messageId":"2354","endLine":73,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2414","line":16,"column":7,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2414","line":16,"column":7,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2578","line":4,"column":26,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":40},{"ruleId":"2351","severity":1,"message":"2441","line":6,"column":3,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2531","line":8,"column":3,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2444","line":10,"column":8,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2591","line":18,"column":5,"nodeType":"2353","messageId":"2354","endLine":18,"endColumn":20},{"ruleId":"2393","severity":1,"message":"2592","line":27,"column":6,"nodeType":"2395","endLine":27,"endColumn":25,"suggestions":"2593"},{"ruleId":"2351","severity":1,"message":"2423","line":3,"column":42,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":46},{"ruleId":"2351","severity":1,"message":"2397","line":14,"column":3,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":8},{"ruleId":"2393","severity":1,"message":"2406","line":46,"column":6,"nodeType":"2395","endLine":46,"endColumn":28,"suggestions":"2594"},{"ruleId":"2367","severity":1,"message":"2368","line":69,"column":31,"nodeType":"2369","messageId":"2370","endLine":69,"endColumn":33},{"ruleId":"2367","severity":1,"message":"2368","line":70,"column":37,"nodeType":"2369","messageId":"2370","endLine":70,"endColumn":39},{"ruleId":"2572","severity":1,"message":"2573","line":71,"column":22,"nodeType":"2574","messageId":"2575","endLine":71,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2402","line":1,"column":17,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2561","line":4,"column":7,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2562","line":5,"column":7,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2454","line":1,"column":17,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":26},{"ruleId":"2351","severity":1,"message":"2461","line":2,"column":24,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2383","line":2,"column":36,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":39},{"ruleId":"2351","severity":1,"message":"2402","line":13,"column":10,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":18},{"ruleId":"2393","severity":1,"message":"2595","line":24,"column":6,"nodeType":"2395","endLine":24,"endColumn":8,"suggestions":"2596"},{"ruleId":"2351","severity":1,"message":"2382","line":2,"column":22,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":28},{"ruleId":"2351","severity":1,"message":"2413","line":2,"column":30,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":33},{"ruleId":"2351","severity":1,"message":"2597","line":24,"column":10,"nodeType":"2353","messageId":"2354","endLine":24,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2598","line":25,"column":9,"nodeType":"2353","messageId":"2354","endLine":25,"endColumn":16},{"ruleId":"2517","severity":1,"message":"2518","line":59,"column":34,"nodeType":"2353","messageId":"2519","endLine":59,"endColumn":43},{"ruleId":"2351","severity":1,"message":"2589","line":60,"column":7,"nodeType":"2353","messageId":"2354","endLine":60,"endColumn":19},{"ruleId":"2599","replacedBy":"2600"},{"ruleId":"2601","replacedBy":"2602"},{"ruleId":"2351","severity":1,"message":"2352","line":10,"column":41,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":47},{"ruleId":"2351","severity":1,"message":"2355","line":3,"column":2,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2356","line":10,"column":2,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2357","line":36,"column":7,"nodeType":"2353","messageId":"2354","endLine":36,"endColumn":20},{"ruleId":"2358","severity":1,"message":"2359","line":56,"column":28,"nodeType":"2360","messageId":"2361","endLine":63,"endColumn":3},{"ruleId":"2363","severity":1,"message":"2364","line":14,"column":1,"nodeType":"2365","endLine":37,"endColumn":3},{"ruleId":"2351","severity":1,"message":"2371","line":9,"column":8,"nodeType":"2353","messageId":"2354","endLine":9,"endColumn":14},{"ruleId":"2599","replacedBy":"2603"},{"ruleId":"2601","replacedBy":"2604"},{"ruleId":"2351","severity":1,"message":"2372","line":2,"column":3,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2373","line":3,"column":3,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2374","line":4,"column":3,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2388","line":5,"column":3,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2375","line":7,"column":3,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2376","line":8,"column":3,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2377","line":12,"column":8,"nodeType":"2353","messageId":"2354","endLine":12,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2378","line":6,"column":8,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2379","line":16,"column":8,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":23},{"ruleId":"2351","severity":1,"message":"2380","line":17,"column":8,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2605","line":7,"column":8,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2377","line":13,"column":8,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2386","line":15,"column":3,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2387","line":16,"column":3,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2606","line":17,"column":3,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2607","line":18,"column":3,"nodeType":"2353","messageId":"2354","endLine":18,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2381","line":2,"column":10,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2382","line":2,"column":18,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2383","line":2,"column":26,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2384","line":2,"column":39,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":44},{"ruleId":"2351","severity":1,"message":"2608","line":2,"column":46,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":50},{"ruleId":"2351","severity":1,"message":"2605","line":11,"column":8,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2609","line":13,"column":3,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2385","line":14,"column":3,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2610","line":15,"column":3,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2611","line":17,"column":8,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2377","line":19,"column":8,"nodeType":"2353","messageId":"2354","endLine":19,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2612","line":22,"column":7,"nodeType":"2353","messageId":"2354","endLine":22,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2373","line":2,"column":21,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":37},{"ruleId":"2351","severity":1,"message":"2372","line":11,"column":3,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2373","line":12,"column":3,"nodeType":"2353","messageId":"2354","endLine":12,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2374","line":13,"column":3,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2388","line":14,"column":3,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2386","line":15,"column":3,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2375","line":16,"column":3,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2376","line":17,"column":3,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2389","line":47,"column":5,"nodeType":"2353","messageId":"2354","endLine":47,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2474","line":15,"column":8,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2475","line":26,"column":3,"nodeType":"2353","messageId":"2354","endLine":26,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2476","line":34,"column":3,"nodeType":"2353","messageId":"2354","endLine":34,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2477","line":35,"column":3,"nodeType":"2353","messageId":"2354","endLine":35,"endColumn":8},{"ruleId":"2351","severity":1,"message":"2478","line":37,"column":3,"nodeType":"2353","messageId":"2354","endLine":37,"endColumn":16},{"ruleId":"2393","severity":1,"message":"2479","line":58,"column":4,"nodeType":"2395","endLine":58,"endColumn":19,"suggestions":"2613"},{"ruleId":"2351","severity":1,"message":"2372","line":11,"column":3,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2373","line":12,"column":3,"nodeType":"2353","messageId":"2354","endLine":12,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2374","line":13,"column":3,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2388","line":14,"column":3,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2386","line":15,"column":3,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2375","line":16,"column":3,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2376","line":17,"column":3,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2614","line":19,"column":10,"nodeType":"2353","messageId":"2354","endLine":19,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2389","line":46,"column":5,"nodeType":"2353","messageId":"2354","endLine":46,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2615","line":50,"column":9,"nodeType":"2353","messageId":"2354","endLine":50,"endColumn":23},{"ruleId":"2351","severity":1,"message":"2537","line":1,"column":16,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2547","line":2,"column":8,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":17},{"ruleId":"2599","replacedBy":"2616"},{"ruleId":"2601","replacedBy":"2617"},{"ruleId":"2351","severity":1,"message":"2390","line":11,"column":8,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2618","line":7,"column":70,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":86},{"ruleId":"2351","severity":1,"message":"2619","line":17,"column":3,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2620","line":129,"column":49,"nodeType":"2353","messageId":"2354","endLine":129,"endColumn":55},{"ruleId":"2363","severity":1,"message":"2364","line":38,"column":1,"nodeType":"2365","endLine":162,"endColumn":3},{"ruleId":"2351","severity":1,"message":"2621","line":3,"column":10,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2402","line":5,"column":17,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2566","line":8,"column":10,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2622","line":37,"column":7,"nodeType":"2353","messageId":"2354","endLine":37,"endColumn":26},{"ruleId":"2351","severity":1,"message":"2623","line":47,"column":5,"nodeType":"2353","messageId":"2354","endLine":47,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2624","line":23,"column":3,"nodeType":"2353","messageId":"2354","endLine":23,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2537","line":1,"column":27,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":36},{"ruleId":"2351","severity":1,"message":"2550","line":10,"column":3,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":9},{"ruleId":"2351","severity":1,"message":"2625","line":17,"column":8,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2540","line":37,"column":13,"nodeType":"2353","messageId":"2354","endLine":37,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2550","line":10,"column":3,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":9},{"ruleId":"2351","severity":1,"message":"2625","line":14,"column":8,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2540","line":32,"column":5,"nodeType":"2353","messageId":"2354","endLine":32,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2626","line":5,"column":8,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2627","line":20,"column":5,"nodeType":"2353","messageId":"2354","endLine":20,"endColumn":13},{"ruleId":"2468","severity":1,"message":"2469","line":93,"column":5,"nodeType":"2470","messageId":"2471","endLine":118,"endColumn":6},{"ruleId":"2628","severity":1,"message":"2629","line":117,"column":9,"nodeType":"2630","messageId":"2631","endLine":117,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2632","line":132,"column":9,"nodeType":"2353","messageId":"2354","endLine":132,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2633","line":136,"column":9,"nodeType":"2353","messageId":"2354","endLine":136,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2509","line":211,"column":9,"nodeType":"2353","messageId":"2354","endLine":211,"endColumn":24},{"ruleId":"2393","severity":1,"message":"2634","line":252,"column":6,"nodeType":"2395","endLine":252,"endColumn":8,"suggestions":"2635"},{"ruleId":"2351","severity":1,"message":"2585","line":26,"column":12,"nodeType":"2353","messageId":"2354","endLine":26,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2586","line":35,"column":11,"nodeType":"2353","messageId":"2354","endLine":35,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2578","line":4,"column":25,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":39},{"ruleId":"2351","severity":1,"message":"2441","line":6,"column":5,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2636","line":7,"column":5,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2531","line":8,"column":5,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2444","line":10,"column":8,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2637","line":67,"column":10,"nodeType":"2353","messageId":"2354","endLine":67,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2355","line":3,"column":2,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2356","line":10,"column":2,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2357","line":36,"column":7,"nodeType":"2353","messageId":"2354","endLine":36,"endColumn":20},{"ruleId":"2358","severity":1,"message":"2359","line":56,"column":28,"nodeType":"2360","messageId":"2361","endLine":63,"endColumn":3},{"ruleId":"2351","severity":1,"message":"2618","line":7,"column":70,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":86},{"ruleId":"2351","severity":1,"message":"2619","line":17,"column":3,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2620","line":129,"column":49,"nodeType":"2353","messageId":"2354","endLine":129,"endColumn":55},{"ruleId":"2351","severity":1,"message":"2371","line":9,"column":8,"nodeType":"2353","messageId":"2354","endLine":9,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2352","line":10,"column":41,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":47},{"ruleId":"2363","severity":1,"message":"2364","line":38,"column":1,"nodeType":"2365","endLine":162,"endColumn":3},{"ruleId":"2351","severity":1,"message":"2624","line":23,"column":3,"nodeType":"2353","messageId":"2354","endLine":23,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2474","line":15,"column":8,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2475","line":26,"column":3,"nodeType":"2353","messageId":"2354","endLine":26,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2476","line":34,"column":3,"nodeType":"2353","messageId":"2354","endLine":34,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2477","line":35,"column":3,"nodeType":"2353","messageId":"2354","endLine":35,"endColumn":8},{"ruleId":"2351","severity":1,"message":"2478","line":37,"column":3,"nodeType":"2353","messageId":"2354","endLine":37,"endColumn":16},{"ruleId":"2393","severity":1,"message":"2479","line":58,"column":4,"nodeType":"2395","endLine":58,"endColumn":19,"suggestions":"2638"},{"ruleId":"2351","severity":1,"message":"2372","line":2,"column":3,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2373","line":3,"column":3,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2374","line":4,"column":3,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2388","line":5,"column":3,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2375","line":7,"column":3,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2376","line":8,"column":3,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2377","line":12,"column":8,"nodeType":"2353","messageId":"2354","endLine":12,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2381","line":2,"column":10,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2382","line":2,"column":18,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2383","line":2,"column":26,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2384","line":2,"column":39,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":44},{"ruleId":"2351","severity":1,"message":"2608","line":2,"column":46,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":50},{"ruleId":"2351","severity":1,"message":"2605","line":11,"column":8,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2609","line":13,"column":3,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2385","line":14,"column":3,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2610","line":15,"column":3,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2611","line":17,"column":8,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2377","line":19,"column":8,"nodeType":"2353","messageId":"2354","endLine":19,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2612","line":22,"column":7,"nodeType":"2353","messageId":"2354","endLine":22,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2378","line":6,"column":8,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2379","line":16,"column":8,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":23},{"ruleId":"2351","severity":1,"message":"2380","line":17,"column":8,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2605","line":7,"column":8,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2377","line":13,"column":8,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":29},{"ruleId":"2351","severity":1,"message":"2386","line":15,"column":3,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2387","line":16,"column":3,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2606","line":17,"column":3,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2607","line":18,"column":3,"nodeType":"2353","messageId":"2354","endLine":18,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2373","line":2,"column":21,"nodeType":"2353","messageId":"2354","endLine":2,"endColumn":37},{"ruleId":"2351","severity":1,"message":"2372","line":11,"column":3,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2373","line":12,"column":3,"nodeType":"2353","messageId":"2354","endLine":12,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2374","line":13,"column":3,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2388","line":14,"column":3,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2386","line":15,"column":3,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2375","line":16,"column":3,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2376","line":17,"column":3,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2614","line":19,"column":10,"nodeType":"2353","messageId":"2354","endLine":19,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2389","line":46,"column":5,"nodeType":"2353","messageId":"2354","endLine":46,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2615","line":50,"column":9,"nodeType":"2353","messageId":"2354","endLine":50,"endColumn":23},{"ruleId":"2351","severity":1,"message":"2372","line":11,"column":3,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2373","line":12,"column":3,"nodeType":"2353","messageId":"2354","endLine":12,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2374","line":13,"column":3,"nodeType":"2353","messageId":"2354","endLine":13,"endColumn":18},{"ruleId":"2351","severity":1,"message":"2388","line":14,"column":3,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2386","line":15,"column":3,"nodeType":"2353","messageId":"2354","endLine":15,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2375","line":16,"column":3,"nodeType":"2353","messageId":"2354","endLine":16,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2376","line":17,"column":3,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2389","line":47,"column":5,"nodeType":"2353","messageId":"2354","endLine":47,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2390","line":11,"column":8,"nodeType":"2353","messageId":"2354","endLine":11,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2550","line":10,"column":3,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":9},{"ruleId":"2351","severity":1,"message":"2625","line":14,"column":8,"nodeType":"2353","messageId":"2354","endLine":14,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2540","line":32,"column":5,"nodeType":"2353","messageId":"2354","endLine":32,"endColumn":12},{"ruleId":"2351","severity":1,"message":"2537","line":1,"column":27,"nodeType":"2353","messageId":"2354","endLine":1,"endColumn":36},{"ruleId":"2351","severity":1,"message":"2550","line":10,"column":3,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":9},{"ruleId":"2351","severity":1,"message":"2625","line":17,"column":8,"nodeType":"2353","messageId":"2354","endLine":17,"endColumn":16},{"ruleId":"2351","severity":1,"message":"2540","line":37,"column":13,"nodeType":"2353","messageId":"2354","endLine":37,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2621","line":3,"column":10,"nodeType":"2353","messageId":"2354","endLine":3,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2402","line":5,"column":17,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":25},{"ruleId":"2351","severity":1,"message":"2566","line":8,"column":10,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":17},{"ruleId":"2351","severity":1,"message":"2622","line":37,"column":7,"nodeType":"2353","messageId":"2354","endLine":37,"endColumn":26},{"ruleId":"2351","severity":1,"message":"2623","line":47,"column":5,"nodeType":"2353","messageId":"2354","endLine":47,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2626","line":5,"column":8,"nodeType":"2353","messageId":"2354","endLine":5,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2627","line":20,"column":5,"nodeType":"2353","messageId":"2354","endLine":20,"endColumn":13},{"ruleId":"2468","severity":1,"message":"2469","line":93,"column":5,"nodeType":"2470","messageId":"2471","endLine":118,"endColumn":6},{"ruleId":"2628","severity":1,"message":"2629","line":117,"column":9,"nodeType":"2630","messageId":"2631","endLine":117,"endColumn":15},{"ruleId":"2351","severity":1,"message":"2632","line":132,"column":9,"nodeType":"2353","messageId":"2354","endLine":132,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2633","line":136,"column":9,"nodeType":"2353","messageId":"2354","endLine":136,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2509","line":211,"column":9,"nodeType":"2353","messageId":"2354","endLine":211,"endColumn":24},{"ruleId":"2393","severity":1,"message":"2634","line":252,"column":6,"nodeType":"2395","endLine":252,"endColumn":8,"suggestions":"2639"},{"ruleId":"2351","severity":1,"message":"2585","line":26,"column":12,"nodeType":"2353","messageId":"2354","endLine":26,"endColumn":24},{"ruleId":"2351","severity":1,"message":"2586","line":35,"column":11,"nodeType":"2353","messageId":"2354","endLine":35,"endColumn":19},{"ruleId":"2351","severity":1,"message":"2578","line":4,"column":25,"nodeType":"2353","messageId":"2354","endLine":4,"endColumn":39},{"ruleId":"2351","severity":1,"message":"2441","line":6,"column":5,"nodeType":"2353","messageId":"2354","endLine":6,"endColumn":21},{"ruleId":"2351","severity":1,"message":"2636","line":7,"column":5,"nodeType":"2353","messageId":"2354","endLine":7,"endColumn":20},{"ruleId":"2351","severity":1,"message":"2531","line":8,"column":5,"nodeType":"2353","messageId":"2354","endLine":8,"endColumn":22},{"ruleId":"2351","severity":1,"message":"2444","line":10,"column":8,"nodeType":"2353","messageId":"2354","endLine":10,"endColumn":14},{"ruleId":"2351","severity":1,"message":"2637","line":67,"column":10,"nodeType":"2353","messageId":"2354","endLine":67,"endColumn":22},"no-unused-vars","'SIGNIN' is defined but never used.","Identifier","unusedVar","'AUTH_TOKEN' is defined but never used.","'signOutSuccess' is defined but never used.","'currentConfig' is assigned a value but never used.","require-yield","This generator function does not have 'yield'.","FunctionExpression","missingYield","'getCustomerDataAll' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'transferLeadSuccess' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Footer' is defined but never used.","'DashboardOutlined' is defined but never used.","'ShoppingOutlined' is defined but never used.","'DropboxOutlined' is defined but never used.","'UnorderedListOutlined' is defined but never used.","'FileOutlined' is defined but never used.","'navigationAdminConfig' is defined but never used.","'NavPanel' is defined but never used.","'NavNotification' is defined but never used.","'NavLanguage' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Space' is defined but never used.","'PieChartOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'UserAddOutlined' is defined but never used.","'TeamOutlined' is defined but never used.","'localization' is assigned a value but never used.","'Icon' is defined but never used.","'useHistory' is defined but never used.","'currentUnblockLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'customerUnblockListLoadDataByOne' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["2640"],"'Input' is defined but never used.","'onChange' is assigned a value but never used.","'addLoading' is assigned a value but never used.","'showMessage' is assigned a value but never used.","'message' is assigned a value but never used.","'useState' is defined but never used.","'message' is defined but never used.","React Hook useEffect has a missing dependency: 'loadCustomerList'. Either include it or remove the dependency array.",["2641"],"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["2642"],"'Content' is assigned a value but never used.","'Alert' is defined but never used.","'transformInToFormObject' is defined but never used.","'motion' is defined but never used.","'Table' is defined but never used.","'Tag' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'repeaterCurrentData?.repeater_category_id', and 'repeaterListLoadDataByOne'. Either include them or remove the dependency array.",["2643"],"'Image' is defined but never used.","'Flex' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'customerListLoading' is assigned a value but never used.",["2644"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["2645"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'ifEdit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getD' and 'id'. Either include them or remove the dependency array.",["2646"],"'tabledata' is assigned a value but never used.","'setTableData' is assigned a value but never used.","'CodeOutlined' is defined but never used.","'LineChartOutlined' is defined but never used.","'utils' is defined but never used.","'CalendarOutlined' is defined but never used.","'FileTextOutlined' is defined but never used.","'numeral' is defined but never used.","'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'loadCustomerUnblockListData'. Either include it or remove the dependency array.",["2647"],"'Checkbox' is defined but never used.","'Option' is assigned a value but never used.","'formItemLayout' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadRepeaterData'. Either include it or remove the dependency array.",["2648"],"'Component' is defined but never used.","'Popconfirm' is defined but never used.","'netTotal' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'Badge' is defined but never used.","'EnvironmentOutlined' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has missing dependencies: 'keys' and 'values'. Either include them or remove the dependency array.",["2649"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'data?.repeater_category_id'. Either include it or remove the dependency array.",["2650"],"'JwtAuthService' is defined but never used.","'hideAuthMessage' is assigned a value but never used.","'showAuthMessage' is assigned a value but never used.","'token' is assigned a value but never used.","'allowRedirect' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'redirect'. Either include them or remove the dependency array.",["2651"],"'RangePicker' is assigned a value but never used.","'PageHeader' is defined but never used.","'customerValidationLoad' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'quotationListLoadDataByOne'. Either include them or remove the dependency array.",["2652"],["2653"],"'AppBreadcrumb' is defined but never used.","'GoogleMap' is defined but never used.","'maskCurrency' is defined but never used.","React Hook useEffect has missing dependencies: 'loadCustomerList', 'loadTodoDataAll', 'loadTodoType', and 'loadProjectType'. Either include them or remove the dependency array.",["2654"],"'loc' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["2655"],"'leadError' is defined but never used.","'value' is defined but never used.",["2656"],["2657"],"'searchLocation' is assigned a value but never used.","'cus' is assigned a value but never used.","'setCus' is assigned a value but never used.","'Pagination' is defined but never used.","'type' is defined but never used.","'form2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'leadloaddata'. Either include it or remove the dependency array.",["2658"],"React Hook useEffect has missing dependencies: 'id', 'leadLoadDataByOne', and 'loadFollowupTypeAll'. Either include them or remove the dependency array.",["2659"],"'onAddBoardModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getKanbanLeadLoading'. Either include it or remove the dependency array.",["2660"],"'Fragment' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'Link' is defined but never used.","'BgImg' is defined but never used.","no-shadow-restricted-names","Shadowing of global property 'undefined'.","shadowingRestrictedName","'todoTypeData' is assigned a value but never used.","'todoTypeLoading' is assigned a value but never used.","'messages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadTodoType'. Either include it or remove the dependency array.",["2661"],"'todoType' is assigned a value but never used.",["2662"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"2663","text":"2664"},"'PaperClipOutlined' is defined but never used.","'orel' is defined but never used.","'customerLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'customerLoadDataByOne' and 'id'. Either include them or remove the dependency array.",["2665"],{"range":"2666","text":"2664"},"'useEffect' is defined but never used.","'getUserPermissionSuccess' is assigned a value but never used.","'userPermission' is assigned a value but never used.","'loading' is assigned a value but never used.","'DeleteOutlined' is defined but never used.","'DownloadOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'loadQuotationListData'. Either include it or remove the dependency array.",["2667"],"'onDelete' is assigned a value but never used.","'onEdit' is assigned a value but never used.","'PropTypes' is defined but never used.","'connect' is defined but never used.","'leadloaddata' is defined but never used.","'Switch' is defined but never used.","'followUpLoading' is assigned a value but never used.","'remark' is assigned a value but never used.","'DragDropContext' is defined but never used.","'ModalForm' is defined but never used.","React Hook useEffect has a missing dependency: 'getLeadTimeLineSuccess'. Either include it or remove the dependency array.",["2668"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'ImageSvg' is defined but never used.","'CustomIcon' is defined but never used.","'DefaultLocation' is assigned a value but never used.","'DefaultZoom' is assigned a value but never used.","'Radio' is defined but never used.","'Transfer' is defined but never used.","'EditOutlined' is defined but never used.","'toUpper' is defined but never used.","React Hook useEffect has a missing dependency: 'loadUserPermissionListDataSuccess'. Either include it or remove the dependency array.",["2669"],"React Hook useEffect has a missing dependency: 'loadUserRoleListDataSuccess'. Either include it or remove the dependency array.",["2670"],["2671"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PlusOutlined' is defined but never used.","'memberIds' is defined but never used.","'AssigneeAvatar' is defined but never used.","React Hook useEffect has a missing dependency: 'loadUserListDataSuccess'. Either include it or remove the dependency array.",["2672"],"'current' is assigned a value but never used.","'onApproval' is assigned a value but never used.","'onReject' is assigned a value but never used.",["2673"],"'renameActive' is assigned a value but never used.","'onFinish' is assigned a value but never used.","'INITIALIZE' is assigned a value but never used.","'project_value' is assigned a value but never used.","'addressArray' is assigned a value but never used.","'newCard' is assigned a value but never used.","'transferLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMegabitDataSuccess'. Either include it or remove the dependency array.",["2674"],["2675"],"React Hook useEffect has a missing dependency: 'loadQuotationApprovalListData'. Either include it or remove the dependency array.",["2676"],"'isEmpty' is defined but never used.","'Dragger' is assigned a value but never used.","no-native-reassign",["2677"],"no-negated-in-lhs",["2678"],["2677"],["2678"],"'MenuContentAdmin' is defined but never used.","'AppleOutlined' is defined but never used.","'AndroidOutlined' is defined but never used.","'Tabs' is defined but never used.","'HomeOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'AvatarStatus' is defined but never used.","'profileImg' is assigned a value but never used.",["2679"],"'APP_PREFIX_PATH' is defined but never used.","'closeMobileNav' is assigned a value but never used.",["2677"],["2678"],"'TODO_FILTER_LIST' is defined but never used.","'getTodoDataAll' is defined but never used.","'stage6' is assigned a value but never used.","'EyeOutlined' is defined but never used.","'getInnerCircleValue' is assigned a value but never used.","'todosList' is assigned a value but never used.","'TODO_FILTER_LIST_ERROR' is defined but never used.","'FormItem' is defined but never used.","'reorder' is defined but never used.","'cardData' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'onCloseModal' is assigned a value but never used.","'onModalSubmit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getKanbanTodoLoading'. Either include it or remove the dependency array.",["2680"],"'CommentOutlined' is defined but never used.","'SubIndicator' is defined but never used.",["2681"],["2682"],{"desc":"2683","fix":"2684"},{"desc":"2685","fix":"2686"},{"desc":"2687","fix":"2688"},{"desc":"2689","fix":"2690"},{"desc":"2685","fix":"2691"},{"desc":"2692","fix":"2693"},{"desc":"2694","fix":"2695"},{"desc":"2696","fix":"2697"},{"desc":"2698","fix":"2699"},{"desc":"2700","fix":"2701"},{"desc":"2702","fix":"2703"},{"desc":"2704","fix":"2705"},{"desc":"2706","fix":"2707"},{"desc":"2706","fix":"2708"},{"desc":"2709","fix":"2710"},{"desc":"2711","fix":"2712"},{"desc":"2709","fix":"2713"},{"desc":"2714","fix":"2715"},{"desc":"2716","fix":"2717"},{"desc":"2718","fix":"2719"},{"desc":"2720","fix":"2721"},{"desc":"2722","fix":"2723"},{"desc":"2714","fix":"2724"},[6317,6317]," rel=\"noreferrer\"",{"desc":"2725","fix":"2726"},[1217,1217],{"desc":"2727","fix":"2728"},{"desc":"2729","fix":"2730"},{"desc":"2731","fix":"2732"},{"desc":"2733","fix":"2734"},{"desc":"2731","fix":"2735"},{"desc":"2736","fix":"2737"},{"desc":"2738","fix":"2739"},{"desc":"2740","fix":"2741"},{"desc":"2742","fix":"2743"},{"desc":"2744","fix":"2745"},"no-global-assign","no-unsafe-negation",{"desc":"2704","fix":"2746"},{"desc":"2747","fix":"2748"},{"desc":"2704","fix":"2749"},{"desc":"2747","fix":"2750"},"Update the dependencies array to be: [customerUnblockListLoadDataByOne, id]",{"range":"2751","text":"2752"},"Update the dependencies array to be: [loadCustomerList]",{"range":"2753","text":"2754"},"Update the dependencies array to be: [form, selectedCustomer]",{"range":"2755","text":"2756"},"Update the dependencies array to be: [id, repeaterCurrentData?.repeater_category_id, repeaterListLoadDataByOne]",{"range":"2757","text":"2758"},{"range":"2759","text":"2754"},"Update the dependencies array to be: [childData, selectedCustomer, selectedDate, vatType, selectedTerm, props]",{"range":"2760","text":"2761"},"Update the dependencies array to be: [getD, id]",{"range":"2762","text":"2763"},"Update the dependencies array to be: [loadCustomerUnblockListData]",{"range":"2764","text":"2765"},"Update the dependencies array to be: [loadRepeaterData]",{"range":"2766","text":"2767"},"Update the dependencies array to be: [data, keys, values]",{"range":"2768","text":"2769"},"Update the dependencies array to be: [data?.repeater_category_id]",{"range":"2770","text":"2771"},"Update the dependencies array to be: [authenticated, history, redirect]",{"range":"2772","text":"2773"},"Update the dependencies array to be: [id, quotationListLoadDataByOne]",{"range":"2774","text":"2775"},{"range":"2776","text":"2775"},"Update the dependencies array to be: [loadCustomerList, loadTodoDataAll, loadTodoType, loadProjectType]",{"range":"2777","text":"2778"},"Update the dependencies array to be: [form, currentData, history]",{"range":"2779","text":"2780"},{"range":"2781","text":"2778"},"Update the dependencies array to be: [form, loc]",{"range":"2782","text":"2783"},"Update the dependencies array to be: [leadloaddata]",{"range":"2784","text":"2785"},"Update the dependencies array to be: [id, leadLoadDataByOne, loadFollowupTypeAll]",{"range":"2786","text":"2787"},"Update the dependencies array to be: [getKanbanLeadLoading]",{"range":"2788","text":"2789"},"Update the dependencies array to be: [loadTodoType]",{"range":"2790","text":"2791"},{"range":"2792","text":"2783"},"Update the dependencies array to be: [customerLoadDataByOne, id]",{"range":"2793","text":"2794"},"Update the dependencies array to be: [loadQuotationListData]",{"range":"2795","text":"2796"},"Update the dependencies array to be: [current, getLeadTimeLineSuccess]",{"range":"2797","text":"2798"},"Update the dependencies array to be: [loadUserPermissionListDataSuccess]",{"range":"2799","text":"2800"},"Update the dependencies array to be: [loadUserRoleListDataSuccess]",{"range":"2801","text":"2802"},{"range":"2803","text":"2800"},"Update the dependencies array to be: [loadUserListDataSuccess]",{"range":"2804","text":"2805"},"Update the dependencies array to be: [cardData, form]",{"range":"2806","text":"2807"},"Update the dependencies array to be: [getMegabitDataSuccess, showTransferModel]",{"range":"2808","text":"2809"},"Update the dependencies array to be: [currentData, form, setData]",{"range":"2810","text":"2811"},"Update the dependencies array to be: [loadQuotationApprovalListData]",{"range":"2812","text":"2813"},{"range":"2814","text":"2773"},"Update the dependencies array to be: [getKanbanTodoLoading]",{"range":"2815","text":"2816"},{"range":"2817","text":"2773"},{"range":"2818","text":"2816"},[741,743],"[customerUnblockListLoadDataByOne, id]",[928,930],"[loadCustomerList]",[1153,1171],"[form, selectedCustomer]",[1563,1565],"[id, repeaterCurrentData?.repeater_category_id, repeaterListLoadDataByOne]",[1060,1062],[5880,5946],"[childData, selectedCustomer, selectedDate, vatType, selectedTerm, props]",[2698,2700],"[getD, id]",[1029,1031],"[loadCustomerUnblockListData]",[953,955],"[loadRepeaterData]",[847,853],"[data, keys, values]",[1301,1303],"[data?.repeater_category_id]",[1299,1314],"[authenticated, history, redirect]",[747,749],"[id, quotationListLoadDataByOne]",[722,724],[2020,2022],"[loadCustomerList, loadTodoDataAll, loadTodoType, loadProjectType]",[2485,2504],"[form, currentData, history]",[2073,2075],[2625,2630],"[form, loc]",[5601,5603],"[leadloaddata]",[1191,1193],"[id, leadLoadDataByOne, loadFollowupTypeAll]",[7634,7636],"[getKanbanLeadLoading]",[3577,3579],"[loadTodoType]",[5772,5777],[933,935],"[customerLoadDataByOne, id]",[890,892],"[loadQuotationListData]",[773,782],"[current, getLeadTimeLineSuccess]",[791,793],"[loadUserPermissionListDataSuccess]",[866,868],"[loadUserRoleListDataSuccess]",[1303,1305],[692,694],"[loadUserListDataSuccess]",[1572,1582],"[cardData, form]",[635,654],"[getMegabitDataSuccess, showTransferModel]",[938,960],"[currentData, form, setData]",[879,881],"[loadQuotationApprovalListData]",[1299,1314],[6886,6888],"[getKanbanTodoLoading]",[1299,1314],[6886,6888]]