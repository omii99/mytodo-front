{"version":3,"sources":["components/shared-components/EllipsisDropdown/index.js","views/app-views/todo/todo-list/todo-listTable/todoList.js","views/app-views/todo/todo-list/todo-kanban/ScrumboardData.js","views/app-views/todo/todo-list/todo-kanban/ScrumboardContext.js","views/app-views/todo/todo-list/todo-kanban/utils.js","views/app-views/todo/todo-list/todo-kanban/BoardCard.js","views/app-views/todo/todo-list/todo-kanban/Board.js","views/app-views/todo/todo-list/todo-kanban/reoreder.js","views/app-views/todo/todo-list/todo-kanban/todoKanban.js","views/app-views/todo/todo-list/todoMain.js"],"names":["EllipsisDropdown","props","overlay","menu","placement","trigger","className","EllipsisOutlined","defaultProps","InfluenceList","todosList","deleteTodo","setCurrent","data","page","total","loading","onChangePage","history","useHistory","columns","title","dataIndex","render","_","record","i","size","utils","getNameInitial","key","color","status","owner","description","format","startDate","endDate","row","Item","onClick","push","projectId","EditOutlined","Divider","console","log","DeleteOutlined","dataSource","pagination","justify","defaultCurrent","current","onChange","prototype","PropTypes","object","isRequired","func","connect","state","todo","y","Date","getFullYear","labels","label","toBeProcessCards","id","name","cover","members","attachments","src","comments","message","date","dueDate","processingCards","submittedCards","completedCards","scrumboardData","UPDATE_ORDERED","UPDATE_COLUMN","UPDATE_MODAL","UPDATE_MODAL_MODE","UPDATE_CURRENT_LIST_ID","UPDATE_CARD_DATA","scrumboardReducer","action","type","ordered","payload","modal","modalMode","currentListId","cardData","ScrumboardContext","createContext","ScrumboardProvider","children","updatedState","Object","keys","useReducer","dispatch","useEffect","dispatcher","updateOrdered","updateColumns","updateModal","updateModalMode","updateCurrentListId","updateCardData","Provider","value","modalModeTypes","number","getLabelsColor","filter","elm","InnerCardList","React","memo","contents","map","item","index","draggableId","toString","dragProvided","dragSnapshot","ref","innerRef","draggableProps","dragHandleProps","hoverable","listId","todoname","InnerList","dropProvided","placeholder","BoardCard","ignoreContainerClipping","internalScroll","scrollContainerStyle","isDropDisabled","isCombineEnabled","listType","style","useClone","droppableId","renderClone","dropSnapshot","autoHide","droppableProps","Board","isScrollable","useContext","useState","onUpdateCardModal","obj","provided","snapshot","isDragging","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","reorderQuoteMap","quoteMap","source","destination","next","target","reordered","ScrumboardWrapper","onDragEnd","a","combine","column","withQuoteRemoved","newColumns","updatedTodo","stageId","stageName","stageid","stagename","updateTodoStage","setLoading","setTimeout","align","height","spinning","opacity","containerHeight","BoardWrapper","withScrollableColumns","direction","TodoKanban","getKanbanTodoLoading","columnLoading","kanbanLoading","VIEW_LIST","ContectFilterGroup","Form","useForm","filterForm","parentCallback","form","gutter","xs","md","Search","width","validateFields","then","values","category","todoType","todoName","searchText","TodoMain","view","setView","loaddata","loadFilteredData","extraViewBtnGroup","Group","defaultValue","e","onChangeProjectView","Button","paddingTop","UnorderedListOutlined","shape","padding","PlusOutlined","subTitle","AppBreadcrumb","extra","childData","todoList"],"mappings":"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","file":"static/js/10.efbc9299.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","import { Menu, Pagination, Row, Table, Tag,Tooltip } from \"antd\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport { EyeOutlined, EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\nimport React, { useState } from \"react\";\nimport utils from \"utils\";\nimport Moment from \"react-moment\";\nimport { toUpper } from \"lodash\";\n\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\nimport {\n  deleteTodo,\n  setCurrent,\n} from \"../../redux/action/todoAction\";\nimport { useHistory } from \"react-router-dom\";\n\nconst getStatusTagColor = (status) => {\n  if (status === \"Todo\") {\n    return \"red\";\n  }\n  if (status === \"Research\") {\n    return \"cyan\";\n  }\n  if (status === \"Inprogress\") {\n    return \"green\";\n  } \n  if (status === \"Review\") {\n    return \"blue\";\n  } \n   else {\n    return \"gold\";\n  }\n};\n\nconst getInnerCircleValue = (status) => {\n  if (status) {\n    return \"Yes\";\n  } else {\n    return \"No\";\n  }\n};\n\nconst InfluenceList = (props) => {\n  const {\n    todosList,\n    deleteTodo,\n    setCurrent,\n    data,\n    page,\n    total,\n    loading,\n    onChangePage,\n  } = props;\n  let history = useHistory();\n\n  const tableDropdownMenu = (row) => {\n    const onDelete = () => {\n      deleteTodo(row.projectId);\n      console.log(`deleted row ${row.projectId}`);\n    };\n    const onEdit = () => {\n      setCurrent(row);\n      history.push(`/app/todo/list/edit/${row.projectId}`);\n    };\n    return (\n      <Menu>\n        {/* <Menu.Item key=''>\n          <EyeOutlined />\n          <span>View</span>\n        </Menu.Item> */}\n        <Menu.Item key=\"1\" onClick={onEdit}>\n          <EditOutlined />\n          <span>Edit</span>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item key=\"2\" onClick={onDelete}>\n          <DeleteOutlined />\n          <span>Delete</span>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  const columns = [\n    {\n      title: \"\",\n      dataIndex: \"image\",\n      render: (_, record, i) => {\n        return i <= i++ ? (\n          <Avatar size=\"default\" className={`ml-1 ant-avatar-cyan`}>\n            <span className=\"font-weight-semibold font-size-sm\">\n              {utils.getNameInitial(record?.title)}\n            </span>\n          </Avatar>\n        ) : null;\n      },\n    },\n\n\n    {\n      key: \"ProjectName\",\n      title: \"Project Name\",\n      dataIndex: \"pname\",\n      render: (_, record) => {\n        return <p className=\"mb-0\">{record.title && record.title}</p>;\n      },\n    },\n    {\n      key: \"status\",\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: (_, record) => (\n            <Tag color={getStatusTagColor(record.status && record.status)}>\n              {record.status}\n            </Tag>\n          ),\n    },\n    {\n      key: \"name\",\n      title: \"Assignee Name\",\n      dataIndex: \"name\",\n      render: (_, record) => <p className=\"mb-0\">{record?.owner}</p>,\n    },\n\n\n    {\n      key: \"description\",\n      title: \"Description\",\n      dataIndex: \"des\",\n      render: (_, record) => {\n        return (\n        <Tooltip placement=\"bottom\" title={record.description}>\n          <p className=\"mb-0\">{record.description && record.description}</p>\n          </Tooltip>);\n      },\n    },\n \n    {\n      key: \"created_at\",\n      title: \"Created Date\",\n      dataIndex: \"created_at\",\n      render: (_, record) => (\n        <p className=\"mb-0\">\n          <span>\n            <Moment format=\"YYYY/MM/DD\">\n              {record.startDate && record.startDate}\n            </Moment>\n          </span>\n        </p>\n      ),\n    },\n    {\n      key: \"endDate\",\n      title: \"End Date\",\n      dataIndex: \"endDate\",\n      render: (_, record) => (\n        <p className=\"mb-0\">\n          <span>\n            <Moment format=\"YYYY/MM/DD\">\n              {record.endDate && record.endDate}\n            </Moment>\n          </span>\n        </p>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"\",\n      render: (_, todosList) => (\n        <div className=\"text-right\">\n          <EllipsisDropdown\n            menu={tableDropdownMenu(todosList && todosList)}\n          />\n        </div>\n      ),\n    },\n  ];\n  console.log(data.data,\"data list\")\n  return (\n    <>\n      <Table\n        columns={columns}\n        dataSource={data.data}\n        loading={loading}\n        pagination={false}\n      />\n      <Row justify=\"end\" className=\"mt-2\">\n        <Pagination\n          defaultCurrent={page}\n          current={page}\n          total={total}\n          onChange={onChangePage}\n        />\n      </Row>\n    </>\n  );\n};\n\nInfluenceList.prototype = {\n  data: PropTypes.object.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.todo,\n});\n\nexport default connect(mapStateToProps, {\n  deleteTodo,\n  setCurrent,\n})(InfluenceList);\n","const y = new Date().getFullYear();\n\nexport const memberIds = [\n  'eileenHorton-1153',\n  'terranceMoreno-1322',\n  'ronVargas7653',\n  'lukeCook4721',\n  'joyceFreeman1384',\n  'samanthaPhillips8493',\n  'taraFletcher1263',\n  'frederickAdams6532',\n  'carolynHanson7953',\n  'brittanyHale3683',\n  'lloydObrien1564',\n  'gabriellaMay2850',\n  'leeWheeler1941',\n  'gailBarnes7615',\n  'ellaRobinson1093',\n];\n\nexport const membersDetail = [\n  {\n    id: 'eileenHorton-1153',\n    name: 'Eileen Horton',\n    email: 'eileen_h@hotmail.com',\n    img: '/img/avatars/thumb-1.jpg',\n  },\n  {\n    id: 'terranceMoreno-1322',\n    name: 'Terrance Moreno',\n    email: '',\n    img: '/img/avatars/thumb-2.jpg',\n  },\n  {\n    id: 'ronVargas7653',\n    name: 'Ron Vargas',\n    email: 'ronnie_vergas@infotech.io',\n    img: '/img/avatars/thumb-3.jpg',\n  },\n  {\n    id: 'lukeCook4721',\n    name: 'Luke Cook',\n    email: 'cookie_lukie@hotmail.com',\n    img: '/img/avatars/thumb-4.jpg',\n  },\n  {\n    id: 'joyceFreeman1384',\n    name: 'Joyce Freeman',\n    email: 'joyce991@infotech.io',\n    img: '/img/avatars/thumb-5.jpg',\n  },\n  {\n    id: 'samanthaPhillips8493',\n    name: 'Samantha Phillips',\n    email: 'samanthaphil@infotech.io',\n    img: '/img/avatars/thumb-6.jpg',\n  },\n  {\n    id: 'taraFletcher1263',\n    name: 'Tara Fletcher',\n    email: 'taratarara@imaze.edu.du',\n    img: '/img/avatars/thumb-7.jpg',\n  },\n  {\n    id: 'frederickAdams6532',\n    name: 'Frederick Adams',\n    email: 'iamfred@imaze.infotech.io',\n    img: '/img/avatars/thumb-8.jpg',\n  },\n  {\n    id: 'carolynHanson7953',\n    name: 'Carolyn Hanson',\n    email: 'carolyn_h@gmail.com',\n    img: '/img/avatars/thumb-9.jpg',\n  },\n  {\n    id: 'brittanyHale3683',\n    name: 'Brittany Hale',\n    email: 'brittany1134@gmail.com',\n    img: '/img/avatars/thumb-10.jpg',\n  },\n  {\n    id: 'lloydObrien1564',\n    name: 'Lloyd Obrien',\n    email: 'handsome-obrien@hotmail.com',\n    img: '/img/avatars/thumb-11.jpg',\n  },\n  {\n    id: 'gabriellaMay2850',\n    name: 'Gabriella May',\n    email: 'maymaymay12@infotech.io',\n    img: '/img/avatars/thumb-12.jpg',\n  },\n  {\n    id: 'leeWheeler1941',\n    name: 'Lee Wheeler',\n    email: '',\n    img: '/img/avatars/thumb-13.jpg',\n  },\n  {\n    id: 'gailBarnes7615',\n    name: 'Gail Barnes',\n    email: 'gailby0116@infotech.io',\n    img: '/img/avatars/thumb-14.jpg',\n  },\n  {\n    id: 'ellaRobinson1093',\n    name: 'Ella Robinson',\n    email: 'ella_robinson@infotech.io',\n    img: '/img/avatars/thumb-15.jpg',\n  },\n];\n\nexport const labels = [\n  {\n    color: 'green',\n    label: 'active',\n  },\n  {\n    color: 'red',\n    label: 'inactive',\n  },\n];\n\nconst toBeProcessCards = [\n  {\n    id: 'zb7zxtjctd',\n    name: 'Unable to upload file',\n    description:\n      'Scenester hashtag sustainable art party 3 wolf moon live-edge portland offal master cleanse disrupt viral palo santo tacos. Offal sriracha you probably havent heard of them vaporware glossier.',\n    cover: '/img/others/img-13.jpg',\n    members: ['eileenHorton-1153', 'terranceMoreno-1322', 'ronVargas7653'],\n    labels: ['Task', 'Live issue'],\n    attachments: [\n      {\n        id: 'jubuK7XGp3',\n        name: 'mail.jpg',\n        src: '/img/others/img-13.jpg',\n        size: '36.1kb',\n      },\n      {\n        id: 'xsb3HCejCM',\n        name: 'mail.jpg',\n        src: '/img/others/img-14.jpg',\n        size: '55.9kb',\n      },\n    ],\n    comments: [\n      {\n        id: 'R22TqMkACm',\n        name: 'Carolyn Hanson',\n        src: '/img/avatars/thumb-9.jpg',\n        message:\n          'I am baby kitsch plaid mustache, williamsburg butcher gluten-free 3 wolf moon authentic quinoa selvage knausgaard unicorn. Palo santo viral everyday carry, heirloom tumblr raw denim yr iceland wayfarers single-origin coffee tote bag shoreditch cloud bread poke.',\n        date: new Date(y, 4, 20),\n      },\n    ],\n    dueDate: new Date(y, 7, 5),\n  },\n  {\n    id: '7qgsduurxt',\n    name: 'Table data incorrect',\n    description: '',\n    cover: '',\n    members: ['frederickAdams6532'],\n    labels: ['Bug'],\n    attachments: [],\n    comments: [\n      {\n        id: 'Wx8FDSsVTg',\n        name: 'Samantha Phillips',\n        src: '/img/avatars/thumb-6.jpg',\n        message:\n          'Helvetica 8-bit photo booth tumblr food truck. Enamel pin wolf tousled sartorial, brunch shoreditch skateboard beard helvetica. Plaid typewriter gastropub bespoke.',\n        date: new Date(y, 4, 20),\n      },\n      {\n        id: '3AhkqqSFFr',\n        name: 'Ron Vargas',\n        src: '/img/avatars/thumb-3.jpg',\n        message:\n          'Af trust fund meggings, meditation chicharrones brunch wolf narwhal shoreditch whatever bicycle rights ramps. ',\n        date: new Date(y, 4, 20),\n      },\n    ],\n    dueDate: new Date(y, 6, 11),\n  },\n  {\n    id: 'wtwgpz6csc',\n    name: 'Fix broken UI',\n    description:\n      'Air plant subway tile four loko ramps. Microdosing offal tote bag, single-origin coffee biodiesel before they sold out swag pok pok gastropub tacos letterpress.',\n    cover: '',\n    members: ['leeWheeler1941', 'joyceFreeman1384'],\n    labels: ['Low priority'],\n    attachments: [],\n    comments: [\n      {\n        id: 'bAvBdtKHNC',\n        name: 'Lloyd Obrien',\n        src: '/img/avatars/thumb-11.jpg',\n        message:\n          'Helvetica 8-bit photo booth tumblr food truck. Enamel pin wolf tousled sartorial, brunch shoreditch skateboard beard helvetica. Plaid typewriter gastropub bespoke.',\n        date: new Date(y, 4, 20),\n      },\n    ],\n    dueDate: new Date(y, 7, 5),\n  },\n];\n\nconst processingCards = [\n  {\n    id: 'ywejrdr3rn',\n    name: 'Fix dashboard layout',\n    description:\n      'Biodiesel selvage letterpress 8-bit, coloring book banjo austin pabst post-ironic try-hard gluten-free tilde authentic prism man braid.',\n    cover: '',\n    members: ['taraFletcher1263', 'frederickAdams6532'],\n    labels: ['Bug'],\n    attachments: [],\n    comments: [\n      {\n        id: 'afPugkEmkp',\n        name: 'Eileen Horton',\n        src: '/img/avatars/thumb-1.jpg',\n        message: '',\n        date: new Date(y, 5, 16),\n      },\n    ],\n    dueDate: new Date(y, 3, 17),\n  },\n  {\n    id: 'tkBXWJGwkr',\n    name: 'New design',\n    description:\n      'Typewriter hell of cloud bread health goth beard mlkshk four loko.',\n    cover: '',\n    members: ['brittanyHale3683'],\n    labels: ['Task'],\n    attachments: [\n      {\n        id: 'NjHJhHeWrG',\n        name: 'issue.jpg',\n        src: '/img/others/img-16.jpg',\n        size: '46.1kb',\n      },\n    ],\n    comments: [\n      {\n        id: 'MAsPDzGwnA',\n        name: 'Ron Vargas',\n        src: '/img/avatars/thumb-3.jpg',\n        message:\n          'Af trust fund meggings, meditation chicharrones brunch wolf narwhal shoreditch whatever bicycle rights ramps. ',\n        date: new Date(y, 4, 20),\n      },\n    ],\n    dueDate: null,\n  },\n  {\n    id: 'VQgUDrYJYH',\n    name: 'Improve user experiences',\n    description: '',\n    cover: '',\n    members: ['samanthaPhillips8493'],\n    labels: ['Low priority', 'Task'],\n    attachments: [],\n    comments: [],\n    dueDate: new Date(y, 4, 20),\n  },\n];\n\nconst submittedCards = [\n  {\n    id: 'jzjn95g3v4',\n    name: 'Update node environment',\n    description:\n      'Unicorn occupy locavore pug, stumptown literally tofu irony. Af street art paleo shoreditch. Banh mi before they sold out activated charcoal.',\n    cover: '',\n    members: ['ronVargas7653'],\n    labels: ['Low priority'],\n    attachments: [],\n    comments: [\n      {\n        id: 'nBAGhJqe9v',\n        name: 'Ron Vargas',\n        src: '/img/avatars/thumb-3.jpg',\n        message: '',\n        date: new Date(y, 1, 8),\n      },\n    ],\n    dueDate: null,\n  },\n  {\n    id: 'ZFQDPmscwA',\n    name: 'Remove user data',\n    description:\n      'Crucifix polaroid hot chicken asymmetrical wolf helvetica keytar fashion axe ramps YOLO wayfarers 90s.',\n    cover: '/img/others/img-15.jpg',\n    members: ['carolynHanson7953', 'brittanyHale3683'],\n    labels: ['Live issue'],\n    attachments: [\n      {\n        id: 'NjHJhHeWrG',\n        name: 'issue.jpg',\n        src: '/img/others/img-15.jpg',\n        size: '42.6kb',\n      },\n    ],\n    comments: [\n      {\n        id: 'nBAGhJqe9v',\n        name: 'Ron Vargas',\n        src: '/img/avatars/thumb-3.jpg',\n        message: '',\n        date: new Date(y, 1, 8),\n      },\n    ],\n    dueDate: null,\n  },\n];\n\nconst completedCards = [\n  {\n    id: 'yhjk5679xr',\n    name: 'Ready to test',\n    description:\n      'Yr green juice health goth, williamsburg four dollar toast shabby chic meggings jean shorts VHS.',\n    cover: '',\n    members: ['leeWheeler1941', 'carolynHanson7953'],\n    labels: ['Task'],\n    attachments: [],\n    comments: [\n      {\n        id: 'yxc5gwrXUZ',\n        name: 'Ron Vargas',\n        src: '/img/avatars/thumb-3.jpg',\n        message: '',\n        date: new Date(y, 3, 4),\n      },\n    ],\n    dueDate: new Date(y, 3, 4),\n  },\n  {\n    id: 'UMgvapYVXm',\n    name: 'Slow API connection',\n    description:\n      'Yr green juice health goth, williamsburg four dollar toast shabby chic meggings jean shorts VHS.',\n    cover: '',\n    members: ['joyceFreeman1384', 'samanthaPhillips8493', 'taraFletcher1263'],\n    labels: ['Bug'],\n    attachments: [],\n    comments: [],\n    dueDate: new Date(y, 7, 19),\n  },\n  {\n    id: 'uRZNVsCmDW',\n    name: 'Login failed',\n    description:\n      'Air plant subway tile four loko ramps. Microdosing offal tote bag, single-origin coffee biodiesel before they sold.',\n    cover: '',\n    members: ['lukeCook4721'],\n    labels: ['Live issue'],\n    attachments: [],\n    comments: [],\n    dueDate: new Date(y, 4, 6),\n  },\n  {\n    id: 'PBSGmhVgvS',\n    name: 'Locale incorrect',\n    description:\n      'Hoodie mustache woke pour-over you probably havent heard of them cray.',\n    cover: '',\n    members: ['joyceFreeman1384', 'ronVargas7653'],\n    labels: ['Low priority'],\n    attachments: [],\n    comments: [\n      {\n        id: 'dNskbPFeQD',\n        name: 'Ron Vargas',\n        src: '/img/avatars/thumb-3.jpg',\n        message:\n          'Af trust fund meggings, meditation chicharrones brunch wolf narwhal shoreditch whatever bicycle rights ramps. ',\n        date: new Date(y, 4, 20),\n      },\n      {\n        id: 'qNzkmRZiTO',\n        name: 'Terrance Moreno',\n        src: '/img/avatars/thumb-2.jpg',\n        message: 'Noted!',\n        date: new Date(y, 4, 20),\n      },\n    ],\n    dueDate: new Date(y, 7, 13),\n  },\n];\n\nexport const scrumboardData = {\n  \"Todo\": [...toBeProcessCards],\n  \"Research\": [...processingCards],\n  \"Inprogress\": [...submittedCards],\n  \"Review\": [...completedCards],\n  \"Completed\":[...toBeProcessCards],\n  // \"5M Purchases\":[...processingCards],\n};\n","import React, {createContext, useEffect, useReducer} from \"react\";\nimport {scrumboardData} from './ScrumboardData';\n\nconst UPDATE_ORDERED = 'UPDATE_ORDERED'\nconst UPDATE_COLUMN = 'UPDATE_COLUMN'\nconst UPDATE_MODAL = 'UPDATE_MODAL'\nconst UPDATE_MODAL_MODE = 'UPDATE_MODAL_MODE'\nconst UPDATE_CURRENT_LIST_ID = 'UPDATE_CURRENT_LIST_ID'\nconst UPDATE_CARD_DATA = 'UPDATE_CARD_DATA'\n\nexport const scrumboardReducer = (state, action) => {\n    switch (action.type) {\n        case UPDATE_ORDERED:\n            return {\n                ...state,\n                ordered: action.payload\n            }\n        case UPDATE_COLUMN:\n            return {\n                ...state,\n                columns: action.payload\n            }\n        case UPDATE_MODAL:\n            return {\n                ...state,\n                modal: action.payload\n            }\n        case UPDATE_MODAL_MODE:\n            return {\n                ...state,\n                modalMode: action.payload\n            }\n        case UPDATE_CURRENT_LIST_ID:\n            return {\n                ...state,\n                currentListId: action.payload\n            }\n        case UPDATE_CARD_DATA:\n            return {\n                ...state,\n                cardData: action.payload\n            }\n        default:\n            return state;\n    }\n};\n\nexport const ScrumboardContext = createContext();\n\nexport const ScrumboardProvider = ({children}) => {\n    const updatedState = {\n        columns: children.props.columns,\n        ordered: Object.keys(scrumboardData),\n        modal: false,\n        modalMode: '',\n        currentListId: '',\n        cardData: null\n    };\n    const [state, dispatch] = useReducer(scrumboardReducer, updatedState);\n\n    useEffect(() => {\n        dispatch({\n            type: UPDATE_COLUMN,\n            payload: children?.props.columns\n        })\n    }, [children])\n\n    const dispatcher = {\n        updateOrdered: function (ordered) {\n            dispatch({\n                type: UPDATE_ORDERED,\n                payload: ordered\n            });\n        },\n        updateColumns: function (columns) {\n            dispatch({\n                type: UPDATE_COLUMN,\n                payload: columns\n            });\n        },\n        updateModal: function (modal) {\n            dispatch({\n                type: UPDATE_MODAL,\n                payload: modal\n            });\n        },\n        updateModalMode: function (modalMode) {\n            dispatch({\n                type: UPDATE_MODAL_MODE,\n                payload: modalMode\n            });\n        },\n        updateCurrentListId: function (currentListId) {\n            dispatch({\n                type: UPDATE_CURRENT_LIST_ID,\n                payload: currentListId\n            });\n        },\n        updateCardData: function (cardData) {\n            dispatch({\n                type: UPDATE_CARD_DATA,\n                payload: cardData\n            });\n        }\n    }\n\n    return (\n        <ScrumboardContext.Provider\n            value={{\n                ...state,\n                ...dispatcher\n            }}\n        >\n            {children}\n        </ScrumboardContext.Provider>\n    );\n};\n","import React from 'react';\nimport {Avatar, Tooltip} from 'antd';\nimport {labels, membersDetail} from './ScrumboardData';\n\nconst createUID = (len) => {\n    const buf = [],\n        chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',\n        charlen = chars.length,\n        length = len || 32;\n\n    for (let i = 0; i < length; i++) {\n        buf[i] = chars.charAt(Math.floor(Math.random() * charlen));\n    }\n    return buf.join('');\n};\n\nexport const modalModeTypes = (number) => {\n    switch (number) {\n        case 0:\n            return 'ADD_CARD';\n        case 1:\n            return 'EDIT_CARD';\n        case 2:\n            return 'ADD_BOARD';\n        default:\n            return '';\n    }\n};\n\nexport const getLabelsColor = (label) => {\n    if (label) {\n        const color = labels.filter((elm) => label === elm.label)[0].color;\n        return color;\n    }\n    return;\n};\n\nexport const getMember = (id) => {\n    if (id) {\n        const member = membersDetail.filter((elm) => id === elm.id)[0];\n        if (member) {\n            return <Avatar src={member.img}></Avatar>;\n        }\n    }\n    return;\n};\n\nexport const getCover = (id, attachments) => {\n    if (id) {\n        const cover = attachments.filter((elm) => id === elm.id)[0].src;\n        return cover;\n    }\n    return;\n};\n\nexport const AssigneeAvatar = ({id, size = 20, name, chain}) => {\n    if (id) {\n        const member = membersDetail.filter((elm) => id === elm.id)[0];\n        if (member) {\n            return (\n                <div className={`d-flex ${chain ? 'ml-n2' : ''}`}>\n                    <Tooltip title={name ? '' : member.name}>\n                        <Avatar\n                            className='cursor-pointer'\n                            size={size}\n                            src={member.img}\n                            style={chain ? {border: '2px solid #fff'} : {}}\n                        ></Avatar>\n                    </Tooltip>\n                    {name ? (\n                        <span className='mb-0 ml-2 font-weight-semibold'>\n              {member.name}\n            </span>\n                    ) : null}\n                </div>\n            );\n        }\n    }\n    return null;\n};\n\nexport const createCardObject = () => {\n    return {\n        id: createUID(10),\n        name: '',\n        description: '',\n        cover: '',\n        members: [],\n        labels: [],\n        attachments: [],\n        checklists: [],\n        comments: [],\n        dueDate: null,\n    };\n};\n\nexport const createCommentObject = () => {\n    return {\n        id: createUID(10),\n        name: 'Eileen Horton',\n        src: '/img/avatars/thumb-11.jpg',\n        message: '',\n        date: new Date(),\n    };\n};\n","import React from 'react';\nimport {Draggable, Droppable} from 'react-beautiful-dnd';\nimport {Card, Tooltip, Tag} from 'antd';\nimport {getLabelsColor, AssigneeAvatar} from './utils';\nimport {\n    CalendarOutlined,\n    CommentOutlined,\n    PaperClipOutlined,\n} from '@ant-design/icons';\nimport moment from 'moment';\nimport {Scrollbars} from 'react-custom-scrollbars';\n\nconst InnerCardList = React.memo(function InnerCardList(props) {\n    return props.contents?.map((item, index) => (\n        <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\n            {(dragProvided, dragSnapshot) => (\n                <div\n                    className='mb-3'\n                    key={item.id}\n                    ref={dragProvided.innerRef}\n                    {...dragProvided.draggableProps}\n                    {...dragProvided.dragHandleProps}\n                >\n                    <Card\n                        hoverable\n                        className='board-card'\n                        cover={null}\n                        onClick={() => props.cardData(item, props.listId)}\n                    >\n                        <Tooltip title={item.status} key={item.status}>\n                            <div className={`board-label ${getLabelsColor(item.status)}`}></div>\n                        </Tooltip>\n                        <h4 className='mb-2'>{item.todoname}</h4>\n                        <div className='d-flex justify-content-between align-items-center'>\n                            <div className='d-flex align-items-center'>\n                                {\n                                    <Tag className='bg-gray-lightest'>\n                                        <span className='ml-1 font-weight-semibold'>{item.type}</span>\n                                    </Tag>\n                                }\n                                <div className='d-flex align-self-end'>\n                                    {/*<SubIndicator*/}\n                                    {/*  counts={item.comments.length}*/}\n                                    {/*  icon={<CommentOutlined />}*/}\n                                    {/*/>*/}\n                                </div>\n                            </div>\n                        </div>\n                    </Card>\n                </div>\n            )}\n        </Draggable>\n    ));\n});\n\nfunction InnerList(props) {\n    const {contents, dropProvided, cardData, listId} = props;\n\n    return (\n        <div className='board-dropzone' ref={dropProvided.innerRef}>\n            <InnerCardList cardData={cardData} contents={contents} listId={listId}/>\n            {dropProvided.placeholder}\n        </div>\n    );\n}\n\nfunction SubIndicator(props) {\n    if (props.counts) {\n        return (\n            <p className='mb-0 mr-2'>\n                {props.icon}\n                <span className='ml-1'>{props.counts}</span>\n            </p>\n        );\n    }\n    return null;\n}\n\nexport default function BoardCard(props) {\n    const {\n        ignoreContainerClipping,\n        internalScroll,\n        scrollContainerStyle,\n        isDropDisabled,\n        isCombineEnabled,\n        listId = 'LIST',\n        listType,\n        style,\n        contents,\n        useClone,\n        cardData,\n    } = props;\n    return (\n        <>\n            <Droppable\n                droppableId={listId}\n                type={listType}\n                ignoreContainerClipping={ignoreContainerClipping}\n                isDropDisabled={isDropDisabled}\n                isCombineEnabled={isCombineEnabled}\n                renderClone={useClone}\n            >\n                {(dropProvided, dropSnapshot) => (\n                    <Scrollbars\n                        style={style}\n                        className='board-wrapper'\n                        autoHide\n                        {...dropProvided.droppableProps}\n                    >\n                        {internalScroll ? (\n                            <div\n                                className='board-scrollContainer'\n                                style={scrollContainerStyle}\n                            >\n                                <InnerList\n                                    contents={contents}\n                                    listId={listId}\n                                    cardData={cardData}\n                                    dropProvided={dropProvided}\n                                />\n                            </div>\n                        ) : (\n                            <InnerList\n                                contents={contents}\n                                listId={listId}\n                                cardData={cardData}\n                                dropProvided={dropProvided}\n                            />\n                        )}\n                    </Scrollbars>\n                )}\n            </Droppable>\n        </>\n    );\n}\n","import React, {useContext, useState} from 'react';\nimport {ScrumboardContext} from './ScrumboardContext';\nimport {Draggable} from 'react-beautiful-dnd';\nimport BoardCard from './BoardCard';\nimport {modalModeTypes} from './utils';\n\n\nconst Board = ({\n                   title,\n                   contents,\n                   index,\n                   isScrollable,\n                   isCombineEnabled,\n                   useClone,\n               }) => {\n    const {\n        updateModal,\n        updateModalMode,\n        updateCurrentListId,\n        updateCardData,\n        columns,\n        updateColumns,\n        ordered,\n        updateOrdered,\n    } = useContext(ScrumboardContext);\n    const [renameActive, setRenameActive] = useState('');\n\n    const onUpdateCardModal = (obj, listId) => {\n        updateModal(true);\n        updateModalMode(modalModeTypes(1));\n        updateCurrentListId(listId);\n        updateCardData(obj);\n    };\n\n    const onFinish = (newTitle) => {\n        if (newTitle) {\n            const newColumns = {};\n            delete Object.assign(newColumns, columns, {[newTitle]: columns[title]})[\n                title\n                ];\n            const newOrder = ordered.map((elm) => {\n                if (elm === title) {\n                    return newTitle;\n                }\n                return elm;\n            });\n            updateColumns(newColumns);\n            updateOrdered(newOrder);\n        }\n        setRenameActive('');\n    };\n\n    return (\n        <Draggable draggableId={title} index={index}>\n            {(provided, snapshot) => (\n                <div\n                    className='board-column'\n                >\n                    <div className='board-title'>\n                                <h4 className='mb-0'>{title}</h4>\n\n                    </div>\n                    <BoardCard\n                        listId={title}\n                        listType='CONTENT'\n                        className={snapshot.isDragging ? 'is-dragging' : ''}\n                        contents={contents}\n                        internalScroll={isScrollable}\n                        isCombineEnabled={isCombineEnabled}\n                        useClone={useClone}\n                        cardData={onUpdateCardModal}\n                    />\n                </div>\n            )}\n        </Draggable>\n    );\n};\n\nexport default Board;\n","const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n};\n\nexport const reorderQuoteMap = ({quoteMap, source, destination}) => {\n    const current = [...quoteMap[source.droppableId]];\n    const next = [...quoteMap[destination.droppableId]];\n    const target = current[source.index];\n\n    // moving to same list\n    if (source.droppableId === destination.droppableId) {\n        const reordered = reorder(\n            current,\n            source.index,\n            destination.index,\n        );\n        const result = {\n            ...quoteMap,\n            [source.droppableId]: reordered,\n        };\n        return {\n            quoteMap: result,\n        };\n    }\n    current.splice(source.index, 1);\n    next.splice(destination.index, 0, target);\n    const result = {\n        ...quoteMap,\n        [source.droppableId]: current,\n        [destination.droppableId]: next,\n    };\n\n    return {\n        quoteMap: result,\n    };\n};\n\nconst clone = (obj) => Object.assign({}, obj);\n\nexport const renameKey = (object, key, newKey) => {\n    const clonedObj = clone(object);\n    const targetKey = clonedObj[key];\n    delete clonedObj[key];\n    clonedObj[newKey] = targetKey;\n    return clonedObj;\n};\n\n\nexport default reorder;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { ScrumboardContext, ScrumboardProvider } from \"./ScrumboardContext\";\nimport Board from \"./Board\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport reorder, { reorderQuoteMap } from \"./reoreder\";\nimport { createCardObject, modalModeTypes } from \"./utils\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getKanbanTodoLoading,\n  updateTodoStage,\n} from \"../../redux/action/todoAction\";\nimport { Row, Spin } from \"antd\";\n\nconst ScrumboardWrapper = (props) => {\n  const {\n    ordered,\n    columns,\n    cardData,\n    currentListId,\n    updateOrdered,\n    updateColumns,\n    updateModal,\n    updateCurrentListId,\n  } = useContext(ScrumboardContext);\n  const onDragEnd = async (result) => {\n    if (result.combine) {\n      // if (result.type === 'COLUMN') {\n      //     const shallow = [...ordered];\n      //     shallow.splice(result.source.index, 1);\n      //     updateOrdered(shallow);\n      //     return;\n      // }\n\n      const column = columns[result.source.droppableId];\n      const withQuoteRemoved = [...column];\n      withQuoteRemoved.splice(result.source.index, 1);\n      const newColumns = {\n        ...columns,\n        [result.source.droppableId]: withQuoteRemoved,\n      };\n      updateColumns(newColumns);\n      return;\n    }\n\n    if (!result.destination) {\n      return;\n    }\n\n    const source = result.source;\n    const destination = result.destination;\n\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n\n    // if (result.type === 'COLUMN') {\n    //     const newOrdered = reorder(ordered, source.index, destination.index);\n    //     updateOrdered(newOrdered);\n    //     return;\n    // }\n    const data = reorderQuoteMap({\n      quoteMap: columns,\n      source,\n      destination,\n    });\n    updateColumns(data.quoteMap);\n    let updatedTodo;\n    if (result.destination.droppableId === \"Todo\") {\n      updatedTodo = data.quoteMap[\"Todo\"][result.destination.index];\n    } else if (result.destination.droppableId === \"Research\") {\n      updatedTodo = data.quoteMap[\"Research\"][result.destination.index];\n    } else if (result.destination.droppableId === \"Inprogress\") {\n      updatedTodo =\n        data.quoteMap[\"Inprogress\"][result.destination.index];\n    } else if (result.destination.droppableId === \"Review\") {\n      updatedTodo =\n        data.quoteMap[\"Review\"][result.destination.index];\n    } else {\n      updatedTodo =\n        data.quoteMap[\"Completed\"][result.destination.index];\n    } \n    // else {\n    //   updatedTodo =\n    //     data.quoteMap[\"5M Purchases\"][result.destination.index];\n    // }\n    let stageId = 1;\n    let stageName = \"\";\n    switch (result.destination.droppableId) {\n      case \"Todo\":\n        stageId = 1;\n        stageName = \"Todo\";\n        break;\n      case \"Research\":\n        stageId = 2;\n        stageName = \"Research\";\n        break;\n      case \"Inprogress\":\n        stageId = 3;\n        stageName = \"Inprogress\";\n        break;\n      case \"Review\":\n        stageId = 4;\n        stageName = \"Review\";\n        break;\n      case \"Completed\":\n        stageId = 5;\n        stageName = \"Completed\";\n        break;\n      // case \"5M Purchases\":\n      //   stageId = 6;\n      //   stageName = \"5M Purchases\";\n        break;\n    }\n    updatedTodo.stageid = stageId;\n    updatedTodo.stagename = stageName;\n    try {\n      await props.updateTodoStage({\n        id: updatedTodo.id,\n        stageid: stageId,\n        name: stageName,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onCloseModal = () => {\n    updateModal(false);\n  };\n\n  const onModalSubmit = (values, mode) => {\n    const data = columns;\n    if (mode === modalModeTypes(0)) {\n      let newCard = createCardObject();\n      newCard.name = values.cardTitle ? values.cardTitle : \"Untitled Card\";\n      data[currentListId].push(newCard);\n      updateColumns(data);\n      updateModal(false);\n      updateCurrentListId(\"\");\n    }\n\n    if (mode === modalModeTypes(1)) {\n      const updatadedCard = data[currentListId].map((elm) => {\n        if (values.id === elm.id) {\n          elm = values;\n        }\n        return elm;\n      });\n      data[currentListId] = updatadedCard;\n      updateColumns(data);\n      updateModal(false);\n    }\n\n    if (mode === modalModeTypes(2)) {\n      data[values.boardTitle ? values.boardTitle : \"Untitled Board\"] = [];\n      const newOrdered = [\n        ...ordered,\n        ...[values.boardTitle ? values.boardTitle : \"Untitled Board\"],\n      ];\n      let newColumns = {};\n      newOrdered.forEach((elm) => {\n        newColumns[elm] = data[elm];\n      });\n      updateColumns(newColumns);\n      updateOrdered(Object.keys(newColumns));\n      updateModal(false);\n    }\n  };\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 1000);\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Row justify='center' align='middle' style={{ height: \"70vh\" }}>\n          <Spin spinning={loading} style={{ opacity: 1 }} size={\"large\"}>\n            <div></div>\n          </Spin>\n        </Row>\n      ) : (\n        <DragDropContext onDragEnd={(result) => onDragEnd(result)}>\n          {props.containerHeight ? (\n            <div className='scrumboard'>\n              <BoardWrapper {...props} />\n            </div>\n          ) : (\n            <BoardWrapper {...props} />\n          )}\n        </DragDropContext>\n      )}\n    </>\n  );\n};\nconst BoardWrapper = ({\n  containerHeight,\n  useClone,\n  isCombineEnabled,\n  withScrollableColumns,\n}) => {\n  const { ordered, columns, updateModal, updateModalMode } = useContext(\n    ScrumboardContext\n  );\n\n  const onAddBoardModal = () => {\n    updateModal(true);\n    updateModalMode(modalModeTypes(2));\n  };\n  return (\n    <Droppable\n      droppableId='board'\n      type='COLUMN'\n      direction='horizontal'\n      ignoreContainerClipping={containerHeight}\n      isCombineEnabled={isCombineEnabled}\n    >\n      {(provided) => (\n        <div\n          className='scrumboard'\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          <Scrollbars className='scrumboard-body'>\n            {ordered.map((key, index) => (\n              <Board\n                key={key}\n                index={index}\n                title={key}\n                contents={columns[key]}\n                isScrollable={withScrollableColumns}\n                isCombineEnabled={isCombineEnabled}\n                useClone={useClone}\n              />\n            ))}\n          </Scrollbars>\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nconst TodoKanban = (props) => {\n  const { getKanbanTodoLoading } = props;\n  useEffect(() => {\n    getKanbanTodoLoading();\n  }, []);\n\n  return (\n    <ScrumboardProvider>\n      <ScrumboardWrapper {...props} />\n    </ScrumboardProvider>\n  );\n};\n\nTodoKanban.prototype = {\n  columns: PropTypes.object.isRequired,\n  columnLoading: PropTypes.object.isRequired,\n  updateTodoStage: PropTypes.func.isRequired,\n  getKanbanTodoLoading: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => {\n  return {\n    columns: state.todo.columns,\n    columnLoading: state.todo.kanbanLoading,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getKanbanTodoLoading,\n  updateTodoStage,\n})(TodoKanban);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Radio, Button, PageHeader, Row, Col, Select, Form, Input } from \"antd\";\nimport { BsGrid1X2 } from \"react-icons/bs\";\nimport { UnorderedListOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport AppBreadcrumb from \"components/layout-components/AppBreadcrumb\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n//components\nimport TodoList from \"./todo-listTable/todoList\";\nimport TodoKanban from \"./todo-kanban/todoKanban\";\n\nimport { loaddata, loadFilteredData } from \"../redux/action/todoAction\";\n\n\nconst VIEW_LIST = \"LIST\";\nconst VIEW_SCRUMBOARD = \"SCRUMBOARD\";\n\nconst ContectFilterGroup = (props) => {\n  const [filterForm] = Form.useForm();\n  const { parentCallback } = props;\n\n  const onFilter = () => {\n    filterForm.validateFields().then((values) => {\n      console.log(values);\n      const data = {\n        category: values.category,\n        todoType: values.type,\n        todoName: values.searchText,\n      };\n      parentCallback(data);\n    });\n  };\n\n  // const onSearchChange = (val) => {\n  //   // console.log(val.target.value)\n  //   const lowercasedFilter = val.target.value.toLowerCase();\n  //   // const filteredData = todoList.filter(item => {\n  //   //   return Object.keys(item).some(key =>\n  //   //     item[\"todoname\"]?.toLowerCase().includes(lowercasedFilter)\n  //   //   );\n  //   // });\n\n  //   // console.log(filteredData)\n  //   parentCallback(lowercasedFilter)\n  // }\n\n  return (\n    <Form form={filterForm}>\n      <Row gutter={8}>\n        <Col xs={24} md={21}>\n          <Row gutter={10}>\n            <Col xs={24} md={8}>\n              <Form.Item name=\"searchText\">\n                <Input.Search placeholder=\"Search\" />\n              </Form.Item>\n            </Col>\n            {/* <Col xs={24} md={8}>\n              <Form.Item name=\"category\">\n                <Select placeholder=\"Category\" style={{ width: \"100%\" }}>\n                  <Select.Option value=\"New\">New</Select.Option>\n                  <Select.Option value=\"Existing\">Existing</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col> */}\n            <Col xs={24} md={8}>\n              <Form.Item name=\"status\">\n                <Select\n                  placeholder=\"Status\"\n                  style={{ width: \"100%\" }}\n                  // loading={todoTypeLoading}\n                >\n                  {/* {todoTypeData?.map((influ) => {\n                    return (\n                      <Select.Option key={influ.id} value={influ.category_name}>\n                        {influ.category_name}\n                      </Select.Option>\n                    );\n                  })} */}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Col>\n        <Col xs={24} md={3}>\n          <Button style={{ width: \"100%\" }} onClick={onFilter}>\n            Search\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nconst TodoMain = (props) => {\n  let history = useHistory();\n  const [view, setView] = useState(VIEW_LIST);\n\n  const {\n    todo: { data, page, total, loading },\n    loaddata,\n    loadFilteredData,\n   \n   \n    // todoTypeLoading,\n  } = props;\n\n  useEffect(() => {\n    loaddata(1);\n \n    // loadFilteredData(1,\"Existing\", \"Enginner\", \"Knight Rider\")\n    //eslint-disable-next-line\n  }, []);\n\n \n  const onChangePage = (page) => {\n    loaddata(page);\n  };\n\n  const onChangeProjectView = (e) => {\n    setView(e.target.value);\n  };\n\n  const addTodo = () => {\n    history.push(`/app/todo/list/add`);\n  };\n\n  const handleCallback = (childData) => {\n    console.log(childData);\n    loadFilteredData(\n      1,\n      childData.category,\n      childData.todoType,\n      childData.todoName\n    );\n  };\n\n  const extraViewBtnGroup = (\n    <div>\n      <Radio.Group\n        defaultValue={VIEW_LIST}\n        onChange={(e) => onChangeProjectView(e)}\n      >\n        <Radio.Button value={VIEW_SCRUMBOARD}>\n          <BsGrid1X2 style={{ paddingTop: \"1\" }} />\n        </Radio.Button>\n        <Radio.Button value={VIEW_LIST}>\n          <UnorderedListOutlined />\n        </Radio.Button>\n      </Radio.Group>\n\n      <Button\n        type=\"primary\"\n        className=\"ml-2\"\n        shape=\"round\"\n        style={{ width: \"41px\", padding: \"0\" }}\n        onClick={addTodo}\n      >\n        <PlusOutlined />\n      </Button>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"Todo List\"\n        subTitle={<AppBreadcrumb />}\n        extra={[extraViewBtnGroup]}\n      />\n      <Col>\n        {view === VIEW_LIST ? (\n          <ContectFilterGroup\n            parentCallback={handleCallback}\n            // todoTypeData={todoTypeData}\n            // todoTypeLoadin={todoTypeLoading}\n          />\n        ) : null}\n      </Col>\n      <div className={`my-4 ${view === VIEW_LIST ? \"\" : \"container-fluid\"}`}>\n        {view === VIEW_LIST ? (\n          <TodoList\n            todoList={data}\n            page={page}\n            total={total}\n            loading={loading}\n            onChangePage={onChangePage}\n          />\n        ) : (\n          <TodoKanban />\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nTodoMain.prototype = {\n  todo: PropTypes.object.isRequired,\n  loaddata: PropTypes.func.isRequired,\n  loadFilteredData: PropTypes.func.isRequired,\n  // todoTypeData: PropTypes.object.isRequired,\n\n  // todoTypeLoading: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  todo: state.todo,\n  // todoTypeData: state.todoType.todoTypeData,\n  // todoTypeLoading: state.todoType.todoTypeLoading,\n});\nexport default connect(mapStateToProps, {\n  loaddata,\n  loadFilteredData,\n\n})(TodoMain);\n"],"sourceRoot":""}