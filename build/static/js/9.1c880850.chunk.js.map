{"version":3,"sources":["assets/images/addcustomerbg.png","views/app-views/todo/todo-list/todo-listTable/editTodo.js"],"names":["EditTodo","props","current","updateTodo","loading","console","log","history","useHistory","Form","useForm","form","useEffect","setFieldsValue","owner","title","status","description","startDate","moment","endDate","display","className","bordered","style","width","justify","align","xs","sm","md","lg","labelCol","Item","label","name","required","placeholder","value","Option","gutter","htmlType","onClick","e","preventDefault","goBack","type","validateFields","then","values","updateTodoNewData","projectId","push","justifyContent","src","BgImg","alt","prototype","PropTypes","object","isRequired","func","connect","state","todo"],"mappings":"oRAAe,MAA0B,0C,eC2BnCA,EAAW,SAACC,GAChB,IACEC,EAKED,EALFC,QACAC,EAIEF,EAJFE,WAIEF,EAHFG,QAIFC,QAAQC,IAAIJ,EAAQ,WAEpB,IAAIK,EAAUC,cACd,EAAeC,IAAKC,UAAbC,EAAP,oBAEAC,qBAAU,WACRD,EAAKE,eAAe,CAClBC,MAAOZ,EAAQY,MACfC,MAAQb,EAAQa,MAChBC,OAAQd,EAAQc,OAChBC,YAAYf,EAAQe,YACpBC,UAAUC,IAAOjB,EAAQgB,WACzBE,QAASD,IAAOjB,EAAQkB,aAEzB,CAACT,EAAMT,IA+BV,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAYa,MAAM,YAAYM,SAAO,IACrC,qBAAKC,UAAU,YAAf,SACE,cAAC,IAAD,CAAMC,UAAU,EAAOC,MAAO,CAAEC,MAAO,QAAvC,SACA,eAAC,IAAD,CAAKC,QAAQ,SAASC,MAAM,SAA5B,UACI,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SAEE,eAAC,IAAD,CAAMpB,KAAMA,EAAMqB,SAAU,CAAED,GAAI,EAAGD,GAAI,GAAzC,UACE,cAAC,IAAKG,KAAN,CAAWC,MAAM,eAAeC,KAAK,QAAUC,UAAU,EAAzD,SACE,cAAC,IAAD,MAEF,cAAC,IAAKH,KAAN,CAAWC,MAAM,gBAAgBC,KAAK,QAAUC,UAAU,EAA1D,SACE,cAAC,IAAD,MAGF,cAAC,IAAKH,KAAN,CAAWC,MAAM,SAASC,KAAK,SAAWC,UAAU,EAApD,SACA,eAAC,IAAD,CAAQC,YAAY,kBAAkBC,OAAK,EAA3C,UACI,cAAC,IAAOC,OAAR,CAAeD,MAAM,OAArB,mBACA,cAAC,IAAOC,OAAR,CAAeD,MAAM,WAArB,sBACA,cAAC,IAAOC,OAAR,CAAeD,MAAM,aAArB,wBACA,cAAC,IAAOC,OAAR,CAAeD,MAAM,SAArB,oBACA,cAAC,IAAOC,OAAR,CAAeD,MAAM,YAArB,4BAGJ,cAAC,IAAKL,KAAN,UACE,eAAC,IAAD,CAAKO,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKZ,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAzB,SACE,cAAC,IAAKE,KAAN,CAAWC,MAAM,aAAaC,KAAK,YAAaH,SAAU,CAAED,GAAI,GAAID,GAAI,GAAOM,UAAU,EAAzF,SACE,cAAC,IAAD,QAKJ,cAAC,IAAD,CAAKR,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAzB,SACE,cAAC,IAAKE,KAAN,CAAWC,MAAM,WAAWC,KAAK,UAAUH,SAAU,CAAED,GAAI,GAAID,GAAI,GAAOM,UAAU,EAApF,SACE,cAAC,IAAD,aAQR,cAAC,IAAKH,KAAN,CACEC,MAAM,cACNC,KAAK,cACLC,UAAU,EAHZ,SAME,cAAC,IAAD,MAEF,cAAC,IAAKH,KAAN,UACE,eAAC,IAAD,CAAKO,OAAQ,GAAId,QAAQ,MAAzB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQe,SAAS,SAASC,QA3D7B,SAACC,GAChBA,EAAEC,iBACFrC,EAAQsC,UAyDU,sBAIF,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,KAAK,UACLL,SAAS,SACTC,QA5FL,SAACC,GAChBA,EAAEC,iBACFjC,EAAKoC,iBAAiBC,MAAK,SAACC,GAC1B,IACEnC,EAMEmC,EANFnC,MACAC,EAKEkC,EALFlC,MACAC,EAIEiC,EAJFjC,OACAC,EAGEgC,EAHFhC,YACAC,EAEE+B,EAFF/B,UACAE,EACE6B,EADF7B,QAEI8B,EAAoB,CACxBC,UAAWjD,EAAQiD,UACnBrC,MAAOA,EACPC,MAAQA,EACRC,OAAQA,EACRC,YAAYA,EACZC,UAAWA,EACXE,QAASA,GAEXf,QAAQC,IAAI4C,EAAkB,eAC9B/C,EAAW+C,GACX3C,EAAQ6C,KAAK,sBAmEG,6BAaV,cAAC,IAAD,CACE9B,UAAU,cACVQ,GAAI,GACJC,GAAI,GACJP,MAAO,CACLH,QAAS,OACTgC,eAAgB,UANpB,SASE,qBAAKC,IAAKC,EAAOC,IAAI,QAAQ/B,MAAM,MAAMH,UAAU,qBASjEtB,EAASyD,UAAY,CACnBvD,QAASwD,IAAUC,OAAOC,WAC1BzD,WAAYuD,IAAUG,KAAKD,WAC3BxD,QAASsD,IAAUC,OAAOC,YAWbE,uBANS,SAACC,GAAD,MAAY,CAClC7D,QAAS6D,EAAMC,KAAK9D,QACpBE,QAAS2D,EAAMC,KAAK5D,WAIkB,CACtCD,gBADa2D,CAGZ9D","file":"static/js/9.1c880850.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/addcustomerbg.fb735161.png\";","import React, { Fragment, useEffect } from 'react';\nimport {\n  Button,\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n  Select,\n  Switch,\n  PageHeader,\n  DatePicker\n} from 'antd';\nimport FormItem from 'antd/lib/form/FormItem';\nimport TextArea from 'antd/lib/input/TextArea';\nimport moment from \"moment\";\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport BgImg from '../../../../../assets/images/addcustomerbg.png';\n\nimport { updateTodo } from '../../redux/action/todoAction';\n\n\n\n\nconst EditTodo = (props) => {\n  const {\n    current,\n    updateTodo,\n    loading,\n   \n   \n  } = props;\n  console.log(current,\"current\");\n\n  let history = useHistory();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    form.setFieldsValue({\n      owner: current.owner,\n      title : current.title,\n      status: current.status,\n      description:current.description,\n      startDate:moment(current.startDate),\n      endDate: moment(current.endDate),\n    });\n  }, [form, current]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    form.validateFields().then((values) => {\n      const {\n        owner,\n        title,\n        status,\n        description,\n        startDate,\n        endDate,\n      } = values;\n      const updateTodoNewData = {\n        projectId: current.projectId,\n        owner: owner,\n        title : title,\n        status: status,\n        description:description,\n        startDate: startDate,\n        endDate: endDate,\n      };\n      console.log(updateTodoNewData,\"update data\");\n      updateTodo(updateTodoNewData);\n      history.push('/app/todo/list');\n    });\n  };\n  const onCancle = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n  return (\n    <Fragment>\n      <PageHeader title='Edit Todo' display />\n      <div className='container'>\n        <Card bordered={false} style={{ width: '100%' }}>\n        <Row justify=\"center\" align=\"middle\">\n            <Col xs={24} sm={24} md={24} lg={14}>\n              {/* Form */}\n              <Form form={form} labelCol={{ lg: 6, md: 6 }}>\n                <Form.Item label=\"Project Name\" name=\"title\"   required={true}>\n                  <Input />\n                </Form.Item>\n                <Form.Item label=\"Assignee Name\" name=\"owner\"   required={true}>\n                  <Input />\n                </Form.Item>\n\n                <Form.Item label=\"Status\" name=\"status\"   required={true}>\n                <Select placeholder=\"-Select Status-\" value>\n                    <Select.Option value=\"Todo\">To-Do</Select.Option>\n                    <Select.Option value=\"Research\">Research</Select.Option>\n                    <Select.Option value=\"Inprogress\">Inprogress</Select.Option>\n                    <Select.Option value=\"Review\">Review</Select.Option>\n                    <Select.Option value=\"completed\">Completed</Select.Option>\n                  </Select>\n                </Form.Item>\n                <Form.Item>\n                  <Row gutter={16}>\n                    <Col xs={24} md={24} lg={12}>\n                      <Form.Item label=\"Start Date\" name=\"startDate\"  labelCol={{ lg: 12, md: 6 }}   required={true}>\n                        <DatePicker\n                          // defaultValue={moment(\"2022-01-01\", \"YYYY-MM-DD\")}\n                        />\n                      </Form.Item>\n                    </Col>\n                    <Col xs={24} md={24} lg={12}>\n                      <Form.Item label=\"End Date\" name=\"endDate\" labelCol={{ lg: 12, md: 6 }}   required={true}>\n                        <DatePicker\n                          // defaultValue={moment(\"2022-01-01\", \"YYYY-MM-DD\")}\n                        />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Description\"\n                  name=\"description\"\n                  required={true}\n                \n                >\n                  <TextArea />\n                </Form.Item>\n                <Form.Item>\n                  <Row gutter={16} justify=\"end\">\n                    <Col>\n                      <Button htmlType=\"button\" onClick={onCancle}>\n                        Cancel\n                      </Button>\n                    </Col>\n                    <Col>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        onClick={onSubmit}\n                      >\n                        Add\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Form>\n            </Col>\n\n            <Col\n              className='bgImgOfForm'\n              md={12}\n              lg={10}\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              <img src={BgImg} alt='bgimg' width='300' className='img' />\n            </Col>\n          </Row>\n        </Card>\n      </div>\n    </Fragment>\n  );\n};\n\nEditTodo.prototype = {\n  current: PropTypes.object.isRequired,\n  updateTodo: PropTypes.func.isRequired,\n  loading: PropTypes.object.isRequired,\n  // todoTypeData: PropTypes.object.isRequired,\n  // todoTypeLoading: PropTypes.object.isRequired,\n\n};\nconst mapStateToProps = (state) => ({\n  current: state.todo.current,\n  loading: state.todo.loading,\n  // todoTypeData: state.todoType,\n  // todoTypeLoading: state.todoType.todoTypeLoading,\n});\nexport default connect(mapStateToProps, {\n  updateTodo,\n\n})(EditTodo);\n"],"sourceRoot":""}